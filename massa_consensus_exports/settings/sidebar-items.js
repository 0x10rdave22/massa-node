initSidebarItems({"constant":[["CHANNEL_SIZE",""],["DELTA_F0","Threshold for fitness."],["ENDORSEMENT_COUNT",""],["MAX_BLOCK_SIZE","Maximum block size in bytes"],["MAX_GAS_PER_BLOCK",""],["MAX_OPERATIONS_PER_BLOCK","Maximum number of operations per block"],["OPERATION_VALIDITY_PERIODS","Maximum operation validity period count"],["PERIODS_PER_CYCLE","cycle duration in periods"],["POS_LOCK_CYCLES","PoS lock cycles: when some rolls are released, we only credit the coins back to their owner after waiting  pos_lock_cycles"],["POS_LOOKBACK_CYCLES","PoS lookback cycles: when drawing for cycle N, we use the rolls from cycle N - pos_lookback_cycles - 1"],["THREAD_COUNT","Number of threads"]],"struct":[["BLOCK_REWARD",""],["ConsensusChannels","Public channels associated to the consensus module. Execution & Protocol Sender/Receiver"],["ConsensusConfig","Consensus full configuration (static + user defined)"],["ConsensusSettings","Consensus configuration Assumes thread_count >= 1, t0_millis >= 1, t0_millis % thread_count == 0"],["ConsensusWorkerChannels","Communication async channels for the consensus worker Contains consensus channels associated (protocol & execution) Contains alse controller async channels (command, manager receivers and event sender) Contains a sender to the pool worker commands"],["END_TIMESTAMP","TESTNET: time when the blockclique is ended."],["GENESIS_KEY","Private_key to sign genesis blocks."],["GENESIS_TIMESTAMP","Time in millis when the blockclique started."],["INITIAL_DRAW_SEED",""],["POS_MISS_RATE_DEACTIVATION_THRESHOLD","number of cycle misses (strictly) above which stakers are deactivated"],["ROLL_PRICE",""],["T0","Time between the periods in the same thread."]]});