searchState.loadedDescShard("massa_event_cache", 0, "Path to the hard drive cache storage\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of entries we want to keep in the event …\nMaximum length of an event data (aka event message)\nCall stack max length\nAmount of entries removed when <code>event_cache_size</code> is reached\nThread count\ninterface that communicates with the worker thread\nimplementation of the event cache controller\nstructure used to communicate with controller\nEvent cache\nReturns the argument unchanged.\nReturns the argument unchanged.\ninput data to process in the VM loop with a wake-up …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nset stop to true to stop the thread\nTakes the current input data into a clone that is returned,\nRocksDB database\nHow many entries are in the db. Count is initialized at …\nEvent deserializer\nEvent serializer\nReturns the argument unchanged.\nInsert a new event in the cache\nInsert new events in the cache\nCalls <code>U::from(self)</code>.\nMaximum number of entries we want to keep in the db. When …\nCreate a new EventCache\nTry to remove some entries from the db\nHow many entries are removed when <code>entry_count</code> reaches …\nSCOutputEvent deserializer\nSCOutputEvent deserializer args\nMetadata serializer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvent cache manager trait used to stop the event cache …\n… manager Allows stopping the … worker\nStructure gathering all elements needed by the event cache …\nEvent cache\nReturns the argument unchanged.\nReturns the argument unchanged.\ninput data to process in the VM loop with a wake-up …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMain loop of the worker\nStop the event cache thread Note that we do not take self …\nstops the worker\nhandle used to join the worker thread\nWaits for an event to trigger a new iteration in the ….")