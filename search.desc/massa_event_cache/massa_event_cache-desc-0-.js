searchState.loadedDescShard("massa_event_cache", 0, "Path to the hard drive cache storage\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of entries we want to keep in the event …\nMaximum length of an event data (aka event message)\nCall stack max length\nAmount of entries removed when <code>event_cache_size</code> is reached\nThread count\nFinal event cache controller\nCache config. See <code>EventCacheConfig</code> documentation for more …\nEvent stored cache. See the <code>EventCache</code> documentation for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>EventCacheController</code>\nRocksDB database\nHow many entries are in the db. Count is initialized at …\nEvent deserializer\nEvent serializer\nReturns the argument unchanged.\nInsert a new event in the cache\nInsert new events in the cache\nCalls <code>U::from(self)</code>.\nMaximum number of entries we want to keep in the db. When …\nCreate a new EventCache\nTry to remove some entries from the db\nHow many entries are removed when <code>entry_count</code> reaches …\nSCOutputEvent deserializer\nSCOutputEvent deserializer args\nMetadata serializer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")