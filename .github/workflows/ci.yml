name: Rust

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

env:
  CARGO_TERM_COLOR: always

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
        components: rustfmt, rust-src
    - name: Cargo fmt
      run: cargo fmt -- --check

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
    - name: Cargo build
      run: RUSTFLAGS="-D warnings" cargo build

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
    - name: Cargo test
      run: |
        cargo install cargo2junit
        cargo test --lib -- -Z unstable-options --format json --report-time | tee results.json
        cat results.json | cargo2junit > results.xml

    - name: Archive junit results
      uses: actions/upload-artifact@v2
      with:
        name: junit-report
        path: results.xml

  doctest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
    - name: Cargo doc test
      run: |
        cargo install cargo2junit
        cargo test --doc -- -Z unstable-options --format json --report-time | tee results.json
        cat results.json | cargo2junit > results.xml

    - name: Archive junit results
      uses: actions/upload-artifact@v2
      with:
        name: junit-report
        path: results.xml

  coverage:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/testnet'
    continue-on-error: true
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
    - name: Coverage
      run: |
        cargo install cargo-tarpaulin -f
        cargo tarpaulin --verbose --timeout 600 --run-types Tests Doctests --out Xml

    - name: Archive coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: cobertura.xml
        
  build_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
        target: x86_64-unknown-linux-musl
    - name: Cargo build
      run: |
        sudo apt update -y
        sudo apt-get install musl-tools -y
        sudo apt-get install pkg-config -y
        sudo apt-get install libssl-dev -y
        sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm && sudo ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic && sudo ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux
        mkdir /musl
        wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz
        tar zxvf OpenSSL_1_1_1f.tar.gz 
        cd openssl-OpenSSL_1_1_1f/

        CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=/musl --openssldir=/musl/ssl linux-x86_64
        make depend
        make -j$(nproc)
        make install
        export PKG_CONFIG_ALLOW_CROSS=1
        export OPENSSL_STATIC=true
        export OPENSSL_DIR=/musl
        
        cargo update
        cargo build --release --target x86_64-unknown-linux-musl
        rm -rf massa/*
        mkdir -p massa/massa-node/
        cd massa/
        mkdir massa-client
        cp -v ../target/x86_64-unknown-linux-musl/release/massa-node ./massa-node/massa-node
        cp -rv ../massa-node/config ./massa-node/config
        cp -rv ../massa-node/base_config ./massa-node/base_config
        cp -rv ../massa-node/storage ./massa-node/storage
        cp -v ../target/x86_64-unknown-linux-musl/release/massa-client ./massa-client/massa-client
        cp -rv ../massa-client/config ./massa-client/config
        cp -rv ../massa-client/base_config ./massa-client/base_config
    - name: Archive coverage results
      uses: actions/upload-artifact@v2
      with:
        name: TODO
        path: massa/
