name: Release

# on:
#     push:
#       tags:
#       - 'TEST.[0-9]+\.[0-9]+'
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
        target: x86_64-unknown-linux-musl
    - name: Cargo build
      run: |
        sudo apt update -y
        sudo apt-get install musl-tools -y
        sudo apt-get install pkg-config -y
        sudo apt-get install libssl-dev -y
        sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm && sudo ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic && sudo ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux
        sudo mkdir -p /musl/lib
        wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz
        tar zxvf OpenSSL_1_1_1f.tar.gz
        cd openssl-OpenSSL_1_1_1f/

        CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=/musl --openssldir=/musl/ssl linux-x86_64
        sudo make depend
        sudo make -j$(nproc)
        sudo make install
        export PKG_CONFIG_ALLOW_CROSS=1
        export OPENSSL_STATIC=true
        export OPENSSL_DIR=/musl
        cd ..

        cargo update
        rm -rf massa/*
        mkdir -p massa/massa-node/
        cargo build --release --target x86_64-unknown-linux-musl
        ls -la
        cd massa/
        ls -la .
        mkdir massa-client
        cp -v ../target/x86_64-unknown-linux-musl/release/massa-node ./massa-node/massa-node
        cp -rv ../massa-node/config ./massa-node/config
        cp -rv ../massa-node/base_config ./massa-node/base_config
        cp -rv ../massa-node/storage ./massa-node/storage
        cp -v ../target/x86_64-unknown-linux-musl/release/massa-client ./massa-client/massa-client
        cp -rv ../massa-client/base_config ./massa-client/base_config
    - name: Archive compilation results
      uses: actions/upload-artifact@v2
      with:
        name: release_linux
        path: massa/

  build_windows:
    runs-on: ubuntu-latest
    container:
      image: massalabs/linux-ci
    # env:
    #   OSX_SDK_VERSION: 11.3
    #   ZLIB_VERSION: 1.2.11
    #   OSX_SDK_SUM: 9adc1373d3879e1973d28ad9f17c9051b02931674a3ec2a2498128989ece2cb1
    #   OSX_VERSION_MIN: 10.14
    #   OSX_CROSS_COMMIT: de6c72eff2d6013f5af46fba1fa205654c5cf5e2
    #   OPENSSL_VERSION: 1.1.1j
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
        target: x86_64-pc-windows-gnu

    - name: Cargo build
      run: |
        sudo apt update -y
        sudo apt-get install mingw-w64 mingw-w64-common mingw-w64-tools mingw-w64-x86-64-dev -y
        cargo update
        rm -rf massa/*
        mkdir -p massa/massa-node/
        cargo build --release --target x86_64-pc-windows-gnu
        ls -la target
        cd massa/
        mkdir massa-client
        cp -v ../target/x86_64-pc-windows-gnu/release/massa-node ./massa-node/massa-node
        cp -rv ../massa-node/config ./massa-node/config
        cp -rv ../massa-node/base_config ./massa-node/base_config
        cp -rv ../massa-node/storage ./massa-node/storage
        cp -v ../target/x86_64-pc-windows-gnu/release/massa-client ./massa-client/massa-client
        cp -rv ../massa-client/base_config ./massa-client/base_config
    - name: Archive compilation results
      uses: actions/upload-artifact@v2
      with:
        name: release_windows
        path: massa/

  build_darwin:
    runs-on: ubuntu-latest
    container:
      image: massalabs/linux-ci
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 20
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true
        target: x86_64-apple-darwin
    - name: Cargo build
      run: |
        cargo update
        rm -rf massa/*
        mkdir -p massa/massa-node/
        CC=o64-clang CXX=o64-clang++ cargo build --release --target x86_64-apple-darwin
        ls -la
        cd massa/
        ls -la .
        mkdir massa-client
        cp -v ../target/x86_64-apple-darwin/release/massa-node ./massa-node/massa-node
        cp -rv ../massa-node/config ./massa-node/config
        cp -rv ../massa-node/base_config ./massa-node/base_config
        cp -rv ../massa-node/storage ./massa-node/storage
        cp -v ../target/x86_64-apple-darwin/release/massa-client ./massa-client/massa-client
        cp -rv ../massa-client/base_config ./massa-client/base_config
    - name: Archive compilation results
      uses: actions/upload-artifact@v2
      with:
        name: release_darwin
        path: massa/
