var searchIndex = JSON.parse('{\
"massa_api":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net Json RPC API …","t":"WWDIDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHRRRRRRRRRRRRRRRRRRRRRRRRRHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIDDDDDDDDDDDDDDDDDDDDDDDDDDDIDEEEEEEEEEEEEEEEEEEEEEEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKAMMMAMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLKKKKKKKKMKKKKKKKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMAKMKFKKLLLMLKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFWFHHRHHIDEDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLMMMLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFF","n":["","","API","ApiServer","ApiV2","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","MassaRpcServer","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","ParamsObject","Private","Public","RpcServer","StopHandle","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","add_staking_secret_keys","api","api_settings","api_settings","api_settings","api_trait","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","arg","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus_channels","consensus_controller","consensus_controller","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute_read_only_bytecode","execute_read_only_call","execution_controller","execution_controller","execution_controller","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_addresses","get_blockclique_block_by_slot","get_blocks","get_cliques","get_datastore_entries","get_endorsements","get_filtered_sc_output_event","get_graph_interval","get_openrpc_spec","get_operations","get_stakers","get_staking_addresses","get_status","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_rpc","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","network_command_sender","network_command_sender","network_settings","new","new","new","node_add_to_bootstrap_blacklist","node_add_to_bootstrap_whitelist","node_add_to_peers_whitelist","node_ban_by_id","node_ban_by_ip","node_bootstrap_blacklist","node_bootstrap_whitelist","node_bootstrap_whitelist_allow_all","node_id","node_peers_whitelist","node_remove_from_bootstrap_blacklist","node_remove_from_bootstrap_whitelist","node_remove_from_peers_whitelist","node_sign_message","node_unban_by_id","node_unban_by_ip","node_wallet","page_request","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pool_channels","pool_command_sender","private","protocol_command_sender","public","remove_staking_addresses","selector_controller","send_operations","serve","serve","serve","serve","serve","serve","server_handler","stop","stop_node","stop_node_channel","storage","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","version","version","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrong_api","","broadcast_via_ws","CALLSITE","CALLSITE","FIELDS","META","META","MassaApiServer","ParamsObject","__Field","__FieldVisitor","__Visitor","__field0","__ignore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","expecting","expecting","fmt","fmt","from","from","from","from","get_largest_stakers","get_next_block_best_parents","get_version","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_rpc","lifetime","marker","page_request","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","subscribe_new_blocks","subscribe_new_blocks_headers","subscribe_new_filled_blocks","subscribe_new_operations","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","get_file_len","read_ips_from_jsonfile","run_scrud_operation","write_ips_to_jsonfile"],"q":["massa_apimassa_api::api","","massa_api::api_trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api::private","","",""],"d":["","","The API wrapper","Used to manage the API","API v2 content","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Server trait implementation for the <code>MassaRpc</code> RPC API.","","","","","","","","","","","","","","","","","","","","","","","","","","Private API content","Public API component","Used to manage the API","Used to be able to stop the API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a vector of new secret(private) keys for the node to …","Copyright (c) 2022 MASSA LABS info@massa.net Json RPC API …","API settings","API settings","API settings","Copyright (c) 2022 MASSA LABS info@massa.net Json RPC API …link(channels) to the consensus component","link to the consensus component","link to the consensus component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute bytecode in read-only mode.","Execute an SC function in read-only mode.","link to the execution component","link to the execution component","link to the execution component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get addresses.","Get information on the block at a slot in the blockclique. …","Returns block(s) information associated to a given list of …","Get cliques.","Get multiple datastore entries.","Returns endorsement(s) information associated to a given …","Get events optionally filtered by:","Get the block graph within the specified time interval. …","Get OpenRPC specification.","Returns operation(s) information associated to a given …","Returns the active stakers and their active roll counts …","Return hash set of staking addresses.","Summary of the current state: time, last final blocks …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collects all the methods and subscriptions defined in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","link to the network component","link to the network component","network setting","generate a new public API","generate a new massa API","generate a new private API","Add IP address(es) to node bootstrap blacklist.","Add IP address(es) to node bootstrap whitelist.","Add IP address(es) to node peers whitelist. No …","Bans given node id. No confirmation to expect.","Bans given IP address(es). No confirmation to expect.","Returns node bootstrap blacklist IP address(es).","Returns node bootstrap whitelist IP address(es).","Allow everyone to bootstrap from the node. remove …","our node id","Returns node peers whitelist IP address(es).","Remove IP address(es) to bootstrap blacklist.","Remove IP address(es) to bootstrap whitelist.","Remove from peers whitelist given IP address(es). keep it …","Sign message with node’s key. Returns the public key …","Unban given node id. No confirmation to expect.","Unban given IP address(es). No confirmation to expect.","User wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","link(channels) to the pool component","link to the pool component","Copyright (c) 2022 MASSA LABS info@massa.net","link to the protocol component","Copyright (c) 2022 MASSA LABS info@massa.net","Remove a vector of addresses used to stake. No …","link to the selector component","Adds operations to pool. Returns operations that were ok …","","Start the API","Start the API","","","","","stop the API gracefully","Gracefully stop the node.","stop channel","Massa storagenode version (TODO remove, can be retrieved via an …","node versionerver trait implementation for the <code>MassaApi</code> RPC API.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the active stakers and their active roll counts for …","Get the ids of best parents for the next block to be …","Get Massa node version.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Collects all the methods and subscriptions defined in the …","","","","","","","","New produced block.","New produced blocks headers.","New produced blocks with operations content.","New produced operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get length of the given file if it exists(or create it if …","Read bootstrap list IP(s) from json file","Run Search, Create, Read, Update, Delete operation on …","Write bootstrap list IP(s) from json file"],"ifp":[[3,"String"],[3,"Vec"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[3,"With"],[4,"Result"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[4,"__Field"],[3,"ParamsObject"],[3,"ReadOnlyBytecodeExecution"],[3,"ReadOnlyCall"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[4,"Address"],[3,"Slot"],[3,"BlockId"],[3,"DatastoreEntryInput"],[3,"EndorsementId"],[3,"EventFilter"],[3,"TimeInterval"],[3,"OperationId"],[3,"PageRequest"],[4,"Option"],[3,"Request"],[3,"RpcModule"],[8,"ConsensusController"],[8,"ExecutionController"],[3,"APIConfig"],[8,"SelectorController"],[8,"PoolController"],[3,"ProtocolCommandSender"],[3,"NetworkConfig"],[3,"Version"],[3,"NetworkCommandSender"],[3,"NodeId"],[3,"Storage"],[3,"Public"],[3,"API"],[3,"ConsensusChannels"],[3,"PoolChannels"],[3,"ApiV2"],[3,"Wallet"],[6,"RwLock"],[3,"Arc"],[4,"IpAddr"],[15,"u8"],[3,"OperationInput"],[4,"SocketAddr"],[3,"StopHandle"],[4,"Error"],[3,"Private"],[3,"TypeId"],[3,"Global"],[8,"Any"],[15,"str"],[15,"u64"],[6,"RpcResult"],[8,"Serialize"],[8,"Send"],[8,"Clone"],[3,"Sender"],[3,"PendingSubscriptionSink"],[6,"SubscriptionResult"],[4,"__Field"],[3,"ParamsObject"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"ApiRequest"],[3,"PathBuf"],[4,"ListType"],[15,"bool"],[4,"ScrudOperation"],[3,"BTreeSet"],[8,"MassaRpcServer"],[8,"RpcServer"],[8,"ApiServer"],[8,"MassaApiServer"]]},\
"massa_api_exports":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net All the …","t":"DNNNRRENENDNNEEDDDDNNNNNAALLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLMAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMAAAMLLLLLLLLLLALLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDRREEDDDDNNNNNNNNNNNNNNNNNNNNNNNNMMMLLLLLLLLLLLLLLLLMMMMMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDRRREEEDDDDDDNNNNNNNNNNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDREDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDRREEDDDDNNNNNNMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDREDDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNINNNNNNNNNINNNNNNRKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDRRRNDDEREEEEDDDDDDDDNNNNNNNNNNNNNNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDEDDNNNNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDEDDNNNNNNNNNNNNNNNNLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLRRDDEEDDDDNNNNNNNNNNNNLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDDDEEDDDDNNNNNNMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDEDDNNNNMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDEDDNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ApiRequest","Blacklist","Create","Delete","FIELDS","FIELDS","ListType","Read","ScrudOperation","Search","TimeInterval","Update","Whitelist","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__ignore","__ignore","address","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config","datastore","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","display_if_true","display_option_bool","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","endorsement","error","execution","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ledger","lifetime","lifetime","marker","marker","node","operation","page","page_request","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","rolls","serialize","serialize","slot","start","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddressInfo","CompactAddressInfo","FIELDS","FIELDS","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__field10","__field11","__field12","__field13","__field14","__field2","__field2","__field3","__field3","__field4","__field4","__field5","__field5","__field6","__field6","__field7","__field8","__field9","__ignore","__ignore","active_rolls","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_balance","candidate_balance","candidate_datastore_keys","candidate_roll_count","candidate_rolls","compact","created_blocks","created_endorsements","created_operations","cycle_infos","deferred_credits","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","expecting","expecting","expecting","expecting","final_balance","final_balance","final_datastore_keys","final_roll_count","final_rolls","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","lifetime","marker","marker","next_block_draws","next_endorsement_draws","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","serialize","thread","thread","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockInfo","BlockInfoContent","BlockSummary","FIELDS","FIELDS","FIELDS","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field1","__field1","__field1","__field2","__field2","__field3","__field3","__field4","__field4","__field5","__field6","__ignore","__ignore","__ignore","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","content","creator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","id","id","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_candidate","is_discarded","is_final","is_final","is_in_blockclique","is_in_blockclique","is_stale","lifetime","lifetime","lifetime","marker","marker","marker","parents","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","serialize","serialize","slot","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","APIConfig","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field10","__field11","__field12","__field13","__field14","__field15","__field16","__field17","__field18","__field19","__field2","__field20","__field21","__field22","__field23","__field24","__field25","__field26","__field27","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","allow_hosts","batch_requests_supported","bind_api","bind_private","bind_public","bootstrap_blacklist_path","bootstrap_whitelist_path","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","draw_lookahead_period_count","drop","drop","drop","drop","enable_http","enable_ws","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from_ref","genesis_timestamp","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","max_arguments","max_connections","max_datastore_value_length","max_function_name_length","max_log_length","max_op_datastore_entry_count","max_op_datastore_key_length","max_op_datastore_value_length","max_parameter_size","max_request_body_size","max_response_body_size","max_subscriptions_per_connection","openrpc_spec_path","periods_per_cycle","ping_interval","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","t0","thread_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","DatastoreEntryInput","DatastoreEntryOutput","FIELDS","FIELDS","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__ignore","__ignore","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_value","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","expecting","expecting","expecting","expecting","final_value","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","lifetime","lifetime","marker","marker","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","EndorsementInfo","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__ignore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","endorsement","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","id","in_blocks","in_pool","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_final","lifetime","marker","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","ApiError","BadRequest","ConsensusError","DisplayToDisplayDoc","ExecutionError","InconsistencyError","InternalServerError","MassaHashError","MissingCommandSender","MissingConfig","ModelsError","NetworkError","NotFound","PathToDisplayDoc","ProtocolError","ReceiveChannelError","SendChannelError","TimeError","WalletError","WrongAPI","_DERIVE_Display_FOR_ApiError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","init","into","into_request","pointer_metadata","provide","source","to_string","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","Error","ExecuteReadOnlyResponse","FIELDS","FIELDS","FIELDS","Ok","ReadOnlyBytecodeExecution","ReadOnlyCall","ReadOnlyResult","VARIANTS","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field2","__field2","__field2","__field3","__field3","__field3","__field4","__field4","__field4","__field5","__ignore","__ignore","__ignore","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytecode","caller_address","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","executed_at","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","gas_cost","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_final","is_final","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","max_gas","max_gas","operation_datastore","output_events","parameter","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","result","serialize","serialize","serialize","serialize","state_changes","target_address","target_function","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","LedgerInfo","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_ledger_info","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","expecting","expecting","final_ledger_info","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","locked_balance","marker","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","FIELDS","NodeStatus","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field10","__field11","__field12","__field13","__field14","__field2","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","config","connected_nodes","consensus_stats","current_cycle","current_cycle_time","current_time","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","execution_stats","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","last_slot","lifetime","marker","network_stats","next_cycle_time","next_slot","node_id","node_ip","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pool_stats","serialize","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","version","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","FIELDS","FIELDS","OperationInfo","OperationInput","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__field2","__field2","__field3","__field4","__field5","__field6","__ignore","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","creator_public_key","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","in_blocks","in_pool","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_operation_final","lifetime","lifetime","marker","marker","op_exec_status","operation","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","serialize","serialized_content","signature","thread","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","FIELDS","PageRequest","PagedVec","PagedVecV2","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__ignore","__ignore","_total_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","content","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","lifetime","limit","marker","marker","new","offset","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","res","serialize","serialize","serialize","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","RollsInfo","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","active_rolls","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_rolls","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","expecting","expecting","final_rolls","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","FIELDS","SlotAmount","__Field","__FieldVisitor","__Visitor","__field0","__field1","__ignore","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","expecting","expecting","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","slot","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip"],"q":["massa_api_exportsmassa_api_exports::address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::blockmassa_api_exports::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::datastoremassa_api_exports::endorsement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::execution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::operationmassa_api_exports::pagemassa_api_exports::rolls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_api_exports::slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrap request params into struct for ApiV2 method","contains banned entry","create operation","delete operation","","","Bootstrap lists types","read operation","SCRUD operations","search operation","Just a wrapper with a optional beginning and end","update operation","contains allowed entry","","","","","","","","","","","","address related structures","block-related structures","","","","","","","","","","","","","","","","","","","","","","","node configuration","datastore serialization / deserialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dumb utils function to display nicely boolean value","Help to format Optional bool","","","","","","","","","","","optional end slot","endorsements","models error","execution","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","ledger structures","","","","","node related structure","operations","page","pagination","","","","","","","","","","","rolls","","","slots","optional start slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All you ever dream to know about an address","Less information about an address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","active rolls","the address","the address","","","","","","","","","","","","","","","","","candidate balance","candidate balance","candidate datastore keys","candidate roll count","candidate rolls","Only essential info about an address","created blocks","created endorsements","created operations","cycle information","deferred credits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","final balance","final balance","final datastore keys","final roll count","final rolls","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","next block draws","next endorsement draws","","","","","","","","","","","the thread the address belongs to","the thread it is","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","refactor to delete","Block content","A block resume (without the block itself)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block","","","","","","","","","","","","","","","","","","","","","","","","","optional block info content","the block creator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","block id","id","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","true if candidate (active any clique but not final)","true if discarded","true if final","true if in a final block","true if in the greatest clique (and not final)","true if in the greatest block clique","true if incompatible with a final block","","","","","","","the block parents","","","","","","","","","","","","","","","","the slot the block is in","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","API settings. the API settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","host filtering.","whether batch requests are supported by this server or not.","bind for the Massa API","bind for the private API","bind for the public API","bootstrap blacklist path","bootstrap whitelist path","","","","","","","","","","","","","","","","","","","","","","","","","when looking for next draw we want to look at max …","","","","","whether to enable HTTP.","whether to enable WS.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","<code>genesis_timestamp</code>","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","max argument count","maximum number of incoming connections allowed.","max datastore value length","max function name length","max length for logging for requests and responses. Logs …","max op datastore entry","max datastore key length","max datastore value length","max parameter size","maximum size in bytes of a request.","maximum size in bytes of a response.","maximum number of subscriptions per connection.","openrpc specification path","periods per cycle","the interval at which <code>Ping</code> frames are submitted.","","","","","t0","thread count","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Datastore entry query input structure","Datastore entry query output structure","","","","","","","","","","","","","","","associated address of the entry","","","","","","","","","","","","","","","","","candidate datastore entry value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","final datastore entry value","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","datastore key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All you wanna know about an endorsement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the endorsement itself","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","id","the endorsement appears in <code>in_blocks</code> if it appears in …","true if endorsement is still in pool","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","true if the endorsement is final (for example in a final …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors of the api component.","Bad request: {0}","consensus error: {0}","","execution error: {0}","Inconsistency error: {0}","Internal server error: {0}","<code>massa_hash</code> error: {0}","Missing command sender: {0}","Missing configuration: {0}","Models error: {0}","Network error: {0}","Not found","","Protocol error: {0}","Receive channel error: {0}","Send channel error: {0}","Time error: {0}","Wallet error: {0}","The wrong API (either Public or Private) was called","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","An error occurred during execution.","The response to a request for a read-only execution.","","","","The result of a successful execution.","read only bytecode execution request","read SC call request","The result of the read-only execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","caller’s address, optional","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","byte code","caller’s address, optional","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The slot at which the read-only execution occurred.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The gas cost for the execution","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","whether to start execution from final or active state. …","whether to start execution from final or active state. …","","","","","","","","","max available gas","max available gas","Operation datastore, optional","The output events generated by the read-only execution.","function parameter","","","","","","","","","","","","","","","","","The result of the read-only execution.","","","","","state changes caused by the execution step","target address","target function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current balance ledger info","","","","","","","","","","","","","","","","latest data","","","","","","","","","","","","","","","","","","","","","","","final data","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","locked balance, for example balance due to a roll sell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","node status","","","","","","","","","","","","","","","","","","","","","","","","","","","","compact configuration","connected nodes (node id, ip address, true if the …","consensus stats","current cycle","current cycle starting timestamp","now","","","","","","","","","","","","","","","","","","","execution stats","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","latest slot, none if now is before genesis timestamp","","","network stats","next cycle starting timestamp","next slot","our node id","optional node ip","","","","","pool stats (operation count and endorsement count)","","","","","","","","","","","","","","","","","","","","","","","","","","","node version","","","","","","","","","","","","Operation and contextual info about it","operation input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The public key of the creator of the TX","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","id","the operation appears in <code>in_blocks</code> if it appears in …","true if operation is still in pool","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","true if the operation is final (for example in a final …","","","","","true if the operation execution succeeded, false if …","the operation itself","","","","","","","","","","","The serialized version of the content <code>base58</code> encoded","The signature of the operation","Thread in which the operation can be included","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the request inputs for a PagedVec","Represents a Vec that can be split across Pages Cf. …","Represents the request inputs for a PagedVecV2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The limit of elements in a page","","","Creates a new Paged Vec with optional limits of item per …","The page offset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Roll counts","","","","","","","","count taken into account for the current cycle","","","","","","","","","at latest blocks","","","","","","","","","","","","","","","","","","","","","","","at final blocks","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","slot / amount pair","","","","","","","amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,20,19,19,0,0,0,19,0,19,0,19,20,0,0,0,0,0,0,5,7,5,5,7,0,0,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,1,0,0,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,1,5,5,12,15,19,20,6,6,7,7,16,17,0,0,1,5,12,15,19,20,6,7,16,17,1,0,0,0,12,15,16,17,1,12,15,19,20,16,17,1,5,12,15,19,20,6,7,16,17,1,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,0,15,17,15,17,0,0,0,6,1,5,12,15,19,20,6,7,16,17,0,1,6,0,1,1,19,20,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,1,5,12,15,19,20,6,7,16,17,12,16,15,17,15,17,12,16,12,16,1,5,12,15,19,20,6,7,16,17,0,0,0,0,0,0,0,0,0,0,29,30,29,30,29,29,29,29,29,29,30,29,30,29,30,29,30,29,30,29,29,29,29,30,28,27,28,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,28,27,27,28,27,27,27,27,27,27,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,27,29,29,31,32,28,28,30,30,33,34,27,29,31,32,28,30,33,34,31,32,33,34,27,28,27,27,28,27,27,31,32,28,28,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,32,34,32,34,27,27,27,29,31,32,28,30,33,34,27,28,27,28,27,28,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,27,29,31,32,28,30,33,34,31,33,32,34,32,34,31,33,31,33,27,29,31,32,28,30,33,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,38,40,36,38,40,38,40,38,40,38,40,40,40,36,38,40,37,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,39,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,35,36,36,41,42,37,37,38,38,43,44,39,39,40,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,41,42,43,44,45,46,35,35,41,42,37,43,44,39,39,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,39,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,37,37,37,39,37,39,39,42,44,46,42,44,46,39,35,36,41,42,37,38,43,44,39,40,45,46,35,37,39,39,35,39,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,35,36,41,42,37,38,43,44,39,40,45,46,41,43,45,42,44,46,42,44,46,41,43,45,41,43,45,35,36,41,42,37,38,43,44,39,40,45,46,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,47,47,47,47,47,47,47,47,48,49,50,47,48,49,50,47,47,47,48,49,50,47,48,49,50,47,47,48,48,49,50,47,47,48,49,50,47,47,49,50,47,49,50,47,48,49,50,47,47,47,48,49,50,47,48,49,50,47,48,49,50,50,50,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,49,50,47,47,47,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,49,50,50,49,49,47,48,49,50,0,0,0,0,0,0,0,0,0,0,53,54,53,54,53,54,51,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,52,51,52,51,52,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,51,53,53,55,56,52,52,54,54,57,58,51,53,55,56,52,54,57,58,55,56,57,58,52,51,55,56,52,52,57,58,51,53,55,56,52,54,57,58,51,52,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,56,58,56,58,51,53,55,56,52,54,57,58,51,52,51,52,52,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,51,53,55,56,52,54,57,58,55,57,56,58,56,58,55,57,55,57,51,53,55,56,52,54,57,58,0,0,0,0,0,60,60,60,60,60,60,59,60,61,62,59,60,61,62,59,59,59,60,61,62,59,60,61,62,59,59,60,60,61,62,59,60,61,62,59,61,62,59,59,61,62,59,60,61,62,59,59,59,59,59,60,61,62,59,60,61,62,59,60,61,62,59,62,62,59,60,61,62,59,59,59,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,59,60,61,62,61,62,62,61,61,59,60,61,62,0,64,64,0,64,64,64,64,64,64,64,64,64,0,64,64,64,64,64,64,0,127,128,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,75,0,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,80,81,82,79,80,81,82,80,81,82,80,81,82,80,81,82,82,80,81,82,77,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,77,78,75,76,77,78,75,76,77,78,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,75,79,79,83,84,76,76,80,80,85,86,77,77,81,81,87,88,78,78,82,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,76,83,84,85,86,87,88,89,90,75,83,84,76,76,85,86,77,87,88,78,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,76,77,78,76,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,77,78,84,86,88,90,84,86,88,90,77,78,77,76,78,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,76,75,76,77,78,76,78,78,75,76,77,78,76,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,83,85,87,89,84,86,88,90,86,88,90,83,85,87,89,83,85,87,89,75,79,83,84,76,80,85,86,77,81,87,88,78,82,89,90,0,0,0,0,0,92,92,92,92,91,92,93,94,91,92,93,94,91,91,91,91,92,93,94,91,92,93,94,91,91,92,92,93,94,91,92,93,94,93,94,91,91,91,93,94,91,92,93,94,91,91,92,93,94,91,92,93,94,91,92,93,94,94,91,94,91,92,93,94,91,91,91,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,93,94,94,93,93,91,92,93,94,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,95,96,97,98,95,96,97,98,95,95,95,95,95,95,95,96,97,98,95,96,97,98,95,95,96,96,97,98,95,96,97,98,95,97,98,95,95,97,98,95,96,97,98,95,96,97,98,95,96,97,98,95,96,97,98,95,98,98,95,95,95,95,95,95,96,97,98,95,95,95,95,96,97,98,95,96,97,98,95,96,97,98,95,96,97,98,95,96,97,98,95,96,97,98,95,97,98,98,97,97,95,96,97,98,0,0,0,0,0,0,0,0,0,0,100,102,100,102,100,102,102,102,102,102,100,102,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,99,100,100,103,104,101,101,102,102,105,106,99,100,103,104,101,102,105,106,103,104,105,106,99,103,104,101,101,105,106,99,100,103,104,101,102,105,106,101,101,101,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,101,104,106,104,106,101,101,99,100,103,104,101,102,105,106,99,101,99,99,101,101,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,99,100,103,104,101,102,105,106,103,105,104,106,104,106,103,105,103,105,99,100,103,104,101,102,105,106,0,0,0,0,0,0,0,0,0,0,0,108,110,108,110,108,110,115,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,109,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,107,108,108,111,112,109,109,110,110,113,114,115,107,108,111,112,109,110,113,114,111,112,113,114,111,112,113,114,115,107,108,111,112,109,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,112,114,107,112,114,115,107,115,107,108,111,112,109,110,113,114,115,115,107,109,109,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,115,107,108,111,112,109,110,113,114,111,113,112,114,112,114,111,113,111,113,115,107,108,111,112,109,110,113,114,0,0,0,0,0,120,120,120,120,119,119,120,121,122,119,120,121,122,119,119,119,119,120,121,122,119,120,121,122,119,119,120,120,121,122,119,120,121,122,121,122,119,119,119,121,122,119,120,121,122,119,119,120,121,122,119,120,121,122,119,120,121,122,122,122,119,120,121,122,119,119,119,119,120,121,122,119,120,121,122,119,120,121,122,119,120,121,122,119,120,121,122,119,120,121,122,121,122,122,121,121,119,120,121,122,0,0,0,0,0,124,124,124,123,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,123,124,124,125,126,123,124,125,126,125,126,123,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,126,126,123,124,125,126,123,123,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,125,126,126,125,125,123,124,125,126],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[1]]]],[[],[[4,[5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[6]]]],[[],[[4,[3]]]],[[],[[4,[7]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[8,9],10],[[[11,[8]],9,9,9],10],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,0,0,[[12,13],14],[[15,13],14],[[16,13],14],[[17,13],14],[[1,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[19,13],[[4,[18]]]],[[20,13],[[4,[18]]]],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,4],[6,4],0,0,[[]],[[],10],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[12,4],[16,4],[15,4],[17,4],[15,4],[17,4],[[12,9],4],[[16,9],4],[[12,26],4],[[16,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[27,28],0,0,0,0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[27]]]],[[],[[4,[29]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[28]]]],[[],[[4,[3]]]],[[],[[4,[30]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[31,13],14],[[32,13],14],[[33,13],14],[[34,13],14],0,0,0,0,0,[[27,13],14],[[27,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[28,13],14],[[28,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,4],[28,4],0,0,[[],10],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[31,4],[33,4],[32,4],[34,4],[32,4],[34,4],[[31,9],4],[[33,9],4],[[31,26],4],[[33,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[35]]]],[[],[[4,[36]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[37]]]],[[],[[4,[3]]]],[[],[[4,[38]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[39]]]],[[],[[4,[40]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[41,13],14],[[42,13],14],[[43,13],14],[[44,13],14],[[45,13],14],[[46,13],14],[[35,13],14],[[35,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[37,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[39,13],14],[[39,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,4],[37,4],[39,4],0,[[],10],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[41,4],[43,4],[45,4],[42,4],[44,4],[46,4],[42,4],[44,4],[46,4],[[41,9],4],[[43,9],4],[[45,9],4],[[41,26],4],[[43,26],4],[[45,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[47]]]],[[],[[4,[48]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],0,[2],[2],[2],[2],0,0,[[49,13],14],[[50,13],14],[[47,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[49,4],[50,4],[50,4],[[49,9],4],[[49,26],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[51,51],[52,52],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[51]]]],[[],[[4,[53]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[52]]]],[[],[[4,[3]]]],[[],[[4,[54]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[55,13],14],[[56,13],14],[[57,13],14],[[58,13],14],0,[[51,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[52,13],14],[[52,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,4],[52,4],[[]],[[]],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[55,4],[57,4],[56,4],[58,4],[56,4],[58,4],[[55,9],4],[[57,9],4],[[55,26],4],[[57,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,59],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[59]]]],[[],[[4,[60]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],0,[[61,13],14],[[62,13],14],[[59,13],14],[[59,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],0,0,0,[[]],[[]],[[]],[[]],[59,4],[[]],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[61,4],[62,4],[62,4],[[61,9],4],[[61,26],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],63],[[]],[[]],[2],[2],[[],[[4,[3]]]],[2],[[64,13],14],[[64,13],14],[65,64],[66,64],[67,64],[68,64],[69,64],[70,64],[71,64],[[]],[72,64],[[],2],[[]],[[],21],[[]],[73],[64,[[11,[74]]]],[[],10],[[],4],[[],4],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[75,75],[76,76],[77,77],[78,78],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[75]]]],[[],[[4,[3]]]],[[],[[4,[79]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[76]]]],[[],[[4,[3]]]],[[],[[4,[80]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[77]]]],[[],[[4,[3]]]],[[],[[4,[81]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[78]]]],[[],[[4,[3]]]],[[],[[4,[82]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[83,13],14],[[84,13],14],[[85,13],14],[[86,13],14],[[87,13],14],[[88,13],14],[[89,13],14],[[90,13],14],[[75,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[76,13],14],[[76,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[77,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[78,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[75,4],[76,4],[77,4],[78,4],0,0,0,[[]],[[]],[[]],[[]],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[83,4],[85,4],[87,4],[89,4],[84,4],[86,4],[88,4],[90,4],[86,4],[88,4],[90,4],[[83,9],4],[[85,9],4],[[87,9],4],[[89,9],4],[[83,26],4],[[85,26],4],[[87,26],4],[[89,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[91,91],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[91]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[92]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[[93,13],14],[[94,13],14],0,[[91,13],14],[[91,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],0,0,0,[[]],[[]],[[]],[[]],[91,4],[[]],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[93,4],[94,4],[94,4],[[93,9],4],[[93,26],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[95]]]],[[],[[4,[3]]]],[[],[[4,[96]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],0,[[97,13],14],[[98,13],14],[[95,13],14],[[95,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[95,4],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[97,4],[98,4],[98,4],[[97,9],4],[[97,26],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[99]]]],[[],[[4,[100]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[101]]]],[[],[[4,[3]]]],[[],[[4,[102]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[103,13],14],[[104,13],14],[[105,13],14],[[106,13],14],[[99,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[101,13],14],[[101,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,4],[101,4],0,0,0,[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[103,4],[105,4],[104,4],[106,4],[104,4],[106,4],[[103,9],4],[[105,9],4],[[103,26],4],[[105,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[107]]]],[[],[[4,[108]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[109]]]],[[],[[4,[110]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[111,13],14],[[112,13],14],[[113,13],14],[[114,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[115,109],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[[117,[116]],[11,[107]]],[[115,[116]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[115,[116]],118],4],[107,4],[109,4],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[111,4],[113,4],[112,4],[114,4],[112,4],[114,4],[[111,9],4],[[113,9],4],[[111,26],4],[[113,26],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[119,119],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[119]]]],[[],[[4,[3]]]],[[],[[4,[120]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[[121,13],14],[[122,13],14],0,[[119,13],14],[[119,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],[119,4],[[]],[[],10],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[121,4],[122,4],[122,4],[[121,9],4],[[121,26],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[123]]]],[[],[[4,[3]]]],[[],[[4,[124]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],[2],[2],[[125,13],14],[[126,13],14],[[123,13],14],[13,[[4,[18]]]],[13,[[4,[18]]]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],[123,4],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[[24,[23]]],[[24,[25,23]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[125,4],[126,4],[126,4],[[125,9],4],[[125,26],4],[[]],[[]],[[]],[[]]],"p":[[3,"TimeInterval"],[15,"usize"],[3,"With"],[4,"Result"],[4,"__Field"],[3,"ApiRequest"],[4,"__Field"],[15,"bool"],[15,"str"],[3,"String"],[4,"Option"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[4,"ScrudOperation"],[4,"ListType"],[3,"Request"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[15,"u64"],[3,"AddressInfo"],[3,"CompactAddressInfo"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"BlockInfo"],[4,"__Field"],[3,"BlockInfoContent"],[4,"__Field"],[3,"BlockSummary"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"APIConfig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"DatastoreEntryInput"],[3,"DatastoreEntryOutput"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"EndorsementInfo"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Display"],[4,"ApiError"],[4,"NetworkError"],[4,"TimeError"],[4,"ConsensusError"],[4,"MassaHashError"],[4,"WalletError"],[4,"ProtocolError"],[4,"ModelsError"],[4,"ExecutionError"],[3,"Demand"],[8,"Error"],[4,"ReadOnlyResult"],[3,"ExecuteReadOnlyResponse"],[3,"ReadOnlyBytecodeExecution"],[3,"ReadOnlyCall"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"LedgerInfo"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"NodeStatus"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"OperationInput"],[4,"__Field"],[3,"OperationInfo"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"PageRequest"],[4,"__Field"],[3,"PagedVecV2"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"PagedVec"],[8,"Serialize"],[3,"Vec"],[8,"Serializer"],[3,"RollsInfo"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"SlotAmount"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_async_pool":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net","t":"DDGDDDDDDDDDDDDDMMMMMMMMMMMMMMMMAMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDDLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMMLLLLLLLMMLLLLLLLLLLLLLMLLLLLLDMLLLLLLLLLMMMMLLLLLDDGDDDDDDDDDDRRREEEDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMMMMMLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMLLMMMMMLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLLLLLMMMMLLLLLLLMMMMMMLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLFMMMMMLLLLLLLLLLLLLLLLLLLLMMLLLLL","n":["AsyncMessage","AsyncMessageDeserializer","AsyncMessageId","AsyncMessageIdDeserializer","AsyncMessageIdSerializer","AsyncMessageInfo","AsyncMessageSerializer","AsyncMessageTrigger","AsyncMessageUpdate","AsyncPool","AsyncPoolChanges","AsyncPoolChangesDeserializer","AsyncPoolChangesSerializer","AsyncPoolConfig","AsyncPoolDeserializer","AsyncPoolSerializer","address","address_deserializer","address_serializer","amount_deserializer","amount_serializer","async_message_deserializer_db","async_message_id_deserializer","async_message_id_serializer","async_message_serializer","async_pool_changes_length","bool_deserializer","bool_serializer","bootstrap_part_size","can_be_executed","can_be_executed","can_be_executed","changes","coins","coins","config","config","data","data","data_deserializer","datastore_key","db","destination","destination","emission_index","emission_index","emission_index_deserializer","emission_slot","emission_slot","fee","fee","for_db","for_db","handler","handler","hash","hash","id_deserializer","id_serializer","max_async_message_data","max_gas","max_gas","max_gas","max_gas_deserializer","max_key_length","max_length","message","message_deserializer_db","message_id_deserializer","message_id_serializer","message_info_cache","message_serializer","pool","sender","sender","set_update_or_delete_message_deserializer","set_update_or_delete_message_serializer","slot_deserializer","slot_deserializer","slot_serializer","slot_serializer","thread_count","trigger","trigger","trigger","trigger_deserializer","trigger_serializer","u64_deserializer","u64_deserializer","u64_serializer","u64_serializer","u64_serializer","u64_serializer","validity_end","validity_end","validity_end","validity_start","validity_start","validity_start","vec_u8_serializer","AsyncPoolChanges","AsyncPoolChangesDeserializer","AsyncPoolChangesSerializer","__Visitor","apply","async_pool_changes_length","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","deserialize","deserialize","eq","equivalent","expecting","fmt","fmt","from","from","from","from","from_ref","id_deserializer","id_serializer","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","new","new","push_activate","push_add","push_delete","serialize","serialize","set_update_or_delete_message_deserializer","set_update_or_delete_message_serializer","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u64_serializer","visit_newtype_struct","visit_seq","vzip","vzip","vzip","vzip","AsyncPoolConfig","bootstrap_part_size","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","into","into_request","max_async_message_data","max_key_length","max_length","thread_count","to_owned","try_from","try_into","type_id","vzip","AsyncMessage","AsyncMessageDeserializer","AsyncMessageId","AsyncMessageIdDeserializer","AsyncMessageIdSerializer","AsyncMessageInfo","AsyncMessageSerializer","AsyncMessageTrigger","AsyncMessageTriggerDeserializer","AsyncMessageTriggerSerializer","AsyncMessageUpdate","AsyncMessageUpdateDeserializer","AsyncMessageUpdateSerializer","FIELDS","FIELDS","FIELDS","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field1","__field1","__field1","__field10","__field10","__field11","__field11","__field12","__field12","__field13","__field13","__field2","__field2","__field3","__field3","__field4","__field4","__field5","__field5","__field6","__field6","__field7","__field7","__field8","__field8","__field9","__field9","__ignore","__ignore","__ignore","address","address_deserializer","address_deserializer","address_deserializer","address_serializer","address_serializer","address_serializer","amount_deserializer","amount_deserializer","amount_serializer","amount_serializer","apply","apply","apply","bool_deserializer","bool_deserializer","bool_serializer","bool_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_executed","can_be_executed","can_be_executed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coins","coins","compute_hash","compute_id","data","data","data_deserializer","data_deserializer","datastore_key","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination","destination","emission_index","emission_index","emission_index_deserializer","emission_index_deserializer","emission_slot","emission_slot","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","fee","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_db","for_db","for_db","for_db","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handler","handler","hash","hash","hash_deserializer","hash_serializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key_serializer","key_serializer","lifetime","lifetime","lifetime","marker","marker","marker","max_gas","max_gas","max_gas","max_gas_deserializer","max_gas_deserializer","new","new","new","new","new","new","new","new","new_with_hash","regular_bool_deserializer","regular_bool_serializer","sender","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","slot_deserializer","slot_deserializer","slot_deserializer","slot_serializer","slot_serializer","slot_serializer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger","trigger","trigger","trigger_deserializer","trigger_deserializer","trigger_serializer","trigger_serializer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64_deserializer","u64_serializer","u64_serializer","u64_serializer","validity_end","validity_end","validity_end","validity_start","validity_start","validity_start","vec_u8_serializer","vec_u8_serializer","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AsyncPool","AsyncPoolDeserializer","AsyncPoolSerializer","activate_entry","apply_changes_to_batch","async_message_deserializer_db","async_message_id_deserializer","async_message_id_serializer","async_message_serializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config","db","default","delete_entry","deserialize","fetch_messages","from","from","from","from_ref","get_hash","get_pool_part","into","into","into","into_request","into_request","into_request","is_triggered","message_deserializer_db","message_id_deserializer","message_id_serializer","message_info_cache","message_serializer","new","new","new","put_entry","recompute_message_info_cache","reset","serialize","set_pool_part","settle_slot","take_batch_to_execute","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u64_deserializer","u64_serializer","update_entry","vzip","vzip","vzip","write_batch"],"q":["massa_async_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_async_pool::changes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_async_pool::config","","","","","","","","","","","","","","","","","","","","massa_async_pool::messagemassa_async_pool::pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Structure defining an asynchronous smart contract message","","Unique identifier of a message. Also has the property of …","","","","","Structure defining a trigger for an asynchronous message","represents an update to one or more fields of a …","Represents a pool of sorted messages in a deterministic …","represents a list of additions and deletions to the …","","<code>AsyncPoolChanges</code> serializer","Asynchronous pool configuration","Deserializer for <code>AsyncPool</code>","Serializer for <code>AsyncPool</code>","Filter on the address","","","","","","","","","","","","part size (for bootstrap limits)","Boolean that determine if the message can be executed. For …","","Boolean that determine if the message can be executed. For …","","Coins sent from the sender to the target address of the …","Coins sent from the sender to the target address of the …","Copyright (c) 2022 MASSA LABS info@massa.net This file …","Asynchronous pool configuration","Raw payload data of the message","Raw payload data of the message","","Filter on the datastore key","","The address towards which the message is being sent","The address towards which the message is being sent","Index of the emitted message within the <code>emission_slot</code>. …","Index of the emitted message within the <code>emission_slot</code>. …","","Slot at which the message was emitted","Slot at which the message was emitted","Fee paid by the sender when the message is processed.","Fee paid by the sender when the message is processed.","","","the handler function name within the destination address’…","the handler function name within the destination address’…","Hash of the message","Hash of the message","","","max async message data (for bootstrap limits)","Maximum gas to use when processing the message","","Maximum gas to use when processing the message","","max key length for message deserilization","max number of messages in the pool","Copyright (c) 2022 MASSA LABS info@massa.net This file …","","","","","","Copyright (c) 2022 MASSA LABS info@massa.net This file …","The address that sent the message","The address that sent the message","","","","","","","thread count","Trigger that define whenever a message can be executed","","Trigger that define whenever a message can be executed","","","","","","","","","Slot at which the message stops being valid (bound not …","","Slot at which the message stops being valid (bound not …","Slot at which the message starts being valid (bound …","","Slot at which the message starts being valid (bound …","","represents a list of additions and deletions to the …","","<code>AsyncPoolChanges</code> serializer","","extends the current <code>AsyncPoolChanges</code> with another one","","","","","","","","","","","","","","Example","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Pushes a message activation to the list of changes.","Extends self with another another <code>AsyncPoolChanges</code>. This …","Pushes a message deletion to the list of changes. No …","Example","","","","","","","","","","","","","","","","","","","","","","","","Asynchronous pool configuration","part size (for bootstrap limits)","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","max async message data (for bootstrap limits)","max key length for message deserilization","max number of messages in the pool","thread count","","","","","","Structure defining an asynchronous smart contract message","","Unique identifier of a message. Also has the property of …","","","","","Structure defining a trigger for an asynchronous message","Deserializer for a trigger for an asynchronous message","Serializer for a trigger for an asynchronous message","represents an update to one or more fields of a …","Deserializer for <code>AsyncMessageUpdate</code>","Serializer for <code>AsyncMessageUpdate</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filter on the address","","","","","","","","","","","extends the <code>AsyncMessage</code> with a <code>AsyncMessageUpdate</code>","extends the <code>AsyncMessage</code> with a <code>AsyncMessageUpdate</code>","extends the <code>AsyncMessageUpdate</code> with another one","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boolean that determine if the message can be executed. For …","","Boolean that determine if the message can be executed. For …","","","","","","","","","","","","","","","","","","","","","Coins sent from the sender to the target address of the …","Coins sent from the sender to the target address of the …","Recompute the hash of the message. Must be used each time …","Compute the ID of the message for use when choosing which …","Raw payload data of the message","Raw payload data of the message","","","Filter on the datastore key","","","","","","","Example","","","","","","Example","","","The address towards which the message is being sent","The address towards which the message is being sent","Index of the emitted message within the <code>emission_slot</code>. …","Index of the emitted message within the <code>emission_slot</code>. …","","","Slot at which the message was emitted","Slot at which the message was emitted","","","","","","","","","","","","","","","Fee paid by the sender when the message is processed.","Fee paid by the sender when the message is processed.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","the handler function name within the destination address’…","the handler function name within the destination address’…","Hash of the message","Hash of the message","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum gas to use when processing the message","","Maximum gas to use when processing the message","","","Creates a new <code>AsyncMessageUpdateSerializer</code>","Creates a new <code>AsyncMessageUpdateDeserializer</code>","","","","","","","Take an <code>AsyncMessage</code> and return it with its hash computed","","","The address that sent the message","The address that sent the message","","Example","","","","Example","","","","","","","","","","","","","","","","","","Trigger that define whenever a message can be executed","","Trigger that define whenever a message can be executed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Slot at which the message stops being valid (bound not …","","Slot at which the message stops being valid (bound not …","Slot at which the message starts being valid (bound …","","Slot at which the message starts being valid (bound …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a pool of sorted messages in a deterministic …","Deserializer for <code>AsyncPool</code>","Serializer for <code>AsyncPool</code>","Update the ledger entry of a given address.","Applies pre-compiled <code>AsyncPoolChanges</code> to the pool without …","","","","","","","","","","","","","Asynchronous pool configuration","","","Delete every sub-entry associated to the given address.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the current async pool hash","Get a part of the async pool. Used for bootstrap.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Check in the ledger changes if a message trigger has been …","","","","","","Creates a new <code>AsyncPool</code> serializer","Creates a new <code>AsyncPool</code> deserializer","Creates an empty <code>AsyncPool</code>","Add every sub-entry individually for a given entry.","","Resets the pool to its initial state","","Set a part of the async pool. Used for bootstrap.","Settles a slot, adding new messages to the pool and …","Takes the best possible batch of messages to execute, with …","","","","","","","","","","","","","Update the ledger entry of a given address.","","","","Apply the given operation batch to the disk ledger"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,31,30,31,30,52,52,51,51,3,31,30,22,18,24,23,0,18,23,0,49,18,23,31,27,49,18,23,18,23,31,18,23,18,23,30,31,18,23,18,23,3,2,22,18,24,23,31,22,22,0,49,49,49,49,49,0,18,23,3,2,26,31,25,30,22,18,24,23,31,30,52,26,2,51,25,30,18,24,23,18,24,23,30,0,0,0,0,1,3,2,3,1,9,2,3,1,9,1,1,2,1,3,1,1,1,9,1,9,2,3,1,9,1,3,2,2,3,1,9,2,3,1,9,9,9,2,3,1,1,1,2,1,3,2,1,2,3,1,9,2,3,1,9,2,3,1,9,2,9,9,2,3,1,9,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,35,36,34,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,34,35,36,27,33,29,31,32,28,30,33,31,32,30,18,24,23,33,31,32,30,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,18,24,23,25,26,27,28,29,18,30,31,24,23,25,26,27,28,29,18,30,31,24,23,18,23,18,18,18,23,33,31,27,32,25,18,30,23,33,26,27,34,29,18,35,31,23,36,18,23,18,23,33,31,18,23,27,18,24,23,27,18,24,23,37,38,39,40,41,42,18,23,27,37,38,18,39,40,24,23,41,42,32,33,30,31,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,24,23,36,41,42,25,26,27,28,29,18,30,31,24,23,18,23,18,23,33,32,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,28,29,38,40,42,38,40,42,18,24,23,33,31,32,33,25,26,28,29,30,31,18,33,32,18,23,32,25,27,28,18,30,23,33,26,31,32,25,30,25,26,27,28,29,18,30,31,24,23,18,24,23,33,31,32,30,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,26,32,25,30,18,24,23,18,24,23,32,30,37,39,41,38,40,42,38,40,42,37,39,41,37,39,41,32,33,25,26,27,34,37,38,28,29,18,35,39,40,30,31,24,23,36,41,42,0,0,0,49,49,52,52,51,51,51,52,49,51,52,49,49,49,49,49,51,49,52,49,51,52,49,49,49,49,51,52,49,51,52,49,0,49,49,49,49,49,51,52,49,49,49,49,51,49,49,49,49,51,52,49,51,52,49,51,52,49,52,51,49,51,52,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[],2],[[],1],[3,[[6,[1,[0,[4,5]]]]]],[[],[[7,[1]]]],[[1,1],8],[[],8],[[9,10],11],[[1,10],11],[10,[[7,[12]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],0,0,[[],2],[[14,15,15,16],3],[[1,17]],[[1,17,18]],[[1,17]],[[2,1,19],[[7,[20]]]],[1,7],0,0,[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],21],[[],21],[[],21],[[],21],0,[9,7],[9,7],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[22,22],[[]],[[22,10],11],[[]],[[]],[[]],[[],13],0,0,0,0,[[]],[[],7],[[],7],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,23]],[[24,23]],[[23,23]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[25,25],[26,26],[27,27],[28,28],[29,29],[18,18],[30,30],[31,31],[24,24],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[18,8]],[18,17],0,0,0,0,0,[[],32],[[],25],[[],18],[[],30],[[],23],[33,[[6,[23,[0,[4,5]]]]]],[26,[[6,[17,[0,[4,5]]]]]],[[],[[7,[27]]]],[[],[[7,[34]]]],[29,[[6,[27,[0,[4,5]]]]]],[[],[[7,[18]]]],[[],[[7,[35]]]],[31,[[6,[18,[0,[4,5]]]]]],[[],[[7,[23]]]],[[],[[7,[36]]]],0,0,0,0,0,0,0,0,[[27,27],8],[[18,18],8],[[24,24],8],[[23,23],8],[[],8],[[],8],[[],8],[[],8],[[37,10],11],[[38,10],11],[[39,10],11],[[40,10],11],[[41,10],11],[[42,10],11],0,0,[[27,10],11],[10,[[7,[12]]]],[10,[[7,[12]]]],[[18,10],11],[10,[[7,[12]]]],[10,[[7,[12]]]],[[24,10],11],[[23,10],11],[10,[[7,[12]]]],[10,[[7,[12]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,[8,32],[[14,15,16,8],33],[[],25],[14,26],[[],28],[16,29],[8,30],[[14,15,16,8],31],[[43,15,44,44,45,15,46,46,43,43,[19,[14]],[47,[27]],[47,[8]]],18],0,0,0,0,[[32,23,19],[[7,[20]]]],[[25,17,19],[[7,[20]]]],[27,7],[[28,27,19],[[7,[20]]]],[18,7],[[30,18,19],[[7,[20]]]],[23,7],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,[37,7],[39,7],[41,7],[38,7],[40,7],[42,7],[38,7],[40,7],[42,7],[[37,48],7],[[39,48],7],[[41,48],7],[[37,15],7],[[39,15],7],[[41,15],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[49,17,50]],[[49,1,50]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[49,49],[[]],0,0,[[],51],[[49,17,50]],[52,[[6,[[53,[17,18]],[0,[4,5]]]]]],[[49,[19,[17]]],19],[[]],[[]],[[]],[[]],[49,54],[[49,[55,[17]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[27,56],8],0,0,0,0,0,[[],51],[[14,15,15,16],52],[[22,[59,[[58,[57]]]]],49],[[49,17,18,50]],[49],[49],[[51,53,19],[[7,[20]]]],[[49,[53,[17,18]]],[[55,[17]]]],[[49,43,19,56]],[[49,43,15],19],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],21],[[],21],[[],21],0,0,[[49,17,23,50]],[[]],[[]],[[]],[[49,50]]],"p":[[3,"AsyncPoolChanges"],[3,"AsyncPoolChangesSerializer"],[3,"AsyncPoolChangesDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"Result"],[15,"bool"],[3,"__Visitor"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Request"],[15,"u8"],[15,"u64"],[15,"u32"],[6,"AsyncMessageId"],[3,"AsyncMessage"],[3,"Vec"],[4,"SerializeError"],[3,"TypeId"],[3,"AsyncPoolConfig"],[3,"AsyncMessageUpdate"],[3,"AsyncMessageInfo"],[3,"AsyncMessageIdSerializer"],[3,"AsyncMessageIdDeserializer"],[3,"AsyncMessageTrigger"],[3,"AsyncMessageTriggerSerializer"],[3,"AsyncMessageTriggerDeserializer"],[3,"AsyncMessageSerializer"],[3,"AsyncMessageDeserializer"],[3,"AsyncMessageUpdateSerializer"],[3,"AsyncMessageUpdateDeserializer"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Slot"],[4,"Address"],[3,"String"],[3,"Amount"],[4,"Option"],[15,"str"],[3,"AsyncPool"],[3,"DBBatch"],[3,"AsyncPoolSerializer"],[3,"AsyncPoolDeserializer"],[3,"BTreeMap"],[3,"Hash"],[4,"StreamingStep"],[3,"LedgerChanges"],[6,"DB"],[6,"RwLock"],[3,"Arc"]]},\
"massa_bootstrap":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net Bootstrap …","t":"NNNEDDDNNNDNNNEDDDNNNDDDNNENMMMMMMMMMMMMMMMMLLMAAMMMMLLLLMMAAMMMLFMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMLMMMMMMMMMLMMMMMMMMMMAAAMMMMMMFMMMMMMMMALLLMMMLLLMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFFFFFFFDLLMLLLLMLLLLLLLLMMLMLLLLLLMLNENNINNNNNNNNNNNNINNNNNNNNNRKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIDDKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNRNNNRNREDDNNNNRRNNNNEDDNNRNNRNRNREENRNRNNRMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLMMMMMMLLLLLLLLMMMMMMLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMDDGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHRFMMLLLLFMLLLLLLLLMLLLLLLLLLMMMMMMFMMLLLFLLLFFLFLLLLLLFFFLLLLLLMMMLLAMHHHHHHHHDDMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMDHHHHLLLLLLLMLLLLLMMMMLLLMMLLLMMLLLLLLMMLMDDDDNRRRNNEREEEEDDDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMF","n":["AskBootstrapMipStore","AskBootstrapPart","AskBootstrapPeers","BootstrapClientMessage","BootstrapClientMessageDeserializer","BootstrapClientMessageSerializer","BootstrapConfig","BootstrapError","BootstrapError","BootstrapFinished","BootstrapManager","BootstrapMipStore","BootstrapPart","BootstrapPeers","BootstrapServerMessage","BootstrapServerMessageDeserializer","BootstrapServerMessageDeserializerArgs","BootstrapServerMessageSerializer","BootstrapSuccess","BootstrapTime","Both","DefaultConnector","DefaultListener","GlobalBootstrapState","IPv4","IPv6","IpType","SlotTooOld","_listen_handle","async_pool_deserializer","async_pool_serializer","block_id_set_deserializer","block_id_set_serializer","block_ids_step_deserializer","block_ids_step_serializer","bool_deserializer","bool_serializer","bootstrap_blacklist_path","bootstrap_list","bootstrap_protocol","bootstrap_timeout","bootstrap_whitelist_path","bootstrapable_graph_deserializer","bootstrapable_graph_serializer","borrow","borrow_mut","cache_duration","client","client_binder","connect_timeout","consensus_bootstrap_part_size","cycle_step_deserializer","cycle_step_serializer","deref","deref_mut","deserialize","drop","endorsement_count","endorsement_count","error","establisher","exec_ops_deserializer","exec_ops_serializer","final_state","from","get_state","graph","id_deserializer","init","into","into_request","ip_list_max_size","keep_ledger","ledger_bytes_deserializer","ledger_step_deserializer","ledger_step_serializer","length_bootstrap_error","length_error_deserializer","length_state_changes","listen_addr","listen_stopper_tx","main_handle","max_advertise_length","max_advertise_length","max_async_message_data","max_async_message_data","max_async_pool_changes","max_async_pool_changes","max_async_pool_length","max_async_pool_length","max_bootstrap_blocks_length","max_bootstrap_blocks_length","max_bootstrap_error_length","max_bootstrap_error_length","max_bootstrap_final_state_parts_size","max_bootstrap_final_state_parts_size","max_bootstrap_message_size","max_bytes_read_write","max_changes_slot_count","max_changes_slot_count","max_clock_delta","max_consensus_block_ids","max_credits_length","max_credits_length","max_datastore_entry_count","max_datastore_entry_count","max_datastore_key_length","max_datastore_key_length","max_datastore_value_length","max_datastore_value_length","max_denunciation_changes_length","max_denunciation_changes_length","max_denunciations_per_block_header","max_denunciations_per_block_header","max_executed_ops_length","max_executed_ops_length","max_function_name_length","max_ledger_changes_count","max_ledger_changes_count","max_op_datastore_entry_count","max_op_datastore_key_length","max_op_datastore_value_length","max_operations_per_block","max_operations_per_block","max_ops_changes_length","max_ops_changes_length","max_parameters_size","max_ping","max_production_stats_length","max_production_stats_length","max_rolls_length","max_rolls_length","max_simultaneous_bootstraps","message_id_deserializer","messages","mip_store","mip_store_stats_block_considered","mip_store_stats_block_considered","mip_store_stats_counters_max","mip_store_stats_counters_max","new","opt_last_start_period_deserializer","opt_last_start_period_serializer","opt_pos_cycle_deserializer","opt_pos_cycle_serializer","peers","peers_deserializer","peers_serializer","per_ip_min_interval","periods_per_cycle","pointer_metadata","pool_step_deserializer","pool_step_serializer","pos_credits_deserializer","pos_credits_serializer","processed_de_deserializer","processed_de_serializer","randomness_size_bytes","read_error_timeout","read_timeout","retry_delay","server","server_binder","settings","slot_deserializer","slot_deserializer","slot_serializer","slot_serializer","slot_step_deserializer","slot_step_serializer","start_bootstrap_server","state_changes_deserializer","state_changes_serializer","store_deserializer","store_serializer","thread_count","thread_count","time_deserializer","time_serializer","tools","try_from","try_into","type_id","u32_serializer","u32_serializer","u64_serializer","upcast_any_box","upcast_any_mut","upcast_any_ref","update_handle","update_stopper_tx","vec_u8_serializer","version_deserializer","version_serializer","vzip","write_error_timeout","write_timeout","error","last_consensus_step","last_credits_step","last_cycle_step","last_de_step","last_ledger_step","last_ops_step","last_pool_step","last_slot","send_last_start_period","async_pool_part","consensus_outdated_ids","consensus_part","error","exec_ops_part","final_state_changes","last_start_period","ledger_part","peers","pos_credits_part","pos_cycle_part","processed_de_part","server_time","slot","store","version","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","bootstrap_from_server","connect_to_server","filter_bootstrap_list","get_bootstrap_list_iter","get_state","send_client_message","stream_final_state_and_consensus","BootstrapClientBinder","borrow","borrow_mut","cfg","deref","deref_mut","deserialize","drop","duplex","from","handshake","init","into","into_request","new","next_timeout","pointer_metadata","prev_message","remote_pubkey","send_timeout","size_field_len","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","version_serializer","vzip","BlackListed","BootstrapError","ClockError","DeserializeError","DisplayToDisplayDoc","FinalStateError","GeneralError","IncompatibleVersionError","InitListError","Interupted","IoError","MassaConsensusError","MassaHashError","MassaSignatureError","MissingKeyError","ModelsError","NetworkError","PathToDisplayDoc","PoSError","ReceivedError","SerializeError","TimeError","TimedOut","UnexpectedClientMessage","UnexpectedConnectionDrop","UnexpectedServerMessage","WhiteListed","_DERIVE_Display_FOR_BootstrapError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","pointer_metadata","provide","source","to_string","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","BSConnector","BSListener","DefaultConnector","DefaultListener","accept","accept","borrow","borrow","borrow_mut","borrow_mut","connect_timeout","connect_timeout","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","new","pointer_metadata","pointer_metadata","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","AskBootstrapMipStore","AskBootstrapMipStore","AskBootstrapMipStore__num_enum_0__","AskBootstrapPart","AskBootstrapPeers","AskBootstrapPeers","AskBootstrapPeers__num_enum_0__","AskFinalStatePart","AskFinalStatePart__num_enum_0__","BootstrapClientMessage","BootstrapClientMessageDeserializer","BootstrapClientMessageSerializer","BootstrapError","BootstrapError","BootstrapError","BootstrapError","BootstrapError__num_enum_0__","BootstrapError__num_enum_0__","BootstrapFinished","BootstrapMipStore","BootstrapPart","BootstrapPeers","BootstrapServerMessage","BootstrapServerMessageDeserializer","BootstrapServerMessageSerializer","BootstrapSuccess","BootstrapSuccess","BootstrapSuccess__num_enum_0__","BootstrapTime","BootstrapTime","BootstrapTime__num_enum_0__","FinalStateFinished","FinalStateFinished__num_enum_0__","FinalStatePart","FinalStatePart__num_enum_0__","MessageClientTypeId","MessageServerTypeId","MipStore","MipStore__num_enum_0__","Peers","Peers__num_enum_0__","SlotTooOld","SlotTooOld","SlotTooOld__num_enum_0__","async_pool_deserializer","async_pool_serializer","block_id_set_deserializer","block_id_set_serializer","block_ids_step_deserializer","block_ids_step_serializer","bool_deserializer","bool_serializer","bootstrapable_graph_deserializer","bootstrapable_graph_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cycle_step_deserializer","cycle_step_serializer","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","exec_ops_deserializer","exec_ops_serializer","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","id_deserializer","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ledger_bytes_deserializer","ledger_step_deserializer","ledger_step_serializer","length_bootstrap_error","length_error_deserializer","length_state_changes","message_id_deserializer","new","new","new","new","opt_last_start_period_deserializer","opt_last_start_period_serializer","opt_pos_cycle_deserializer","opt_pos_cycle_serializer","peers_deserializer","peers_serializer","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pool_step_deserializer","pool_step_serializer","pos_credits_deserializer","pos_credits_serializer","processed_de_deserializer","processed_de_serializer","serialize","serialize","slot_deserializer","slot_deserializer","slot_serializer","slot_serializer","slot_step_deserializer","slot_step_serializer","state_changes_deserializer","state_changes_serializer","store_deserializer","store_serializer","time_deserializer","time_serializer","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_serializer","u32_serializer","u64_serializer","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vec_u8_serializer","version_deserializer","version_serializer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","last_consensus_step","last_credits_step","last_cycle_step","last_de_step","last_ledger_step","last_ops_step","last_pool_step","last_slot","send_last_start_period","async_pool_part","consensus_outdated_ids","consensus_part","error","exec_ops_part","final_state_changes","last_start_period","ledger_part","peers","pos_credits_part","pos_cycle_part","processed_de_part","server_time","slot","store","version","BootstrapManager","BootstrapServer","BsConn","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","_LEN","_likely","_listen_handle","bootstrap_config","borrow","borrow","borrow_mut","borrow_mut","cold","consensus_controller","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","final_state","from","from","greedy_client_check","init","init","into","into","into_request","into_request","ip_hist_map","keypair","listen_stopper_rx","listen_stopper_tx","listener_rx","main_handle","manage_bootstrap","mip_store","network_command_sender","pointer_metadata","pointer_metadata","receive_connection","run_bootstrap_session","run_listener","run_loop","run_updater","start_bootstrap_server","step_timeout_duration","stop","stream_bootstrap_information","try_from","try_from","try_into","try_into","type_id","type_id","unbind","unbind","unlikely","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","update_handle","update_stopper_tx","version","vzip","vzip","white_black_list","white_black_list","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","SharedWhiteBlackList","WhiteBlackListInner","black_list","black_path","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","from","from","from_ref","init","init","init_list","inner","into","into","into_request","into_request","is_ip_allowed","load_list","new","pointer_metadata","pointer_metadata","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","update","update_list","vzip","vzip","white_list","white_path","BootstrapServerBinder","CALLSITE","CALLSITE","META","META","borrow","borrow_mut","close_and_send_error","deref","deref_mut","deserialize","drop","duplex","from","handshake_timeout","init","into","into_request","local_keypair","max_bootstrap_message_size","max_consensus_block_ids","max_datastore_key_length","new","next_timeout","pointer_metadata","prev_message","randomness_size_bytes","send_error_timeout","send_msg","send_timeout","size_field_len","thread_count","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","version_deserializer","version_serializer","vzip","write_error_timeout","BootstrapClientConfig","BootstrapConfig","BootstrapServerMessageDeserializerArgs","BootstrapSrvBindCfg","Both","FIELDS","FIELDS","FIELDS","IPv4","IPv6","IpType","VARIANTS","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field10","__field10","__field11","__field11","__field12","__field12","__field13","__field13","__field14","__field14","__field15","__field15","__field16","__field16","__field17","__field17","__field18","__field18","__field19","__field19","__field2","__field2","__field2","__field2","__field20","__field20","__field21","__field21","__field22","__field22","__field23","__field23","__field24","__field24","__field25","__field25","__field26","__field26","__field27","__field28","__field29","__field3","__field3","__field3","__field30","__field31","__field32","__field33","__field34","__field35","__field36","__field37","__field38","__field39","__field4","__field4","__field4","__field40","__field41","__field42","__field43","__field44","__field45","__field46","__field47","__field48","__field49","__field5","__field5","__field5","__field50","__field51","__field52","__field53","__field6","__field6","__field6","__field7","__field7","__field8","__field8","__field9","__field9","__ignore","__ignore","__ignore","bootstrap_blacklist_path","bootstrap_list","bootstrap_protocol","bootstrap_timeout","bootstrap_whitelist_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_duration","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect_timeout","consensus_bootstrap_part_size","consensus_bootstrap_part_size","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","endorsement_count","endorsement_count","endorsement_count","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ip_list_max_size","keep_ledger","lifetime","lifetime","lifetime","lifetime","listen_addr","marker","marker","marker","marker","max_advertise_length","max_advertise_length","max_advertise_length","max_async_message_data","max_async_message_data","max_async_message_data","max_async_pool_changes","max_async_pool_changes","max_async_pool_changes","max_async_pool_length","max_async_pool_length","max_async_pool_length","max_bootstrap_blocks_length","max_bootstrap_blocks_length","max_bootstrap_blocks_length","max_bootstrap_error_length","max_bootstrap_error_length","max_bootstrap_error_length","max_bootstrap_final_state_parts_size","max_bootstrap_final_state_parts_size","max_bootstrap_final_state_parts_size","max_bootstrap_message_size","max_bootstrap_message_size","max_bootstrap_message_size","max_bytes_read_write","max_bytes_read_write","max_bytes_read_write","max_changes_slot_count","max_changes_slot_count","max_changes_slot_count","max_clock_delta","max_consensus_block_ids","max_credits_length","max_credits_length","max_credits_length","max_datastore_entry_count","max_datastore_entry_count","max_datastore_entry_count","max_datastore_key_length","max_datastore_key_length","max_datastore_key_length","max_datastore_key_length","max_datastore_value_length","max_datastore_value_length","max_datastore_value_length","max_denunciation_changes_length","max_denunciation_changes_length","max_denunciation_changes_length","max_denunciations_per_block_header","max_denunciations_per_block_header","max_denunciations_per_block_header","max_executed_ops_length","max_executed_ops_length","max_executed_ops_length","max_function_name_length","max_ledger_changes_count","max_ledger_changes_count","max_ledger_changes_count","max_op_datastore_entry_count","max_op_datastore_key_length","max_op_datastore_value_length","max_operations_per_block","max_operations_per_block","max_operations_per_block","max_ops_changes_length","max_ops_changes_length","max_ops_changes_length","max_parameters_size","max_ping","max_production_stats_length","max_production_stats_length","max_production_stats_length","max_rolls_length","max_rolls_length","max_rolls_length","max_simultaneous_bootstraps","mip_store_stats_block_considered","mip_store_stats_block_considered","mip_store_stats_block_considered","mip_store_stats_counters_max","mip_store_stats_counters_max","mip_store_stats_counters_max","per_ip_min_interval","periods_per_cycle","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","randomness_size_bytes","randomness_size_bytes","randomness_size_bytes","read_error_timeout","read_timeout","retry_delay","thread_count","thread_count","thread_count","thread_count","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_error_timeout","write_error_timeout","write_timeout","normalize_ip"],"q":["massa_bootstrapmassa_bootstrap::BootstrapClientMessage","","","","","","","","","","massa_bootstrap::BootstrapServerMessage","","","","","","","","","","","","","","","","massa_bootstrap::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::client_binder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::establisher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::messagesmassa_bootstrap::messages::BootstrapClientMessage","","","","","","","","","","massa_bootstrap::messages::BootstrapServerMessage","","","","","","","","","","","","","","","","massa_bootstrap::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::server::white_black_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::server_binder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_bootstrap::settingsmassa_bootstrap::tools"],"d":["Ask for mip store","Ask for a final state and consensus part","Ask for bootstrap peers","Messages used during bootstrap by client","Deserializer for <code>BootstrapClientMessage</code>","Serializer for <code>BootstrapClientMessage</code>","Bootstrap configuration.","Bootstrap error","Bootstrap error","Message sent when the final state and consensus bootstrap …","handle on the bootstrap server","Bootstrap versioning store","Part of final state and consensus","Bootstrap peers","Messages used during bootstrap by server","Deserializer for <code>BootstrapServerMessage</code>","Bootstrap Message der args","Serializer for <code>BootstrapServerMessage</code>","Bootstrap succeed","Sync clocks","Bootstrap with both IPv4 and IPv6 protocols (default).","Initiates a connection with given timeout in milliseconds","The listener we are using","a collection of the bootstrap state snapshots of all …","Bootstrap only with IPv4.","Bootstrap only with IPv6.","Bootstrap IP protocol version setting.","Slot sent to get state changes is too old","","","","","","","","","","Path to the bootstrap blacklist file. This whitelist …","Ip address of our bootstrap nodes and their public key.","IP version filter for bootstrap list, targeting …","Time allocated to managing the bootstrapping process, i.e. …","Path to the bootstrap whitelist file. This whitelist …","","","","","Cache duration","","","connection timeout","consensus bootstrap part size","","","","","","","endorsement count","","","","","","state of the final state","Returns the argument unchanged.","Gets the state from a bootstrap server needs to be …","state of the consensus graph","","","Calls <code>U::from(self)</code>.","","Max size of the IP list","Keep ledger or not if not bootstrap","","","","","","","Port to listen if we choose to allow other nodes to use us …","","","max advertise length","","max data async message","","max async pool changes","","max async pool length","","max bootstrap blocks length","","max bootstrap error length","","max bootstrap final state parts size","","max bootstrap message size in bytes","Read-Write limitation for a connection in bytes per seconds","max slot count in state changes","","Maximum allowed time between server and client clocks","max number of consensus block ids when sending a bootstrap …","max credits in proof-of-stake and state changes","","max datastore entry count","","max datastore key length","","max datastore value length","","max processed denunciations changes","","max denunciations in block header","","max executed ops","","max function name length","max ledger changes","","max op datastore entry count","max op datastore key length","max op datastore value length","max operations per block","","max executed ops changes","","max parameters size","Max ping delay.","max production stats in proof-of-stake and state changes","","max rolls in proof-of-stake and state changes","","Max simultaneous bootstraps","","","versioning info state","block count to check / process for versioning stats","","max number of counters for versioning stats","","","","","","","list of network peers","","","Minimum interval between two bootstrap attempts from a …","period per cycle","","","","","","","","randomness size bytes","readout error timeout","readout timeout","Time we wait before retrying a bootstrap","start the bootstrapping system using <code>start_bootstrap_server</code>","","","","","","","","","See module level documentation for details","","","","","thread count","","","","","","","","","","","","","","","","","","","","write error timeout","write timeout","Error message","Last received consensus block slot","Last received Proof of Stake credits slot","Last received Proof of Stake cycle","Last received processed denunciations associated slot","Last received ledger key","Last received executed operation associated slot","Last received async message id","Slot we are attached to for changes","Should be true only for the first part, false later","Part of the async pool","Outdated block ids in the current consensus graph bootstrap","Part of the consensus graph","Error message","Part of the executed operations","Ledger change for addresses inferior to <code>address</code> of the …","Last Start Period for network restart management","Part of the execution ledger sent in a serialized way","Server peers","Part of the Proof of Stake <code>deferred_credits</code>","Part of the Proof of Stake <code>cycle_history</code>","Part of the executed operations","The current time on the bootstrap server.","Slot the state changes are attached to","Server mip store","The version of the bootstrap server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the state from a bootstrap server (internal private …","","","","Gets the state from a bootstrap server needs to be …","","This function will send the starting point to receive a …","Bootstrap client binder","","","","","","","","","Returns the argument unchanged.","Performs a handshake. Should be called after connection …","","Calls <code>U::from(self)</code>.","","Creates a new <code>WriteBinder</code>.","Reads the next message.","","","","Send a message to the bootstrap server","","","","","","","","","","IP {0} is blacklisted","","clock error: {0}","deserialization error: {0}","","final state error: {0}","general bootstrap error: {0}","incompatible version: {0}","fail to init the list from file : {0}","The bootstrap process ended prematurely - e.g. too much …","all io errors except for Timedout, and would-block (unix …","<code>massa_consensus</code> error: {0}","<code>massa_hash</code> error: {0}","<code>massa_signature</code> error {0}","missing keypair file","models error: {0}","network error: {0}","","Proof-of-Stake error: {0}","Received error: {0}","serialize error: {0}","time error: {0}","We want to handle Timedout and WouldBlock","unexpected message received from client: {0:?}","connection with bootstrap node dropped","unexpected message received from server: {0:?}","IP {0} is not in the whitelist","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Specifies a common interface that can be used by standard, …","Specifies a common interface that can be used by standard, …","Initiates a connection with given timeout in milliseconds","The listener we are using","","Accepts a new incoming connection from this listener.","","","","","","Tries to connect to address","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Provides a standard TcpListener","","","","","","","","","","","","","","","","","Ask for mip store","","","Ask for a final state and consensus part","Ask for bootstrap peers","","","","","Messages used during bootstrap by client","Deserializer for <code>BootstrapClientMessage</code>","Serializer for <code>BootstrapClientMessage</code>","Bootstrap error","","Bootstrap error","","","","Message sent when the final state and consensus bootstrap …","Bootstrap versioning store","Part of final state and consensus","Bootstrap peers","Messages used during bootstrap by server","Deserializer for <code>BootstrapServerMessage</code>","Serializer for <code>BootstrapServerMessage</code>","Bootstrap succeed","","","Sync clocks","","","","","","","","","","","","","Slot sent to get state changes is too old","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Example","","","Example","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new <code>BootstrapServerMessageSerializer</code>","Creates a new <code>BootstrapServerMessageDeserializer</code>","Creates a new <code>BootstrapClientMessageSerializer</code>","Creates a new <code>BootstrapClientMessageDeserializer</code>","","","","","","","","","","","","","","","","","","","","","Example","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error message","Last received consensus block slot","Last received Proof of Stake credits slot","Last received Proof of Stake cycle","Last received processed denunciations associated slot","Last received ledger key","Last received executed operation associated slot","Last received async message id","Slot we are attached to for changes","Should be true only for the first part, false later","Part of the async pool","Outdated block ids in the current consensus graph bootstrap","Part of the consensus graph","Error message","Part of the executed operations","Ledger change for addresses inferior to <code>address</code> of the …","Last Start Period for network restart management","Part of the execution ledger sent in a serialized way","Server peers","Part of the Proof of Stake <code>deferred_credits</code>","Part of the Proof of Stake <code>cycle_history</code>","Part of the executed operations","The current time on the bootstrap server.","Slot the state changes are attached to","Server mip store","The version of the bootstrap server.","handle on the bootstrap server","","Abstraction layer over data produced by the listener, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Checks latest attempt. If too recent, provides the bad …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","These are the steps to ensure that a connection is only …","To be called from a <code>thread::spawn</code> invocation","Listens on a channel for incoming connections, and loads …","","","See module level documentation for details","","stop the bootstrap server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around the white/black lists that allows …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Checks if the white/black list is up to date with a …","","","","","","Bootstrap server binder","","","","","","","Spawns a threadblocks on the passed in runtimeuses passed …","","","","","","Returns the argument unchanged.","Performs a handshake. Should be called after connection …","","Calls <code>U::from(self)</code>.","","","","","","Creates a new <code>WriteBinder</code>.","Read a message sent from the client (not signed).","","","","","","Writes the next message.","","","","","","","","","","","","","Bootstrap client config","Bootstrap configuration.","Bootstrap Message der args","Bootstrap server binding","Bootstrap with both IPv4 and IPv6 protocols (default).","","","","Bootstrap only with IPv4.","Bootstrap only with IPv6.","Bootstrap IP protocol version setting.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to the bootstrap blacklist file. This whitelist …","Ip address of our bootstrap nodes and their public key.","IP version filter for bootstrap list, targeting …","Time allocated to managing the bootstrapping process, i.e. …","Path to the bootstrap whitelist file. This whitelist …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cache duration","","","","","","","","","connection timeout","consensus bootstrap part size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","endorsement count","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Max size of the IP list","Keep ledger or not if not bootstrap","","","","","Port to listen if we choose to allow other nodes to use us …","","","","","max advertise length","","","max data async message","","","max async pool changes","","","max async pool length","","","max bootstrap blocks length","","","max bootstrap error length","","","max bootstrap final state parts size","","","max bootstrap message size in bytes","","","Read-Write limitation for a connection in bytes per seconds","","","max slot count in state changes","","","Maximum allowed time between server and client clocks","max number of consensus block ids when sending a bootstrap …","max credits in proof-of-stake and state changes","","","max datastore entry count","","","max datastore key length","","","","max datastore value length","","","max processed denunciations changes","","","max denunciations in block header","","","max executed ops","","","max function name length","max ledger changes","","","max op datastore entry count","max op datastore key length","max op datastore value length","max operations per block","","","max executed ops changes","","","max parameters size","Max ping delay.","max production stats in proof-of-stake and state changes","","","max rolls in proof-of-stake and state changes","","","Max simultaneous bootstraps","block count to check / process for versioning stats","","","max number of counters for versioning stats","","","Minimum interval between two bootstrap attempts from a …","period per cycle","","","","","","","","","","","","","","","","","","randomness size bytes","","","readout error timeout","readout timeout","Time we wait before retrying a bootstrap","thread count","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","write error timeout","","write timeout","Why not just to_canonical ? Because the case in which the …"],"i":[28,28,28,0,0,0,0,35,28,35,0,35,35,35,0,0,0,0,28,35,32,0,0,0,32,32,0,35,23,59,57,59,57,63,58,63,58,4,4,4,4,4,59,57,13,13,4,0,0,4,4,63,58,13,13,13,13,4,67,0,0,59,57,13,13,0,13,63,13,13,13,4,4,59,63,58,59,63,59,4,23,23,4,67,4,67,4,67,4,67,4,67,4,67,4,67,4,4,4,67,4,4,4,67,4,67,4,67,4,67,4,67,4,67,4,67,4,4,67,4,4,4,4,67,4,67,4,4,4,67,4,67,4,59,0,13,4,67,4,67,13,59,57,59,57,13,59,57,4,4,13,63,58,59,57,59,57,4,4,4,4,0,0,0,59,63,57,58,63,58,0,59,57,59,57,4,67,59,57,0,13,13,13,57,58,57,13,13,13,23,23,57,59,57,13,4,4,104,105,105,105,105,105,105,105,105,105,106,106,106,107,106,106,106,106,108,106,106,106,109,106,110,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,14,0,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14,0,111,112,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,19,55,55,56,55,56,8,56,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,55,56,55,56,55,56,55,56,55,56,55,56,55,56,55,56,28,66,0,28,28,66,0,66,0,0,0,0,35,64,28,66,0,0,35,35,35,35,0,0,0,28,66,0,35,64,0,64,0,64,0,0,0,64,0,64,0,35,64,0,59,57,59,57,63,58,63,58,59,57,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,35,28,35,28,63,58,57,58,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,57,59,59,58,63,63,35,64,28,66,57,59,58,63,35,64,28,66,64,66,64,64,66,66,59,57,35,64,28,66,57,59,58,63,35,64,28,66,35,28,63,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,59,63,58,59,63,59,59,57,59,58,63,59,57,59,57,59,57,57,59,58,63,35,64,28,66,63,58,59,57,59,57,57,58,59,63,57,58,63,58,59,57,59,57,59,57,35,28,35,57,59,58,63,35,64,64,28,66,66,64,66,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,57,58,57,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,57,59,58,63,35,64,28,66,57,59,57,57,59,58,63,35,64,28,66,104,105,105,105,105,105,105,105,105,105,106,106,106,107,106,106,106,106,108,106,106,106,109,106,110,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,74,23,74,23,74,0,74,23,74,23,74,23,74,23,74,74,23,74,74,23,74,23,74,23,74,74,74,74,23,74,23,0,74,74,23,74,74,0,74,74,74,0,0,23,0,23,74,23,74,23,74,0,0,0,23,74,23,74,23,74,23,23,74,23,74,0,74,0,0,0,0,0,0,0,0,0,0,85,77,77,85,77,85,77,77,85,77,85,77,85,77,85,77,85,77,85,77,77,85,85,77,77,85,77,85,77,85,77,77,85,77,77,85,77,85,77,85,77,85,77,85,77,85,77,85,77,85,85,77,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,0,0,0,32,0,0,0,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,92,93,94,91,92,93,94,92,94,92,94,92,94,92,94,92,94,92,94,92,94,92,94,92,94,92,94,91,92,93,94,92,94,92,94,92,94,92,94,92,94,92,94,92,94,92,92,92,92,93,94,92,92,92,92,92,92,92,92,92,92,92,93,94,92,92,92,92,92,92,92,92,92,92,92,93,94,92,92,92,92,92,93,94,92,94,92,94,92,94,92,93,94,4,4,4,4,4,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,4,32,4,90,37,32,4,90,37,4,4,90,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,32,91,91,95,96,4,4,92,92,97,98,93,93,99,100,90,90,94,94,101,102,37,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,4,37,67,95,96,97,98,99,100,101,102,32,95,96,4,97,98,99,100,90,101,102,37,32,91,95,96,4,92,97,98,93,99,100,90,90,94,101,102,37,37,67,67,32,4,90,37,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,4,4,96,98,100,102,4,96,98,100,102,4,37,67,4,37,67,4,37,67,4,37,67,4,37,67,4,37,67,4,37,67,4,90,37,4,90,37,4,37,67,4,4,4,37,67,4,37,67,4,90,37,67,4,37,67,4,37,67,4,37,67,4,37,67,4,4,37,67,4,4,4,4,37,67,4,37,67,4,4,4,37,67,4,37,67,4,4,37,67,4,37,67,4,4,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,4,90,37,4,4,4,4,90,37,67,32,4,90,37,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,95,97,99,101,96,98,100,102,98,100,102,95,97,99,101,95,97,99,101,32,91,95,96,4,92,97,98,93,99,100,90,94,101,102,37,67,4,90,4,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,[1],[1],[[],[[3,[2]]]],[1],0,0,0,0,0,0,0,[[]],[[4,[7,[[6,[5]]]],8,9,10,[11,[10]],[11,[12]]],[[3,[13,14]]]],0,0,[[],1],[[]],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[7,[[6,[5]]]]],13],0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[16]],18,[7,[[6,[5]]]],4,[0,[19,20]],21,9,22],[[3,[[11,[23]],14]]]],0,0,0,0,0,0,0,0,0,[[],3],[[],3],[[],24],0,0,0,[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,27,28,13,9],[[3,[14]]]],[[4,29,30],[[3,[27,14]]]],[[31,32],31],[4,[[3,[31,14]]]],[[4,[7,[[6,[5]]]],8,9,10,[11,[10]],[11,[12]]],[[3,[13,14]]]],[[28,27,33,33,34],[[3,[35,14]]]],[[4,27,28,13],[[3,[14]]]],0,[[]],[[]],0,[1],[1],[[],[[3,[2]]]],[1],0,[[]],[[27,9],[[3,[14]]]],[[],1],[[]],[[],15],[[36,30,37],27],[[27,[11,[33]]],[[3,[35,14]]]],[[]],0,0,[[27,28,[11,[33]]],[[3,[14]]]],0,[[],3],[[],3],[[],24],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],38],[[]],[[]],[1],[1],[[],[[3,[2]]]],[1],[[14,39],40],[[14,39],40],[41,14],[[]],[42,14],[43,14],[44,14],[45,14],[46,14],[47,14],[48,14],[49,14],[50,14],[[],1],[[]],[[],15],[[]],[51],[14,[[11,[52]]]],[[],53],[[],3],[[],3],[[],24],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],[[]],0,0,0,0,[[],54],[55,54],[[]],[[]],[[]],[[]],[[29,[11,[10]]],[[54,[36]]]],[[56,29,[11,[10]]],[[54,[36]]]],[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],[[55,39],40],[[56,39],40],[[]],[[]],[[],1],[[],1],[[]],[[]],[[],15],[[],15],[29,[[54,[55]]]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],24],[[],24],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[28,28],[[]],[[]],0,0,[[],57],[[],58],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],[59,[[62,[35,[0,[60,61]]]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[63,[[62,[28,[0,[60,61]]]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],[1],[1],[1],[1],[1],[1],[[64,64],65],[[66,66],65],[[],65],[[],65],[[],65],[[],65],0,0,[[35,39],40],[[64,39],40],[[28,39],40],[[66,39],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,[[],57],[67,59],[[],58],[[68,68,12],63],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[57,35,31],[[3,[41]]]],[[58,28,31],[[3,[41]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[35,53],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[69,[[3,[64,[70,[64]]]]]],[[],3],[69,[[3,[66,[70,[66]]]]]],[[],3],[[],[[3,[64,[70,[64]]]]]],[[],[[3,[66,[70,[66]]]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[65,65],0,0,[[]],[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],0,[[]],[[]],[[71,29,72,33],[[3,[33]]]],[[],1],[[],1],[[]],[[]],[[],15],[[],15],0,0,0,0,0,0,[[4,73,[7,[[6,[5]]]],9,[17,[16]],18,72,22],[[3,[14]]]],0,0,[[]],[[]],[[74,75],[[3,[11,14]]]],[[73,7,4,29,[7,[[6,[5]]]],9,[17,[16]],18,22]],[[19,76],[[3,[3,14]]]],[[74,1],[[3,[14]]]],[[77,33,78],[[3,[14]]]],[[[17,[16]],18,[7,[[6,[5]]]],4,[0,[19,20]],21,9,22],[[3,[[11,[23]],14]]]],[[72,33],[[11,[33]]]],[23,[[3,[14]]]],[[73,[7,[[6,[5]]]],[17,[16]],[11,[79]],[81,[80]],[81,[82]],[81,[12]],[81,[79]],[81,[79]],[81,[79]],[81,[[84,[83]]]],65,72,33],[[3,[14]]]],[[],3],[[],3],[[],3],[[],3],[[],24],[[],24],[[]],[[]],[65,65],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],[[],26],[[],26],0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[77,77],[[]],[[],85],[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],[[]],[[]],[[]],[[],1],[[],1],[[86,86],[[3,[14]]]],0,[[]],[[]],[[],15],[[],15],[[77,29],[[3,[14]]]],[[86,65],[[3,[[11,[[88,[87]]]],14]]]],[[89,89],[[3,[77,14]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],24],[[],24],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[77,[[3,[14]]]],[[86,86],[[3,[14]]]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[73,53,29]],[1],[1],[[],[[3,[2]]]],[1],0,[[]],[[73,9,[11,[33]]],[[3,[14]]]],[[],1],[[]],[[],15],0,0,0,0,[[36,21,90],73],[[73,[11,[33]]],[[3,[28,14]]]],[[]],0,0,[[73,53],[[3,[14]]]],[[73,33,35],[[3,[14]]]],[[73,35,[11,[33]]],[[3,[14]]]],0,0,[[],3],[[],3],[[],24],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[32,32],[4,4],[90,90],[37,37],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[32]]]],[[],[[3,[91]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[4]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[92]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[93]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[90]]]],[[],[[3,[94]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[37]]]],[[],[[3,[2]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,[[95,39],40],[[96,39],40],[[97,39],40],[[98,39],40],[[99,39],40],[[100,39],40],[[101,39],40],[[102,39],40],[[32,39],40],[39,[[3,[103]]]],[39,[[3,[103]]]],[[4,39],40],[39,[[3,[103]]]],[39,[[3,[103]]]],[39,[[3,[103]]]],[39,[[3,[103]]]],[[90,39],40],[39,[[3,[103]]]],[39,[[3,[103]]]],[[37,39],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,90],[[]],[[]],[[]],[[]],[[]],[4,37],[[]],[37,67],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[[17,[25]]],[[17,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[95,3],[97,3],[99,3],[101,3],[96,3],[98,3],[100,3],[102,3],[98,3],[100,3],[102,3],[[95,34],3],[[97,34],3],[[99,34],3],[[101,34],3],[[95,12],3],[[97,12],3],[[99,12],3],[[101,12],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[87,87]],"p":[[15,"usize"],[3,"With"],[4,"Result"],[3,"BootstrapConfig"],[3,"FinalState"],[6,"RwLock"],[3,"Arc"],[8,"BSConnector"],[3,"Version"],[3,"MassaTime"],[4,"Option"],[15,"u64"],[3,"GlobalBootstrapState"],[4,"BootstrapError"],[3,"Request"],[8,"ConsensusController"],[3,"Box"],[3,"NetworkCommandSender"],[8,"BSListener"],[8,"Send"],[3,"KeyPair"],[3,"MipStore"],[3,"BootstrapManager"],[3,"TypeId"],[3,"Global"],[8,"Any"],[3,"BootstrapClientBinder"],[4,"BootstrapClientMessage"],[4,"SocketAddr"],[3,"PublicKey"],[3,"Vec"],[4,"IpType"],[3,"Duration"],[15,"str"],[4,"BootstrapServerMessage"],[3,"TcpStream"],[3,"BootstrapClientConfig"],[3,"Display"],[3,"Formatter"],[6,"Result"],[4,"SerializeError"],[4,"ModelsError"],[4,"MassaHashError"],[3,"Error"],[4,"PosError"],[4,"TimeError"],[4,"FinalStateError"],[4,"ConsensusError"],[4,"NetworkError"],[4,"MassaSignatureError"],[3,"Demand"],[8,"Error"],[3,"String"],[6,"Result"],[3,"DefaultListener"],[3,"DefaultConnector"],[3,"BootstrapServerMessageSerializer"],[3,"BootstrapClientMessageSerializer"],[3,"BootstrapServerMessageDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[3,"BootstrapClientMessageDeserializer"],[4,"MessageServerTypeId"],[15,"bool"],[4,"MessageClientTypeId"],[3,"BootstrapServerMessageDeserializerArgs"],[15,"u8"],[15,"u32"],[3,"TryFromPrimitiveError"],[3,"HashMap"],[3,"Instant"],[3,"BootstrapServerBinder"],[3,"BootstrapServer"],[3,"Select"],[3,"Sender"],[3,"SharedWhiteBlackList"],[3,"Receiver"],[3,"Slot"],[3,"Key"],[4,"StreamingStep"],[6,"AsyncMessageId"],[3,"BlockId"],[6,"PreHashSet"],[3,"WhiteBlackListInner"],[3,"Path"],[4,"IpAddr"],[3,"HashSet"],[3,"PathBuf"],[3,"BootstrapSrvBindCfg"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[13,"BootstrapError"],[13,"AskBootstrapPart"],[13,"BootstrapPart"],[13,"BootstrapError"],[13,"BootstrapPeers"],[13,"BootstrapTime"],[13,"BootstrapMipStore"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_cipher":{"doc":"MASSA Cipher crate","t":"ENNNAAFAFARRRRFFENININRKKLLLLLLLLLLLLLL","n":["CipherError","DecryptionError","EncryptionError","Utf8Error","constants","decrypt","decrypt","encrypt","encrypt","error","HASH_PARAMS","NONCE_SIZE","SALT_SIZE","VERSION","decrypt","encrypt","CipherError","DecryptionError","DisplayToDisplayDoc","EncryptionError","PathToDisplayDoc","Utf8Error","_DERIVE_Display_FOR_CipherError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip"],"q":["massa_cipher","","","","","","","","","","massa_cipher::constants","","","","massa_cipher::decrypt","massa_cipher::encrypt","massa_cipher::error","","","","","","","","","","","","","","","","","","","","","",""],"d":["Cipher error","Decryption error: {0}","Encryption error: {0}","<code>Utf8</code> error: {0}","massa-cipher constant values.","massa-cipher decryption module.","Decryption function using AES-GCM cipher.","massa-cipher encryption module.","Encryption function using AES-GCM cipher.","massa-cipher error module","<code>PBKDF2</code> hash parameters.","AES-GCM-SIV nonce size.","<code>PBKDF2</code> salt size.","Cipher version","Decryption function using AES-GCM cipher.","Encryption function using AES-GCM cipher.","Cipher error","Decryption error: {0}","","Encryption error: {0}","","<code>Utf8</code> error: {0}","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,15,16,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,0,0,0,0,0,[1,[[3,[2]]]],0,[1,[[3,[[5,[4]],2]]]],0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[[5,[4]],2]]]],0,0,0,0,0,0,0,[[]],[[],6],[[]],[[]],[[2,7],8],[[2,7],8],[[]],[9,2],[[]],[10],[2,[[12,[11]]]],[[],13],[[],3],[[],3],[[],14],[[]]],"p":[[15,"str"],[4,"CipherError"],[4,"Result"],[15,"u8"],[3,"Vec"],[3,"Display"],[3,"Formatter"],[6,"Result"],[3,"Utf8Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_client":{"doc":"Massa stateless CLI","t":"WHDDFLLLLLOAMLLLLLLALLLMLLLLLLLLLMMFOMLMLLMMAOFLALLLLLLLLLLLLLLMWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNEDDDEDNMMMLLLLLLLLLLLLNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNLLLLLLLLLLLLLLLLLLLLNNNLLNFNLNLNLFLNMMLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLNNNNNNNNNNNNLLLLFFLLLLLLLNNLNFNLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNINNNNNENNNLLLLLLLLLLLKLLLLLLLLLWDDLLLLLLMLLLLLLLLMLLFLLLLLLLLLFLLLLLLLLLLLLLLLMLLDDRRRRDHDDEEEEDDDDDDDDNNNNNNNNNNNNNNNNNNNNNMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["","ATOMIC_ID","Args","JsonError","ask_password","borrow","borrow","borrow_mut","borrow_mut","clap","client_warning","cmds","command","deref","deref","deref_mut","deref_mut","deserialize","deserialize","display","drop","drop","erased_serialize","error","from","from","from_clap","init","init","into","into","into_request","into_request","ip","json","main","massa_fancy_ascii_art_logo","parameters","parse_args","password","pointer_metadata","pointer_metadata","private_port","public_port","repl","rpc_error","run","serialize","settings","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","wallet","","","","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","ARR","Add","AllowAll","Command","CommandIter","ExtendedWallet","ExtendedWalletEntry","ListOperation","ListOperationIter","Remove","address_info","back_idx","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_rolls","call_smart_contract","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","erased_serialize","erased_serialize","execute_smart_contract","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_str","from_str","get","get","get_addresses","get_blocks","get_datastore_entry","get_detailed_message","get_documentation","get_endorsements","get_file_as_byte_vec","get_filtered_sc_output_event","get_message","get_operations","get_serializations","get_status","get_str","help","help","help","idx","idx","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","is_pwd_needed","iter","iter","keypair","len","len","marker","marker","new","next","next","next_back","next_back","node_ban_by_id","node_ban_by_ip","node_bootstrap_blacklist","node_bootstrap_whitelist","node_get_staking_addresses","node_peers_whitelist","node_start_staking","node_stop","node_stop_staking","node_testnet_rewards_program_ownership_proof","node_unban_by_id","node_unban_by_ip","nth","nth","par_bridge","par_bridge","parse_key_value","parse_vec","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pretty_print","read_only_call","read_only_execute_smart_contract","run","sell_rolls","send_operation","send_transaction","serialize","serialize","show_keys","size_hint","size_hint","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","vzip","vzip","vzip","wallet_add_secret_keys","wallet_generate_secret_key","wallet_get_public_key","wallet_get_secret_key","wallet_info","wallet_remove_addresses","wallet_sign","when_episode_ends","when_moon","Bad","Block","Coins","Finished","Good","Id","Output","Pending","Protocol","Secret","Separator","Signature","Style","Time","Unknown","Wallet","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","into_request","pointer_metadata","pretty_print","stdout_json","style","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","","MassaCompleter","MyHelper","borrow","borrow","borrow_mut","borrow_mut","complete","complete","completer","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","file_completer","from","from","group_parameters","init","init","into","into","into_request","into_request","new","pointer_metadata","pointer_metadata","run","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","update","validate","validate_while_typing","validator","vzip","vzip","ClientSettings","DefaultNode","FIELDS","FIELDS","FIELDS","FIELDS","HttpSettings","LAZY","SETTINGS","Settings","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field2","__field2","__field2","__field3","__field3","__field4","__field4","__field5","__field6","__field7","__ignore","__ignore","__ignore","__ignore","__private_field","__stability","__static_ref_initialize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_store","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_node","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enabled","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","headers","history","history_file_path","http","id_kind","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ip","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","max_concurrent_requests","max_log_length","max_request_body_size","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","private_port","public_port","request_timeout","timeout","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["massa_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::cmdsmassa_client::display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::repl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_client::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Ask for the wallet password If the wallet does not exist, …","","","","","","print a yellow warning","","Command that client would execute (non-interactive mode)","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Address to listen on","Enable a mode where input/output are serialized as JSON","","Display the MASSA logo on the CLI with fancy colors","Optional command parameter (as a JSON string)","","Wallet password","","","Port to listen on (Massa private API).","Port to listen on (Massa public API).","","bail a shinny RPC error","","","Build here the default client settings from the …","","","","","","","","","","","","","","","Path of wallet file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the client commands the order they are defined is the …","An iterator over the variants of Self","Aggregation of the local, with some useful information as …","Used to have a shinny json output TODO re-factor me","","An iterator over the variants of Self","","address and balance information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","reads a file","","","","","","","Display the help of all commands","Display the help of the command with fancy colors and so on","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the command needs wallet access","","","the keypair","","","","","Reorganize everything into an extended wallet","","","","","","","","","","","","","","","","","","","","","","TODO: ugly utilities functions takes a slice of string and …","","","","","","","","","","run a given command","","helper to wrap and send an operation with proper validity …","","","","whether to display the public/secret keys or just the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bad things in general, failure of an operation","Any information concerning a block of the blockchain","Any amount of Massa coin displayed","If a process is finished, fixed, and won’t evolve in the …","Good things in general, success of an operation","Any information that identifies an element","","If a process is ongoing, not final, will change in the …","Any information related to the protocol, staking, peers …","For any secret information","To separate some informations on the screen by barely …","For cryptographic signature","","When displaying a timestamp or date","For any information that is unknown","For any information related to the wallet, addresses or …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Client settings the client settings.","","","","","","TODO add WebSocket to CLI Http client settings. the Http …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,11,14,11,14,11,0,0,11,11,14,11,14,11,14,0,11,14,14,14,11,14,11,11,14,11,14,11,14,11,11,0,0,11,11,11,11,14,11,11,0,0,0,14,0,11,14,11,14,11,14,11,14,11,14,11,14,11,14,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,26,27,19,20,21,19,20,26,27,28,21,19,20,26,27,28,21,21,19,20,19,20,21,19,20,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,21,21,27,28,21,21,21,21,26,26,27,27,28,28,21,19,20,26,27,28,19,20,21,26,19,20,21,21,21,21,21,21,0,21,21,21,21,21,21,0,21,21,19,20,21,19,20,26,27,28,21,19,20,26,27,28,19,20,21,19,20,26,27,28,21,21,26,27,19,20,19,20,28,19,20,19,20,21,21,21,21,21,21,21,21,21,21,21,21,19,20,19,20,0,0,21,19,20,26,27,28,28,21,21,21,21,0,21,27,28,27,19,20,19,20,21,26,27,28,21,21,19,20,26,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,19,20,26,27,28,21,21,21,21,21,21,21,21,21,43,43,43,43,43,43,0,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,39,39,43,43,43,43,43,43,43,43,0,0,0,46,49,46,49,46,49,49,46,49,46,49,46,49,46,49,46,46,49,0,46,49,46,49,46,49,46,46,49,0,46,49,46,49,46,49,46,49,46,49,46,49,49,49,49,49,46,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,59,60,61,58,59,60,58,59,60,58,60,58,60,60,60,60,58,59,60,61,57,0,0,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,55,53,53,54,55,56,53,54,55,56,53,57,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,53,58,58,62,63,54,54,59,59,64,65,55,55,60,60,66,67,56,56,61,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,56,62,63,64,65,66,67,68,69,53,62,63,54,64,65,55,66,67,56,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,53,54,55,56,55,53,53,55,55,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,54,63,65,67,69,63,65,67,69,55,55,55,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,54,54,55,53,53,54,55,56,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69,62,64,66,68,63,65,67,69,63,65,67,69,62,64,66,68,62,64,66,68,57,53,58,62,63,54,59,64,65,55,60,66,67,56,61,68,69],"f":[0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[],3],0,0,0,[4],[4],[4],[4],[[],[[6,[5]]]],[[],[[6,[5]]]],0,[4],[4],[7,[[6,[8,9]]]],0,[[]],[[]],[10,11],[[],4],[[],4],[[]],[[]],[[],12],[[],12],0,0,[[],13],0,0,[[],[[6,[11]]]],0,[[]],[[]],0,0,0,0,[11,13],[14,6],0,[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[19,19],[20,20],[[]],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[4],[4],[4],[4],[4],[4],[[21,21],22],[[],22],[[],22],[7,[[6,[8,9]]]],[7,[[6,[8,9]]]],0,0,[[21,23],24],[[21,23],[[6,[25]]]],[[26,23],[[6,[25]]]],[[26,23],24],[[27,23],24],[[27,23],24],[[28,23],24],[[28,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[6,[21]]]],[29,[[6,[26]]]],[[19,4],[[30,[21]]]],[[20,4],[[30,[26]]]],0,0,0,[21,[[30,[29]]]],[21,[[30,[29]]]],0,[1,[[13,[[32,[31]]]]]],0,[21,[[30,[29]]]],0,[21],0,[[21,29],[[30,[29]]]],[[]],[21],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[21,22],[[],19],[[],20],0,[19,4],[20,4],0,0,[[33,22],[[13,[28]]]],[19,30],[20,30],[19,30],[20,30],0,0,0,0,0,0,0,0,0,0,0,0,[[19,4],30],[[20,4],30],[[],34],[[],34],[[35,29],[[13,[[30,[36]],37]]]],[[],[[13,[[32,[36]],37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[28],0,0,[[21,38,30,22],[[13,[[17,[39]]]]]],0,[[38,33,40,41,42,22],[[13,[[17,[39]]]]]],0,[27,6],[28,6],0,[19],[20],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],6],[29,[[6,[21]]]],[[],6],[[],6],[[],6],[29,[[6,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[4],[4],[[],[[6,[5]]]],[4],[[]],[[],4],[[]],[[],12],[[]],[[]],[39,13],[[43,44],[[45,[2]]]],[[],6],[[],6],[[],15],[[[17,[16]]],[[17,[18,16]]]],[[],18],[[],18],[[]],0,0,0,[[]],[[]],[[]],[[]],[[46,29,4,47],48],[[49,29,4,47],48],0,[4],[4],[4],[4],[[],[[6,[5]]]],[[],[[6,[5]]]],[4],[4],0,[[]],[[]],[[[32,[2]]],[[32,[2]]]],[[],4],[[],4],[[]],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[38,1,[30,[2]]],13],[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[],18],[[],18],[[],18],[[],18],[[49,50,4,29]],[[49,51],[[48,[52]]]],[49,22],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[53,53],[54,54],[55,55],[56,56],[[]],[[]],[[]],[[]],0,[4],[57,53],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[53]]]],[[],[[6,[58]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[54]]]],[[],[[6,[59]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[55]]]],[[],[[6,[5]]]],[[],[[6,[60]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[56]]]],[[],[[6,[5]]]],[[],[[6,[61]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[62,23],24],[[63,23],24],[[64,23],24],[[65,23],24],[[66,23],24],[[67,23],24],[[68,23],24],[[69,23],24],[[53,23],24],[23,[[6,[25]]]],[23,[[6,[25]]]],[[54,23],24],[23,[[6,[25]]]],[23,[[6,[25]]]],[[55,23],24],[23,[[6,[25]]]],[23,[[6,[25]]]],[[56,23],24],[23,[[6,[25]]]],[23,[[6,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[[17,[16]]],[[17,[18,16]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[62,6],[64,6],[66,6],[68,6],[63,6],[65,6],[67,6],[69,6],[63,6],[65,6],[67,6],[69,6],[[62,29],6],[[64,29],6],[[66,29],6],[[68,29],6],[[62,70],6],[[64,70],6],[[66,70],6],[[68,70],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Path"],[3,"String"],[3,"App"],[15,"usize"],[3,"With"],[4,"Result"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"ArgMatches"],[3,"Args"],[3,"Request"],[6,"Result"],[3,"JsonError"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"CommandIter"],[3,"ListOperationIter"],[4,"Command"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"ListOperation"],[3,"ExtendedWalletEntry"],[3,"ExtendedWallet"],[15,"str"],[4,"Option"],[15,"u8"],[3,"Vec"],[3,"Wallet"],[3,"IterBridge"],[3,"HashMap"],[8,"FromStr"],[3,"Error"],[3,"Client"],[8,"Output"],[4,"OperationType"],[3,"Amount"],[4,"Address"],[4,"Style"],[8,"ToString"],[3,"StyledObject"],[3,"MassaCompleter"],[3,"Context"],[6,"Result"],[3,"MyHelper"],[3,"LineBuffer"],[3,"ValidationContext"],[4,"ValidationResult"],[3,"Settings"],[3,"DefaultNode"],[3,"ClientSettings"],[3,"HttpSettings"],[3,"SETTINGS"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[15,"u64"]]},\
"massa_consensus_exports":{"doc":"Definition and exports of the graph types and errors.","t":"DDIIMAMMAMAMMMMMAKMAMMMAAMAMMMMMKKKKKKKKMKMMMMMMMMMMKKMAMKMMDMMLLLLLLLMLLLLMMLLLMMLLLLLLLLLNNNNEENNEDRNNNNENNNNERRRNNNNEEEEDDDDDDDDNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMDDDREDDNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMMLLLLMLLLLMMLLLLLLMMMLLLLLLLLIIKKKKKKKKKKKKKNENIIINNNNNENENNNNNNNIIINNNNNNNRRRKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLDDDREDDNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMLLMMMLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDREDDNNNNNNNNNNNNNNNNNNNNNNNNNNNMMLLLLLLLLMMMMMLLMLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLMMMLLLLLLLLLLLLMMMMMMMMMMMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ConsensusChannels","ConsensusConfig","ConsensusController","ConsensusManager","block_db_prune_interval","block_graph_export","block_header_sender","block_sender","block_status","bootstrap_part_size","bootstrapable_graph","broadcast_blocks_channel_capacity","broadcast_blocks_headers_channel_capacity","broadcast_enabled","broadcast_filled_blocks_channel_capacity","channel_size","channels","clone_box","controller_event_tx","controller_trait","delta_f0","end_timestamp","endorsement_count","error","events","execution_controller","export_active_block","filled_block_sender","force_keep_final_periods","future_block_processing_max_periods","genesis_key","genesis_timestamp","get_best_parents","get_block_graph_status","get_block_statuses","get_blockclique_block_at_slot","get_bootstrap_part","get_cliques","get_latest_blockclique_block_at_slot","get_stats","last_start_period","mark_invalid_block","max_dependency_blocks","max_discarded_blocks","max_future_processing_blocks","max_gas_per_block","max_item_return_count","max_send_wait","operation_validity_periods","periods_per_cycle","pool_command_sender","protocol_command_sender","register_block","register_block_header","selector_controller","settings","stats_timespan","stop","t0","thread_count","BlockGraphExport","active_blocks","best_parents","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","discarded_blocks","drop","fmt","from","from_ref","genesis_blocks","gi_head","init","into","into_request","latest_final_blocks_periods","max_cliques","pointer_metadata","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","Active","Active","Active","Block","BlockStatus","DiscardReason","Discarded","Discarded","ExportBlockStatus","ExportCompiledBlock","FIELDS","Final","Final","Final","Header","HeaderOrBlock","Incoming","Incoming","Invalid","Stale","Status","VARIANTS","VARIANTS","VARIANTS","WaitingForDependencies","WaitingForDependencies","WaitingForSlot","WaitingForSlot","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field2","__field2","__field2","__field3","__field4","__field5","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_slot","header","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_final","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_enum","visit_enum","visit_map","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","a_block","creator","header_or_block","parents","reason","sequence_number","sequence_number","slot","storage","unsatisfied_dependencies","id","slot","storage","BootstrapableGraph","BootstrapableGraphDeserializer","BootstrapableGraphSerializer","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__ignore","block_count_deserializer","block_count_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","expecting","expecting","export_active_block_deserializer","export_active_block_serializer","final_blocks","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","marker","new","new","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","ConsensusChannels","block_header_sender","block_sender","borrow","borrow_mut","clone","clone_into","controller_event_tx","deref","deref_mut","deserialize","drop","execution_controller","filled_block_sender","from","from_ref","init","into","into_request","pointer_metadata","pool_command_sender","protocol_command_sender","selector_controller","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","ConsensusController","ConsensusManager","clone_box","get_best_parents","get_block_graph_status","get_block_statuses","get_blockclique_block_at_slot","get_bootstrap_part","get_cliques","get_latest_blockclique_block_at_slot","get_stats","mark_invalid_block","register_block","register_block_header","stop","AmountOverflowError","ConsensusError","ContainerInconsistency","DisplayToDisplayDoc","DisplayToDisplayDoc","DisplayToDisplayDoc","ExecutionError","FitnessOverflow","GenesisCreationError","IOError","IOError","InternalError","InvalidLedgerChange","LedgerError","LedgerError","LedgerInconsistency","MassaTimeError","MissingBlock","MissingOperation","ModelsError","ModelsError","PathToDisplayDoc","PathToDisplayDoc","PathToDisplayDoc","PosCycleUnavailable","ProtocolError","SerdeError","SerdeError","TransactionError","TransactionError","TryFromSliceError","_DERIVE_Display_FOR_ConsensusError","_DERIVE_Display_FOR_InternalError","_DERIVE_Display_FOR_LedgerError","__displaydoc_display","__displaydoc_display","__displaydoc_display","__displaydoc_display","__displaydoc_display","__displaydoc_display","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","pointer_metadata","pointer_metadata","pointer_metadata","provide","provide","provide","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","ConsensusEvent","NeedSync","Stop","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","from_ref","init","into","into_request","pointer_metadata","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","ExportActiveBlock","ExportActiveBlockDeserializer","ExportActiveBlockSerializer","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from","from","from_active_block","from_ref","hash_deserializer","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_final","lifetime","marker","new","new","parents","period_deserializer","period_serializer","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","sec_share_block_deserializer","sec_share_serializer","serialize","serialize","thread_count","to_active_block","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","ConsensusConfig","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field10","__field11","__field12","__field13","__field14","__field15","__field16","__field17","__field18","__field19","__field2","__field20","__field21","__field22","__field23","__field24","__field25","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","block_db_prune_interval","bootstrap_part_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_blocks_channel_capacity","broadcast_blocks_headers_channel_capacity","broadcast_enabled","broadcast_filled_blocks_channel_capacity","channel_size","clone","clone_into","delta_f0","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","end_timestamp","endorsement_count","expecting","expecting","fmt","fmt","fmt","force_keep_final_periods","from","from","from","from","from_ref","future_block_processing_max_periods","genesis_key","genesis_timestamp","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","last_start_period","lifetime","marker","max_dependency_blocks","max_discarded_blocks","max_future_processing_blocks","max_gas_per_block","max_item_return_count","max_send_wait","operation_validity_periods","periods_per_cycle","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","stats_timespan","t0","thread_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip"],"q":["massa_consensus_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::block_graph_export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::block_statusmassa_consensus_exports::block_status::BlockStatus","","","","","","","","","","massa_consensus_exports::block_status::HeaderOrBlock","","","massa_consensus_exports::bootstrapable_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::controller_trait","","","","","","","","","","","","","","","massa_consensus_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::events","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::export_active_block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_exports::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Contains links to other modules of the node to be able to …","","Interface that communicates with the graph worker thread","Consensus manager used to stop the consensus thread","old blocks are pruned every <code>block_db_prune_interval</code>","","Channel used for Websocket broadcast (if enabled) of new …","Channel used for Websocket broadcast (if enabled) of new …","","size of a consensus bootstrap streaming part","","blocks channel capacity","blocks headers channel capacity","whether broadcast is enabled","filled blocks channel capacity","channel size","","Returns a boxed clone of self. Useful to allow cloning …","Channel used by the consensus to send events to the node …","","Threshold for fitness.","TESTNET: time when the blockclique is ended.","target number of endorsement per block","","","Interface to interact with Execution module","","Channel use by Websocket (if they are enable) to broadcast …","force keep at least this number of final periods in RAM …","If a block <code>is future_block_processing_max_periods</code> periods …","Keypair to sign genesis blocks.","Genesis timestamp","Get the best parents for the next block to be produced","Get an export of a part of the graph","Get statuses of a list of blocks","Get the block id of the block at a specific slot in the …","Get a part of the graph to send to a node for it to setup …","Get all the cliques of the graph","Get the latest block, that is in the blockclique, in the …","Get the stats of the consensus","last start period","Mark a block as invalid in the graph","Maximum number of blocks allowed in <code>DependencyWaitingBlocks</code>…","Maximum number of blocks allowed in discarded blocks.","Maximum number of blocks allowed in <code>FutureIncomingBlocks</code>.","Max gas per block for the execution configuration","max number of items returned while querying","max event send wait","Maximum operation validity period count","cycle duration in periods","Interface to interact with Pool module","Channel to send commands to the Protocol module","Register a block in the graph","Register a block header in the graph","Interface to interact with PoS module","","stats time span","Stop the consensus thread Note that we do not take self by …","Delta time between two period","Number of threads","Bootstrap compatible version of the block graph","Map of active blocks, were blocks are in their exported …","Best parents hashes in each thread.","","","","","","","","Finite cache of discarded blocks, in exported version …","","","Returns the argument unchanged.","","Genesis blocks.","Head of the incompatibility graph.","","Calls <code>U::from(self)</code>.","","Latest final period and block hash in each thread.","List of maximal cliques of compatible blocks.","","","","","","","","","","The block was checked and included in the blockgraph","valid and not yet final","without enough fitness to be part of immutable history","","Enum used in <code>BlockGraph</code>’s state machine","Something can be discarded","The block was discarded and is kept to avoid reprocessing …","not part of the graph","Block status in the graph that can be exported.","The block version that can be exported. Note that the …","","Block has enough fitness.","immutable","with enough fitness to be part of immutable history","","","The block/header has reached consensus but no …","received but not yet graph processed","Block is invalid, either structurally, or because of some …","Block is incompatible with a final block.","Status","","","","The block references an unknown Block id","waiting for a missing dependency","The block’s or header’s slot is too much in the future.","waiting for its slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For (i, set) in children, set contains the headers’ …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets slot for that header or block","Header of the corresponding block.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Active or finalddress of the creator of the block","Given header/block","Ids of parents blocks","why it was discarded","Used to limit and sort the number of blocks/headers …","Used to limit and sort the number of blocks/headers …","Just the slot of that block","","includes self if it’s only a header","","","","Bootstrap graph","Basic deserializer for <code>BootstrapableGraph</code>","Basic serializer for <code>BootstrapableGraph</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Example","","","","","","","","","","","","","","","","","","","list of final blocks","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a <code>BootstrapableGraphDeserializer</code>","Creates a <code>BootstrapableGraphSerializer</code>","","","","","","","","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains links to other modules of the node to be able to …","Channel used for Websocket broadcast (if enabled) of new …","Channel used for Websocket broadcast (if enabled) of new …","","","","","Channel used by the consensus to send events to the node …","","","","","Interface to interact with Execution module","Channel use by Websocket (if they are enable) to broadcast …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Interface to interact with Pool module","Channel to send commands to the Protocol module","Interface to interact with PoS module","","","","","","","","","Interface that communicates with the graph worker thread","Consensus manager used to stop the consensus thread","Returns a boxed clone of self. Useful to allow cloning …","Get the best parents for the next block to be produced","Get an export of a part of the graph","Get statuses of a list of blocks","Get the block id of the block at a specific slot in the …","Get a part of the graph to send to a node for it to setup …","Get all the cliques of the graph","Get the latest block, that is in the blockclique, in the …","Get the stats of the consensus","Mark a block as invalid in the graph","Register a block in the graph","Register a block header in the graph","Stop the consensus thread Note that we do not take self by …","amount overflow","Consensus error","there was an inconsistency between containers {0}","","","","execution error: {0}","fitness overflow","Could not create genesis block {0}","io error {0}","io error {0}","Internal error","invalid ledger change: {0}","Ledger error","Ledger error {0}","ledger inconsistency error {0}","Massa time error {0}","missing block {0}","missing operation {0}","models error: {0}","models error: {0}","","","","Proof of stake cycle unavailable {0}","Protocol error {0}","serde error","serde error","transaction error {0}","transaction error {0}","try from slice error {0}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Events that are emitted by consensus.","probable desynchronization detected, need …","Network is ended should be send after <code>end_timestamp</code>","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Exportable version of <code>ActiveBlock</code> Fields that can be …","Basic deserializer of <code>ExportActiveBlock</code>","Basic serializer of <code>ExportActiveBlock</code>","","","","","","","","","The block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Example:","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","conversion from active block to export active block","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","for example has its fitness reached the given threshold","","","Create a new <code>ExportActiveBlockDeserializer</code>","Create a new <code>ExportActiveBlockSerializer</code>","one <code>(block id, period)</code> per thread ( if not genesis )","","","","","","","","","","","","","","consuming conversion from <code>ExportActiveBlock</code> to <code>ActiveBlock</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","old blocks are pruned every <code>block_db_prune_interval</code>","size of a consensus bootstrap streaming part","","","","","","","","","blocks channel capacity","blocks headers channel capacity","whether broadcast is enabled","filled blocks channel capacity","channel size","","","Threshold for fitness.","","","","","","","","","","","","","","","","","","","TESTNET: time when the blockclique is ended.","target number of endorsement per block","","","","","","force keep at least this number of final periods in RAM …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","If a block <code>is future_block_processing_max_periods</code> periods …","Keypair to sign genesis blocks.","Genesis timestamp","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","last start period","","","Maximum number of blocks allowed in <code>DependencyWaitingBlocks</code>…","Maximum number of blocks allowed in discarded blocks.","Maximum number of blocks allowed in <code>FutureIncomingBlocks</code>.","Max gas per block for the execution configuration","max number of items returned while querying","max event send wait","Maximum operation validity period count","cycle duration in periods","","","","","","stats time span","Delta time between two period","Number of threads","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,83,0,60,60,0,83,0,83,83,83,83,83,0,1,60,0,83,83,83,0,0,60,0,60,83,83,83,83,1,1,1,1,1,1,1,1,83,1,83,83,83,83,83,83,83,83,60,60,1,1,60,0,83,87,83,83,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,29,30,32,27,0,0,29,30,0,0,0,28,30,32,27,0,29,30,28,28,0,0,0,0,29,30,29,30,0,0,0,0,0,0,0,0,0,0,0,0,33,34,35,36,33,34,35,36,33,34,35,34,34,34,35,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,31,27,28,29,30,31,32,27,28,29,30,31,32,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,28,33,33,37,38,29,30,30,34,34,39,40,31,31,35,35,41,42,32,32,36,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,28,32,28,28,32,32,37,38,39,40,41,42,43,44,27,28,37,38,29,30,39,40,31,41,42,32,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,29,30,31,32,27,31,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,31,38,40,42,44,38,40,42,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,28,30,31,32,27,28,29,30,31,32,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,37,39,41,43,38,40,44,42,42,37,39,41,43,37,39,41,43,27,28,33,37,38,29,30,34,39,40,31,35,41,42,32,36,43,44,88,89,90,89,89,90,89,89,88,90,91,91,91,0,0,0,0,0,0,0,54,54,50,49,50,48,54,55,56,49,50,48,54,55,56,49,48,48,49,50,48,54,55,56,49,50,48,54,55,56,49,50,50,48,48,54,54,55,56,49,50,48,54,55,56,49,55,56,50,49,48,48,55,56,50,48,54,55,56,49,48,50,48,54,55,56,49,50,48,54,55,56,49,50,48,54,55,56,49,56,56,50,49,50,48,54,55,56,49,48,49,48,50,48,54,55,56,49,50,48,54,55,56,49,50,48,54,55,56,49,50,48,54,55,56,49,50,48,54,55,56,49,50,48,54,55,56,49,55,56,56,55,55,50,48,54,55,56,49,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,0,1,1,1,1,1,1,1,1,1,1,1,1,87,63,0,7,0,0,0,7,7,7,7,63,0,7,0,7,63,7,7,7,7,63,0,0,0,7,7,7,63,7,62,63,0,0,0,92,93,94,95,96,97,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,7,7,62,62,63,63,7,7,7,7,7,7,7,7,62,63,63,63,63,63,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,7,63,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,7,62,63,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,0,0,0,0,78,78,78,78,75,77,75,78,79,80,76,77,75,78,79,80,76,75,75,76,77,75,78,79,80,76,77,75,78,79,80,76,77,77,75,75,78,78,79,80,76,77,75,78,79,80,76,79,80,75,79,80,77,75,78,79,80,76,75,75,77,77,75,78,79,80,76,77,75,78,79,80,76,77,75,78,79,80,76,75,80,80,77,76,75,77,76,77,75,78,79,80,76,77,76,75,76,77,75,75,77,75,78,79,80,76,77,75,78,79,80,76,77,75,78,79,80,76,77,75,78,79,80,76,77,75,78,79,80,76,77,75,78,79,80,76,79,80,80,79,79,77,75,78,79,80,76,0,0,0,0,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,83,83,83,84,85,86,83,84,85,86,83,83,83,83,83,83,83,83,83,84,85,86,83,84,85,86,83,83,84,84,85,86,83,84,85,86,83,83,85,86,83,85,86,83,83,84,85,86,83,83,83,83,83,84,85,86,83,84,85,86,83,84,85,86,83,86,86,83,83,83,83,83,83,83,83,83,84,85,86,83,83,83,83,83,83,84,85,86,83,84,85,86,83,84,85,86,83,84,85,86,83,84,85,86,83,84,85,86,85,86,86,85,85,83,84,85,86],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],[[[5,[4]],[5,[4]]],[[8,[6,7]]]],[[],[[3,[9]]]],[4,[[5,[10]]]],[[[12,[[11,[10]]]],[12,[4]]],[[8,[7]]]],[[],[[3,[13]]]],[4,10],[[],[[8,[14,7]]]],0,[[10,[16,[15,10]]]],0,0,0,0,0,0,0,0,0,0,[[10,4,17,18]],[[10,[16,[15,10]]]],0,0,0,[[]],0,0,0,0,0,[[]],[[]],[6,6],[[]],[19],[19],[[],[[8,[20]]]],0,[19],[[6,21],22],[[]],[[]],0,0,[[],19],[[]],[[],23],0,0,[[]],[[]],[[],8],[[],8],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[]],[[]],[[]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[28]]]],[[],[[8,[20]]]],[[],[[8,[33]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[30]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[34]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[31]]]],[[],[[8,[20]]]],[[],[[8,[35]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[32]]]],[[],[[8,[36]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[28,28],18],[[32,32],18],[[],18],[[],18],[[],18],[[],18],[[37,21],22],[[38,21],22],[[39,21],22],[[40,21],22],[[41,21],22],[[42,21],22],[[43,21],22],[[44,21],22],[[27,21],22],[[28,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],[[29,21],22],[[30,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],[[31,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],[[32,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,4],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,8],[30,8],[31,8],[32,8],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[37,8],[39,8],[41,8],[43,8],[38,8],[40,8],[44,8],[42,8],[42,8],[[37,46],8],[[39,46],8],[[41,46],8],[[43,46],8],[[37,47],8],[[39,47],8],[[41,47],8],[[43,47],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[[]],[[],49],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[50,[[53,[48,[0,[51,52]]]]]],[[],[[8,[20]]]],[[],[[8,[48]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[54]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[19],[19],[19],[19],[19],[19],[[55,21],22],[[56,21],22],0,0,0,[[48,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[57,58],50],[[],49],[[]],[[]],[[]],[[]],[[]],[[]],[48,8],[[49,48,3],[[8,[59]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[55,8],[56,8],[56,8],[[55,46],8],[[55,47],8],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[60,60],[[]],0,[19],[19],[[],[[8,[20]]]],[19],0,0,[[]],[[]],[[],19],[[]],[[],23],[[]],0,0,0,[[]],[[],8],[[],8],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[]],0,0,[[],[[2,[1]]]],[[],3],[[[5,[4]],[5,[4]]],[[8,[6,7]]]],[[],[[3,[9]]]],[4,[[5,[10]]]],[[[12,[[11,[10]]]],[12,[4]]],[[8,[7]]]],[[],[[3,[13]]]],[4,10],[[],[[8,[14,7]]]],[[10,[16,[15,10]]]],[[10,4,17,18]],[[10,[16,[15,10]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],61],[[]],[[],61],[[]],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[19],[19],[19],[19],[19],[19],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[19],[19],[19],[[7,21],22],[[7,21],22],[[62,21],22],[[62,21],22],[[63,21],22],[[63,21],22],[64,7],[65,7],[66,7],[67,7],[[]],[63,7],[68,7],[69,7],[[]],[67,63],[65,63],[68,63],[[]],[70,63],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[]],[[]],[[]],[71],[71],[71],[7,[[5,[72]]]],[63,[[5,[72]]]],[[],73],[[],73],[[],73],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,0,[[]],[[]],[74,74],[[]],[19],[19],[[],[[8,[20]]]],[19],[[74,21],22],[[]],[[]],[[],19],[[]],[[],23],[[]],[[]],[[],8],[[],8],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[[]],[[],76],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[77,[[53,[75,[0,[51,52]]]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[75]]]],[[],[[8,[78]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[19],[19],[19],[19],[19],[19],[[79,21],22],[[80,21],22],[[75,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[81,17],75],[[]],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,[57,77],[[],76],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[75,8],[[76,75,3],[[8,[59]]]],0,[[75,17,82],[[8,[7]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[79,8],[80,8],[80,8],[[79,46],8],[[79,47],8],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[83,83],[[]],0,[19],[19],[19],[19],[19],[19],[19],[19],[[],[[8,[83]]]],[[],[[8,[20]]]],[[],[[8,[84]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[[],[[8,[20]]]],[19],[19],[19],[19],0,0,[[85,21],22],[[86,21],22],[[83,21],22],[21,[[8,[45]]]],[21,[[8,[45]]]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[83,8],0,0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],24],[[],24],[[],24],[[],24],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[[2,[25]]],[[2,[26,25]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[85,8],[86,8],[86,8],[[85,46],8],[[85,47],8],[[]],[[]],[[]],[[]]],"p":[[8,"ConsensusController"],[3,"Box"],[3,"Vec"],[3,"Slot"],[4,"Option"],[3,"BlockGraphExport"],[4,"ConsensusError"],[4,"Result"],[4,"BlockGraphStatus"],[3,"BlockId"],[6,"PreHashSet"],[4,"StreamingStep"],[3,"Clique"],[3,"ConsensusStats"],[3,"BlockHeader"],[3,"SecureShare"],[3,"Storage"],[15,"bool"],[15,"usize"],[3,"With"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[3,"Global"],[8,"Any"],[4,"HeaderOrBlock"],[4,"DiscardReason"],[4,"BlockStatus"],[4,"ExportBlockStatus"],[3,"ExportCompiledBlock"],[4,"Status"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[15,"str"],[15,"u64"],[3,"BootstrapableGraph"],[3,"BootstrapableGraphSerializer"],[3,"BootstrapableGraphDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"BlockDeserializerArgs"],[15,"u32"],[4,"SerializeError"],[3,"ConsensusChannels"],[3,"Display"],[4,"InternalError"],[4,"LedgerError"],[4,"TimeError"],[4,"ModelsError"],[4,"ProtocolError"],[3,"Error"],[3,"Error"],[4,"ExecutionError"],[3,"TryFromSliceError"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"ConsensusEvent"],[3,"ExportActiveBlock"],[3,"ExportActiveBlockSerializer"],[3,"ExportActiveBlockDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"ActiveBlock"],[15,"u8"],[3,"ConsensusConfig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"ConsensusManager"],[13,"Active"],[13,"Discarded"],[13,"WaitingForDependencies"],[13,"Block"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_consensus_worker":{"doc":"General module description","t":"AAAFAAENNNLLLLLLLLLLLLLLLLLLDMLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLDLLMLLLLLLLLLLLLLLLLLHDHMLLMMLMLLMLLLLLLLLLMLLLLMLLMLLMLLLLLLLLLLMAMLLLLMMLLLLLLLMLMMMLLMALALMALLLLLLLLLLLMMLMAMMLMLLLALMLLLLLLLALMMMHHHHHHHHDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLMLLLLMLMMLLLMLMMLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHHHHNNEEHHHHHHHHNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLMMLLLLLLALLLALLMMLMLMFLLLLLFNNNELLLLLLLLLLLLLLLLLL","n":["commands","controller","manager","start_consensus_worker","state","worker","ConsensusCommand","MarkInvalidBlock","RegisterBlock","RegisterBlockHeader","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","into_request","pointer_metadata","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","ConsensusControllerImpl","bootstrap_part_size","borrow","borrow_mut","broadcast_enabled","channels","clone","clone_box","clone_into","command_sender","deref","deref_mut","deserialize","drop","from","from_ref","get_best_parents","get_block_graph_status","get_block_statuses","get_blockclique_block_at_slot","get_bootstrap_part","get_cliques","get_latest_blockclique_block_at_slot","get_stats","init","into","into_request","mark_invalid_block","new","pointer_metadata","register_block","register_block_header","shared_state","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","ConsensusManagerImpl","borrow","borrow_mut","consensus_thread","deref","deref_mut","deserialize","drop","from","init","into","into_request","pointer_metadata","stop","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","ConsensusState","META","active_index","add_active_blocks_after","add_block_to_graph","attack_attempts","best_parents","block_db_changed","block_statuses","borrow","borrow_mut","channels","check_block_and_store","check_block_header_and_store","check_desync","check_endorsements","check_header","clone","clone_into","compute_fitness_find_blockclique","compute_max_cliques","config","deref","deref_mut","deserialize","detect_multistake","discarded_index","drop","extract_block_graph_part","final_block_stats","from","from_ref","genesis_hashes","get_active_block_and_descendants","get_all_final_blocks","get_block_status","get_block_wishlist","get_blockclique","get_blockclique_block_at_slot","get_clique_count","get_full_active_block","get_latest_blockclique_block_at_slot","get_stats","gi_head","graph","incoming_index","init","insert_parents_descendants","into","into_request","latest_final_blocks_periods","launch_time","list_earliest_blocks_of","list_final_blocks","list_latest_final_blocks_at","list_required_active_blocks","list_stale_blocks","mark_final_blocks","mark_invalid_block","max_cliques","maybe_note_attack_attempt","new_final_blocks","new_stale_blocks","nonfinal_active_blocks_per_slot","notify_execution","pointer_metadata","prev_blockclique","process","process","process_commands","promote_dep_tree","protocol_blocks","prune","prune","prune_active","prune_discarded","prune_nonfinal_blocks_per_slot","prune_slot_waiting","prune_stats","prune_waiting_for_dependencies","rec_process","register_block","register_block_header","remove_block","save_final_periods","sequence_counter","slot_tick","stale_block_stats","stats","stats_desync_detection_timespan","stats_history_timespan","stats_tick","storage","store_discard_block_header","store_wait_for_dependencies","store_wait_for_slot","tick","to_owned","to_propagate","try_from","try_get_full_active_block","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","verifications","vzip","waiting_for_dependencies_index","waiting_for_slot_index","wishlist","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","BlockInfosborrow","borrow_mut","creator","deref","deref_mut","deserialize","drop","fitness","from","incompatibilities","inherited_incompatibilities_count","init","into","into_request","parents_hash_period","pointer_metadata","slot","storage","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","CALLSITE","CALLSITE","CALLSITE","META","META","META","CALLSITE","CALLSITE","META","META","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Discard","Discard","EndorsementsCheckOutcome","HeaderCheckOutcome","META","META","META","META","META","META","META","META","Proceed","Proceed","WaitForDependencies","WaitForSlot","WaitForSlot","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","pointer_metadata","pointer_metadata","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","fitness","incompatibilities","inherited_incompatibilities_count","parents_hash_period","ConsensusWorker","borrow","borrow_mut","claim_parent_refs","command_receiver","config","deref","deref_mut","deserialize","drop","from","get_next_slot","init","init","into","into_request","main_loop","manage_command","new","next_instant","next_slot","pointer_metadata","previous_slot","run","shared_state","start_consensus_worker","try_from","try_into","type_id","vzip","wait_slot_or_command","create_genesis_block","Disconnected","Ended","Interrupted","WaitingStatus","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","into_request","pointer_metadata","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip"],"q":["massa_consensus_worker","","","","","","massa_consensus_worker::commands","","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::manager","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::state::graph","","","","","","","","massa_consensus_worker::state::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::state::process_commands","","","","","","","","massa_consensus_worker::state::prune","","","","","","massa_consensus_worker::state::tick","","","","massa_consensus_worker::state::verifications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::state::verifications::HeaderCheckOutcome","","","","massa_consensus_worker::worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_consensus_worker::worker::init","massa_consensus_worker::worker::main_loop","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Create a new consensus worker thread.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","The retrieval of data is made using a shared state and …","","","","","","","","","","","","","","Returns the argument unchanged.","","Get the current best parents for a block creation","Get a block graph export in a given period.","Get statuses of blocks present in the graph","Get the block, that is in the blockclique, at a given slot.","Get a part of the graph to send to a node so that he can …","Get all the cliques possible in the block graph.","Get the latest block, that is in the blockclique, in the …","Get the stats of the consensus","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","ids of active blocks","adds to the given container every active block coming …","Add a block to the graph and update the cliques, the graph …","List of block ids we think are attack attempts","One <code>(block id, period)</code> per thread TODO not sure I …","call me if the block database changed Processing of final …","Every block we know about","","","Channels to communicate with other modules","Check if the header of the block is valid and if it could …","Check if the header is valid and if it could be processed …","Helper function for stats_tick. Checks if there are any …","check endorsements:","Process an incoming header.","","","","Computes max cliques of compatible blocks","Configuration","","","","","ids of discarded blocks","","","Final block stats <code>(time, creator, is_from_protocol)</code>","Returns the argument unchanged.","","Block ids of genesis blocks","Gets a block and all its descendants","Gets all stored final blocks, not only the still-useful …","","get the current block wish list, including the operations …","get the clique of higher fitness","get the blockclique (or final) block ID at a given slot, …","","Get a full active block","get the latest blockclique (or final) block ID at a given …","Calculate and return stats about consensus","Incompatibility graph: maps a block id to the block ids it …","","Ids of incoming blocks/headers","","","Calls <code>U::from(self)</code>.","","One (block id, period) per thread","time at which the node was launched (used for …","list the earliest blocks of the given block id list","","list the latest final blocks at the given slot","list_required_active_blocks algo:","","","Mark a block that is in the graph as invalid.","All the cliques","Note an attack attempt if the discard reason indicates one.","Newly final blocks","Newly stale block mapped to creator and slot","Blocks indexed by slot (used for multi-stake limiting). …","Notify execution about blockclique changes and finalized …","","previous blockclique notified to Execution","","Acknowledge a single item, return a set of items to re-ack","","","Blocks that come from protocol used for stats and ids are …","","Clear all the caches and blocks waiting to be processed to …","prune active blocks and return final blocks, return …","","Clear the cache of blocks indexed by slot. Slot are not …","","Remove old stats from consensus storage","","Acknowledge a set of items recursively and process them","Register a new full block in the graph. Ignore genesis …","Register a block header in the graph. Ignore genesis …","","Save of latest periods","Used to limit the number of waiting and discarded blocks","This function should be called each tick and will check if …","Stale block timestamp","","the time span considered for desynchronization detection","the time span considered for stats","Must be called each tick to update stats. Will detect if a …","Storage","Store in our indexes that we discarded this block or block …","Store in our indexes that a block or a header is waiting …","Store in our indexes that we are waiting for the slot of …","","","Blocks that need to be propagated","","Get a full active block","","","","","","","","ids of waiting for dependencies blocks/headers","ids of waiting for slot blocks/headers","blocks we want","","","","","","","","","All informations necessary to add a block to the graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block creator","","","","","The fitness of the block","Returns the argument unchanged.","The list of the blocks that are incompatible with this …","Number of incompatibilities this block inherit from his …","","Calls <code>U::from(self)</code>.","","The list of the parents of the block (block_id, period) …","","The slot of the block","THe storage can the block himself and his operations and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","there is something wrong with that header","There is something wrong with that endorsement","Possible outcomes of endorsements check","Possible output of a header check","","","","","","","","","it’s ok and here are some useful values","Everything is ok","it must wait for these block ids to be fully processed","it must wait for its slot to be fully processed","It must wait for its slot to be fully processed","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","fitness","blocks that header is incompatible with","number of incompatibilities that are inherited from the …","one (parent block id, parent’s period) per thread","The consensus worker structure that contains all …","","","Internal function used at initialization of the …","Channel to receive command from the controller","Configuration of the consensus","","","","","Returns the argument unchanged.","Gets the next slot and the instant when it will happen. …","","","Calls <code>U::from(self)</code>.","","","Execute a command received from the controller also run an …","Creates a new consensus worker.","Next slot instant","Next slot","","Previous slot.","Runs in loop forever. This loop must stop every slot to …","State shared with the controller","Create a new consensus worker thread.","","","","","Wait and interrupt if we receive a command, a stop signal …","Creates genesis block in given thread.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,0,30,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,0,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,40,0,0,0,0,0,0,0,0,0,0,41,40,41,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,55,55,55,55,0,50,50,50,50,50,50,50,50,50,50,50,0,50,50,50,0,50,50,50,50,50,50,50,50,0,50,50,50,50,50,0,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53],"f":[0,0,0,[[1,2,[4,[3]],5]],0,0,0,0,0,0,[[]],[[]],[6],[6],[[],[[8,[7]]]],[6],[[]],[[],6],[[]],[[],9],[[]],[[],8],[[],8],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],[[]],0,0,[[]],[[]],0,0,[14,14],[14,[[12,[15]]]],[[]],0,[6],[6],[[],[[8,[7]]]],[6],[[]],[[]],[14,16],[[14,[4,[17]],[4,[17]]],[[8,[18,19]]]],[14,[[16,[20]]]],[[14,17],[[4,[21]]]],[[14,[23,[[22,[21]]]],[23,[17]]],[[8,[19]]]],[14,[[16,[24]]]],[[14,17],21],[14,[[8,[25,19]]]],[[],6],[[]],[[],9],[[14,21,[27,[26,21]]]],[[[29,[28]],2,[32,[[31,[30]]]],33,34],14],[[]],[[14,21,17,5,34]],[[14,21,[27,[26,21]]]],0,[[]],[[],8],[[],8],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],[[]],0,[[]],[[]],0,[6],[6],[[],[[8,[7]]]],[6],[[]],[[],6],[[]],[[],9],[[]],[35],[[],8],[[],8],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],[[]],0,0,0,0,[[30,22,[4,[17]]]],[[30,21,16,36,17,[22,[21]],6,33,5],[[8,[19]]]],0,0,[30,[[8,[19]]]],0,[[]],[[]],0,[[30,21,17,5,37,[4,[17]]],[[8,[[4,[38]],19]]]],[[30,21,39,[4,[17]]],[[8,[19]]]],[30,[[8,[19]]]],[[30,39],[[8,[40,19]]]],[[30,21,39,[4,[17]]],[[8,[41,19]]]],[30,30],[[]],[[30,21],[[8,[6,19]]]],[30,[[16,[[22,[21]]]]]],0,[6],[6],[[],[[8,[7]]]],[[30,39],34],0,[6],[[30,[4,[17]],[4,[17]]],[[8,[18,19]]]],0,[[]],[[]],0,[[30,21],[[8,[[22,[21]],19]]]],[30,[[42,[21]]]],[[30,21],20],[30,[[8,[[43,[21,[4,[39]]]],19]]]],[30,[[22,[21]]]],[[30,17],[[4,[21]]]],[30,6],[[30,21],4],[[30,17],21],[30,[[8,[25,19]]]],0,0,0,[[],6],[[30,21,17,[16,[21]]]],[[]],[[],9],0,0,[[30,22,[4,[17]]],[[8,[16,19]]]],[30,[[8,[[22,[21]],19]]]],[[30,17],[[8,[16,19]]]],[[30,[4,[17]]],[[8,[[22,[21]],19]]]],[[30,33],[[22,[21]]]],[[30,21,[22,[21]]],[[8,[19]]]],[[30,21,39]],0,[[30,44,21]],0,0,0,[[30,[42,[17,21]]]],[[]],0,0,[[30,21,[4,[17]]],[[8,[45,19]]]],0,[[30,21],[[8,[19]]]],0,0,[30,[[8,[19]]]],[30,[[8,[[43,[21,46]],19]]]],[30,[[8,[19]]]],[30],[30],[30,[[8,[19]]]],[30,[[8,[19]]]],[[30,45,[4,[17]]],[[8,[19]]]],[[30,21,17,[4,[17]],5,34],[[8,[19]]]],[[30,21,39,[4,[17]]],[[8,[19]]]],[[30,21,21],[[8,[19]]]],0,0,[[30,17],[[8,[19]]]],0,0,0,0,[30,[[8,[19]]]],0,[[30,44,21,39]],[[30,21,47,[22,[21]]],[[8,[19]]]],[[30,21,47]],0,[[]],0,[[],8],[[30,21],[[8,[19]]]],[[],8],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[6],[6],[[],[[8,[7]]]],[6],0,[[]],0,0,[[],6],[[]],[[],9],0,[[]],0,0,[[],8],[[],8],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[6],[6],[6],[6],[[],[[8,[7]]]],[[],[[8,[7]]]],[6],[6],[[41,48],49],[[40,48],49],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],9],[[],9],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],0,0,0,0,0,[[]],[[]],[50,[[8,[19]]]],0,0,[6],[6],[[],[[8,[7]]]],[6],[[]],[[50,[4,[17]]]],0,[[],6],[[]],[[],9],0,[[50,28],[[8,[19]]]],[[1,[51,[28]],[32,[[31,[30]]]],[4,[3]],5],[[8,[50,19]]]],0,0,[[]],0,[50],0,[[1,2,[4,[3]],5]],[[],8],[[],8],[[],10],[[]],[[50,52],53],[[1,54],[[8,[37,19]]]],0,0,0,0,[[]],[[]],[6],[6],[[],[[8,[7]]]],[6],[[]],[[],6],[[]],[[],9],[[]],[[],8],[[],8],[[],10],[[[12,[11]]],[[12,[13,11]]]],[[],13],[[],13],[[]]],"p":[[3,"ConsensusConfig"],[3,"ConsensusChannels"],[3,"BootstrapableGraph"],[4,"Option"],[3,"Storage"],[15,"usize"],[3,"With"],[4,"Result"],[3,"Request"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"ConsensusControllerImpl"],[8,"ConsensusController"],[3,"Vec"],[3,"Slot"],[3,"BlockGraphExport"],[4,"ConsensusError"],[4,"BlockGraphStatus"],[3,"BlockId"],[6,"PreHashSet"],[4,"StreamingStep"],[3,"Clique"],[3,"ConsensusStats"],[3,"BlockHeader"],[3,"SecureShare"],[4,"ConsensusCommand"],[3,"SyncSender"],[3,"ConsensusState"],[6,"RwLock"],[3,"Arc"],[15,"u64"],[15,"bool"],[3,"ConsensusManagerImpl"],[3,"PublicKey"],[6,"SecureShareBlock"],[3,"BlockInfos"],[6,"SecuredHeader"],[4,"EndorsementsCheckOutcome"],[4,"HeaderCheckOutcome"],[3,"HashMap"],[6,"PreHashMap"],[4,"DiscardReason"],[3,"BTreeSet"],[3,"ActiveBlock"],[4,"HeaderOrBlock"],[3,"Formatter"],[6,"Result"],[3,"ConsensusWorker"],[3,"Receiver"],[3,"Instant"],[4,"WaitingStatus"],[15,"u8"],[13,"Proceed"]]},\
"massa_db":{"doc":"","t":"RRRRRRRRRDRRRRRRRRRRRRRRRRRRRIRRRMMAAMAMMMFFKMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRIKDMMLLMMMLLMLFLLFLFM","n":["ASYNC_POOL_CF","ASYNC_POOL_HASH_ERROR","ASYNC_POOL_HASH_INITIAL_BYTES","ASYNC_POOL_HASH_KEY","CF_ERROR","CRUD_ERROR","CYCLE_HISTORY_CF","CYCLE_HISTORY_HASH_ERROR","CYCLE_HISTORY_HASH_KEY","DBBatch","DEFERRED_CREDITS_CF","DEFERRED_CREDITS_HASH_ERROR","DEFERRED_CREDITS_HASH_KEY","EXECUTED_OPS_CF","EXECUTED_OPS_HASH_ERROR","EXECUTED_OPS_HASH_INITIAL_BYTES","EXECUTED_OPS_HASH_KEY","KEY_DESER_ERROR","KEY_LEN_SER_ERROR","KEY_SER_ERROR","LEDGER_CF","LEDGER_HASH_ERROR","LEDGER_HASH_INITIAL_BYTES","LEDGER_HASH_KEY","MESSAGE_DESER_ERROR","MESSAGE_ID_DESER_ERROR","MESSAGE_ID_SER_ERROR","MESSAGE_SER_ERROR","METADATA_CF","MassaCF","OPEN_ERROR","SLOT_KEY","WRONG_BATCH_TYPE_ERROR","aeh_list","async_pool_hash","constants","controller","cycle_history_hash","db_batch","deferred_credits_hash","executed_ops_hash","ledger_hash","new_rocks_db_instance","write_batch","write_batch","write_batch","ASYNC_POOL_CF","ASYNC_POOL_HASH_ERROR","ASYNC_POOL_HASH_INITIAL_BYTES","ASYNC_POOL_HASH_KEY","CF_ERROR","CRUD_ERROR","CYCLE_HISTORY_CF","CYCLE_HISTORY_HASH_ERROR","CYCLE_HISTORY_HASH_KEY","DEFERRED_CREDITS_CF","DEFERRED_CREDITS_HASH_ERROR","DEFERRED_CREDITS_HASH_KEY","EXECUTED_OPS_CF","EXECUTED_OPS_HASH_ERROR","EXECUTED_OPS_HASH_INITIAL_BYTES","EXECUTED_OPS_HASH_KEY","KEY_DESER_ERROR","KEY_LEN_SER_ERROR","KEY_SER_ERROR","LEDGER_CF","LEDGER_HASH_ERROR","LEDGER_HASH_INITIAL_BYTES","LEDGER_HASH_KEY","MESSAGE_DESER_ERROR","MESSAGE_ID_DESER_ERROR","MESSAGE_ID_SER_ERROR","MESSAGE_SER_ERROR","METADATA_CF","OPEN_ERROR","SLOT_KEY","WRONG_BATCH_TYPE_ERROR","MassaCF","write_batch","DBBatch","aeh_list","async_pool_hash","borrow","borrow_mut","cycle_history_hash","deferred_credits_hash","executed_ops_hash","from","into","ledger_hash","new","new_rocks_db_instance","try_from","try_into","try_put_hash_in_batch","type_id","write_batch","write_batch"],"q":["massa_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_db::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_db::controller","","massa_db::db_batch","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Batch containing write operations to perform on disk and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new <code>RocksDB</code> instance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Batch containing write operations to perform on disk and …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Returns a new <code>RocksDB</code> instance","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,0,3,3,3,0,0,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,0,3,0,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[2,3]],[3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3],0,0,0,[[]],[[]],0,0,0,[[]],[[]],0,[[[5,[4]],[5,[4]],[5,[4]],[5,[4]],[5,[4]]],3],[1,2],[[],6],[[],6],[[2,3,[5,[4]]]],[[],7],[[2,3]],0],"p":[[3,"PathBuf"],[6,"DB"],[3,"DBBatch"],[3,"Hash"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"MassaCF"]]},\
"massa_executed_ops":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net","t":"DGDDDDGDDDDDDDMMAMMMMMMMMMAAAMMMMMMMMMAMMMMMMMMMMMMMMMMMMMDDMMLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLGDDLLLLMMLLLLLLLLLLLLLLLLLMMLLRDDDLLLLLLLLLMLMMLMLLLLLLLLMLLLLLLLLLLLMLLLLMMMMLLLLLLLLLLMLLLDDDLLLLLLLLLMLMLLLLLLLLLMLLLLLLLLLLLLMMMMLLLLMMMMLLLLLLLLLLMLLLGDDLLLLLLLLLLLLLLMMMMLMMLLLLLLMMLL","n":["ExecutedDenunciations","ExecutedDenunciationsChanges","ExecutedDenunciationsChangesDeserializer","ExecutedDenunciationsChangesSerializer","ExecutedDenunciationsConfig","ExecutedOps","ExecutedOpsChanges","ExecutedOpsChangesDeserializer","ExecutedOpsChangesSerializer","ExecutedOpsConfig","ExecutedOpsDeserializer","ExecutedOpsSerializer","ProcessedDenunciationsDeserializer","ProcessedDenunciationsSerializer","bootstrap_part_size","bootstrap_part_size","config","config","config","db","de_idx_deserializer","de_idx_deserializer","de_idx_serializer","de_idx_serializer","denunciation_expire_periods","denunciations","denunciations_changes","executed_denunciations","executed_ops","hash","hash","op_exec_status","op_execution","op_execution_deserializer","operation_id_deserializer","operation_id_deserializer","operation_id_serializer","ops","ops_changes","ops_length_deserializer","ops_length_deserializer","slot_deserializer","slot_deserializer","slot_deserializer","slot_ops_length_deserializer","slot_ops_length_deserializer","slot_serializer","slot_serializer","slot_serializer","sorted_denunciations","sorted_ops","thread_count","u64_deserializer","u64_deserializer","u64_serializer","u64_serializer","u64_serializer","u64_serializer","ExecutedDenunciationsConfig","ExecutedOpsConfig","bootstrap_part_size","bootstrap_part_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","denunciation_expire_periods","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","thread_count","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutedDenunciationsChanges","ExecutedDenunciationsChangesDeserializer","ExecutedDenunciationsChangesSerializer","borrow","borrow","borrow_mut","borrow_mut","de_idx_deserializer","de_idx_serializer","default","deserialize","from","from","into","into","into_request","into_request","new","new","serialize","try_from","try_from","try_into","try_into","type_id","type_id","u64_deserializer","u64_serializer","vzip","vzip","EXECUTED_DENUNCIATIONS_HASH_INITIAL_BYTES","ExecutedDenunciations","ProcessedDenunciationsDeserializer","ProcessedDenunciationsSerializer","apply_changes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config","contains","de_idx_deserializer","de_idx_serializer","default","denunciations","deserialize","extend_and_compute_hash","fmt","from","from","from","from_ref","get_processed_de_part","hash","into","into","into","into_request","into_request","into_request","is_empty","len","new","new","new","ops_length_deserializer","prune","reset","serialize","set_processed_de_part","slot_deserializer","slot_ops_length_deserializer","slot_serializer","sorted_denunciations","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u64_serializer","vzip","vzip","vzip","ExecutedOps","ExecutedOpsDeserializer","ExecutedOpsSerializer","apply_changes_to_batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config","contains","db","default","deserialize","extend_and_compute_hash","fmt","from","from","from","from_ref","get_executed_ops_part","hash","into","into","into","into_request","into_request","into_request","is_empty","len","new","new","new","new_with_hash","op_exec_status","operation_id_deserializer","ops","ops_length_deserializer","prune","reset","serialize","set_executed_ops_part","slot_deserializer","slot_ops_length_deserializer","slot_serializer","sorted_ops","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u64_serializer","vzip","vzip","vzip","ExecutedOpsChanges","ExecutedOpsChangesDeserializer","ExecutedOpsChangesSerializer","borrow","borrow","borrow_mut","borrow_mut","default","deserialize","from","from","into","into","into_request","into_request","new","new","op_execution","op_execution_deserializer","operation_id_deserializer","operation_id_serializer","serialize","slot_deserializer","slot_serializer","try_from","try_from","try_into","try_into","type_id","type_id","u64_deserializer","u64_serializer","vzip","vzip"],"q":["massa_executed_ops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_executed_ops::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_executed_ops::denunciations_changes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_executed_ops::executed_denunciations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_executed_ops::executed_ops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_executed_ops::ops_changes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A structure to list and prune previously processed …","Speculative changes for ExecutedOps","Deserializer for <code>ExecutedOps</code>","<code>ExecutedOps</code> Serializer","","A structure to list and prune previously executed …","Speculative changes for ExecutedOps","Deserializer for <code>ExecutedOps</code>","<code>ExecutedOps</code> Serializer","","Deserializer for <code>ExecutedOps</code>","<code>ExecutedOps</code> Serializer","Deserializer for <code>ProcessedDenunciations</code>","<code>ProcessedDenunciations</code> Serializer","Maximum size of a bootstrap part","Maximum size of a bootstrap part","Copyright (c) 2022 MASSA LABS info@massa.net","Processed denunciations configuration","Executed operations configuration","RocksDB Instance","","","","","Period delta for denunciation to expire","for better insertion complexity","Copyright (c) 2023 MASSA LABS info@massa.net","Copyright (c) 2023 MASSA LABS info@massa.net This file …","Copyright (c) 2022 MASSA LABS info@massa.net This file …","Accumulated hash of the processed denunciations","Accumulated hash of the executed operations","execution status of operations (true: success, false: fail)","","","","","","Executed operations only for better insertion complexity","Copyright (c) 2022 MASSA LABS info@massa.net","","","","","","","","","","","for better pruning complexity","Executed operations btreemap with slot as index for better …","Number of threads","","","","","","","","","Maximum size of a bootstrap part","Maximum size of a bootstrap part","","","","","","","","","Period delta for denunciation to expire","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Number of threads","","","","","","","","","","","Speculative changes for ExecutedOps","Deserializer for <code>ExecutedOps</code>","<code>ExecutedOps</code> Serializer","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new <code>ExecutedDenunciations</code> Serializer","Create a new deserializer for <code>ExecutedOps</code>","","","","","","","","","","","","","A structure to list and prune previously processed …","Deserializer for <code>ProcessedDenunciations</code>","<code>ProcessedDenunciations</code> Serializer","Apply speculative operations changes to the final …","","","","","","","","","Processed denunciations configuration","Check if a denunciation (e.g. a denunciation index) was …","","","","for better insertion complexity","","Internal function used to insert the values of an …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a part of the processed denunciations. Used …","Accumulated hash of the processed denunciations","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Check executed ops emptiness","Returns the number of executed operations","Create a new <code>ProcessedDenunciations</code> Serializer","Create a new deserializer for <code>ProcessedDenunciations</code>","Create a new <code>ProcessedDenunciations</code>","","Prune all denunciations that have expired, assuming the …","Reset the executed operations","","Set a part of the processed denunciations. Used …","","","","for better pruning complexity","","","","","","","","","","","","","","","A structure to list and prune previously executed …","Deserializer for <code>ExecutedOps</code>","<code>ExecutedOps</code> Serializer","Apply speculative operations changes to the final executed …","","","","","","","","","Executed operations configuration","Check if an operation was executed","RocksDB Instance","","","Internal function used to insert the values of an …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a part of the executed operations. Used exclusively by …","Accumulated hash of the executed operations","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Check executed ops emptiness","Returns the number of executed operations","Create a new <code>ExecutedOps</code> Serializer","Create a new deserializer for <code>ExecutedOps</code>","Creates a new <code>ExecutedOps</code>","Creates a new <code>ExecutedOps</code> and computes the hash Useful …","execution status of operations (true: success, false: fail)","","Executed operations only for better insertion complexity","","Prune all operations that expire strictly before <code>slot</code>","Reset the executed operations","","Set a part of the executed operations. Used exclusively by …","","","","Executed operations btreemap with slot as index for better …","","","","","","","","","","","","","","","Speculative changes for ExecutedOps","Deserializer for <code>ExecutedOps</code>","<code>ExecutedOps</code> Serializer","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new <code>ExecutedOps</code> Serializer","Create a new deserializer for <code>ExecutedOps</code>","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,19,29,29,9,24,8,23,2,19,0,0,0,19,29,29,39,40,34,40,39,29,0,24,34,24,34,40,24,34,23,33,39,19,29,1,9,40,8,23,33,39,0,0,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,0,0,0,8,9,8,9,9,8,8,9,8,9,8,9,8,9,8,9,8,8,9,8,9,8,9,9,8,8,9,0,0,0,0,19,23,24,19,23,24,19,19,19,19,19,24,23,23,19,24,19,19,23,24,19,19,19,19,23,24,19,23,24,19,19,19,23,24,19,24,19,19,23,19,24,24,23,19,19,23,24,19,23,24,19,23,24,19,23,23,24,19,0,0,0,29,33,34,29,33,34,29,29,29,29,29,29,33,34,29,29,33,34,29,29,29,29,33,34,29,33,34,29,29,29,33,34,29,29,29,34,29,34,29,29,33,29,34,34,33,29,29,33,34,29,33,34,29,33,34,29,33,33,34,29,0,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,40,39,39,40,39,39,40,39,40,39,40,40,39,39,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],0,[[1,3],4],[[2,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[[],8],[9,[[13,[10,[0,[11,12]]]]]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],8],[[14,15,16],9],[[8,10,17],[[6,[18]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,0,[[]],[[]],0,0,0,0,[[19,10,20]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[[]],0,[[19,21],22],0,0,[[],23],0,[24,[[13,[[26,[20,[25,[21]]]],[0,[11,12]]]]]],[19],[[19,3],4],[[]],[[]],[[]],[[]],[[19,[27,[20]]]],0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[19,22],[19,28],[[],23],[[14,15,16,16],24],[2,19],0,[[19,20]],[19],[[23,26,17],[[6,[18]]]],[[19,[26,[20,[25,[21]]]]],[[27,[20]]]],0,0,0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],0,0,0,[[29,30,20,31]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[[]],0,[[29,32],22],0,[[],33],[34,[[13,[[26,[20,[35,[32]]]],[0,[11,12]]]]]],[29],[[29,3],4],[[]],[[]],[[]],[[]],[[29,[27,[20]]]],0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[29,22],[29,28],[[],33],[[14,16,16],34],[[1,[38,[[37,[36]]]]],29],[[1,[38,[[37,[36]]]],[26,[20,[35,[32]]]]],29],0,0,0,0,[[29,20]],[29],[[33,26,17],[[6,[18]]]],[[29,[26,[20,[35,[32]]]]],[[27,[20]]]],0,0,0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],39],[40,[[13,[30,[0,[11,12]]]]]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],39],[[14,16],40],0,0,0,0,[[39,30,17],[[6,[18]]]],0,0,[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,0,[[]],[[]]],"p":[[3,"ExecutedOpsConfig"],[3,"ExecutedDenunciationsConfig"],[3,"Formatter"],[6,"Result"],[3,"Request"],[4,"Result"],[3,"TypeId"],[3,"ExecutedDenunciationsChangesSerializer"],[3,"ExecutedDenunciationsChangesDeserializer"],[6,"ExecutedDenunciationsChanges"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[15,"u8"],[15,"u32"],[15,"u64"],[3,"Vec"],[4,"SerializeError"],[3,"ExecutedDenunciations"],[3,"Slot"],[4,"DenunciationIndex"],[15,"bool"],[3,"ProcessedDenunciationsSerializer"],[3,"ProcessedDenunciationsDeserializer"],[3,"HashSet"],[3,"BTreeMap"],[4,"StreamingStep"],[15,"usize"],[3,"ExecutedOps"],[6,"ExecutedOpsChanges"],[3,"DBBatch"],[3,"OperationId"],[3,"ExecutedOpsSerializer"],[3,"ExecutedOpsDeserializer"],[6,"PreHashSet"],[6,"DB"],[6,"RwLock"],[3,"Arc"],[3,"ExecutedOpsChangesSerializer"],[3,"ExecutedOpsChangesDeserializer"]]},\
"massa_execution_exports":{"doc":"Overview","t":"NNNNDDDIEIDDNDNNNNNNNDDDENNNNDNNNNMMMMLLMMMMMMLKLMAMMLMLLLLMAAMKMMMLLLMMMMKKKKKKKMMLMLLMMMMMMMMMMMMMMMMMMLMMMMMMMLMMMAMMMMMKMMMMMMLLLLAKLLLKLMMMMMIIKKKKKKKKKKKKNNNIENNNNNNNINNNNNNNNRKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLMMLLLLLLLLMLLLLLLMMMMLLMLLLLMMMMMMMMMMMMMMMLLMMMMMMMMLLLLLLLLLLLLLLLLNDDDNDDDEMMLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["BlockGasError","BytecodeExecution","CacheError","ChannelError","EventStore","ExecutionAddressInfo","ExecutionConfig","ExecutionController","ExecutionError","ExecutionManager","ExecutionOutput","ExecutionStackElement","FunctionCall","GasCosts","IncludeDenunciationError","IncludeOperationError","InitVestingError","InvalidSlotRange","MassaHashError","ModelsError","NotEnoughGas","ReadOnlyCallRequest","ReadOnlyExecutionOutput","ReadOnlyExecutionRequest","ReadOnlyExecutionTarget","RollBuyError","RollSellError","RuntimeError","SlashError","StorageCostsConstants","TooMuchGas","TransactionError","VMError","VestingError","abi_costs","address","block_id","block_reward","borrow","borrow_mut","call_result","call_stack","call_stack","candidate_balance","candidate_datastore_keys","candidate_roll_count","clone","clone_box","clone_into","coins","controller_traits","cursor_delay","cycle_infos","default","denunciation_expire_periods","deref","deref_mut","deserialize","drop","endorsement_count","error","event_store","events","execute_readonly_request","final_balance","final_datastore_keys","final_roll_count","fmt","from","from_ref","future_deferred_credits","gas_cost","gas_costs","genesis_timestamp","get_addresses_infos","get_cycle_active_rolls","get_filtered_sc_output_event","get_final_and_active_data_entry","get_final_and_candidate_balance","get_op_exec_status","get_stats","hd_cache_path","hd_cache_size","init","initial_vesting_path","into","into_request","is_final","is_final","last_start_period","launch_cost","ledger_cost_per_byte","ledger_entry_base_cost","ledger_entry_datastore_base_cost","lru_cache_size","max_async_gas","max_bytecode_size","max_datastore_key_length","max_datastore_value_size","max_final_events","max_gas","max_gas","max_gas_per_block","max_miss_ratio","max_read_only_gas","new","operation_datastore","operation_validity_period","operator_cost","out","owned_addresses","parameter","periods_per_cycle","pointer_metadata","readonly_queue_length","roll_count_to_slash_on_denunciation","roll_price","settings","slot","snip_amount","sp_compilation_cost","state_changes","stats_time_window_duration","stop","storage_costs_constants","t0","target","target_addr","target_func","thread_count","to_owned","try_from","try_into","type_id","types","unexecuted_ops_among","upcast_any_box","upcast_any_mut","upcast_any_ref","update_blockclique_status","vzip","context","error","parameter","target_addr","target_func","ExecutionController","ExecutionManager","clone_box","execute_readonly_request","get_addresses_infos","get_cycle_active_rolls","get_filtered_sc_output_event","get_final_and_active_data_entry","get_final_and_candidate_balance","get_op_exec_status","get_stats","stop","unexecuted_ops_among","update_blockclique_status","BlockGasError","CacheError","ChannelError","DisplayToDisplayDoc","ExecutionError","IncludeDenunciationError","IncludeOperationError","InitVestingError","InvalidSlotRange","MassaHashError","ModelsError","NotEnoughGas","PathToDisplayDoc","RollBuyError","RollSellError","RuntimeError","SlashError","TooMuchGas","TransactionError","VMError","VestingError","_DERIVE_Display_FOR_ExecutionError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","fmt","from","from","from","from","from_ref","init","into","into_request","pointer_metadata","provide","source","to_owned","to_string","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","context","error","EventStore","borrow","borrow_mut","clear","clone","clone_into","default","deref","deref_mut","deserialize","drop","extend","finalize","fmt","from","from_ref","get_filtered_sc_output_events","init","into","into_request","pointer_metadata","prune","push","take","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","ExecutionConfig","StorageCostsConstants","block_reward","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cursor_delay","denunciation_expire_periods","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","endorsement_count","fmt","fmt","from","from","from_ref","from_ref","gas_costs","genesis_timestamp","hd_cache_path","hd_cache_size","init","init","initial_vesting_path","into","into","into_request","into_request","last_start_period","ledger_cost_per_byte","ledger_entry_base_cost","ledger_entry_datastore_base_cost","lru_cache_size","max_async_gas","max_bytecode_size","max_datastore_key_length","max_datastore_value_size","max_final_events","max_gas_per_block","max_miss_ratio","max_read_only_gas","operation_validity_period","periods_per_cycle","pointer_metadata","pointer_metadata","readonly_queue_length","roll_count_to_slash_on_denunciation","roll_price","snip_amount","stats_time_window_duration","storage_costs_constants","t0","thread_count","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","BytecodeExecution","ExecutionAddressInfo","ExecutionOutput","ExecutionStackElement","FunctionCall","ReadOnlyCallRequest","ReadOnlyExecutionOutput","ReadOnlyExecutionRequest","ReadOnlyExecutionTarget","address","block_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_result","call_stack","call_stack","candidate_balance","candidate_datastore_keys","candidate_roll_count","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coins","cycle_infos","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","events","final_balance","final_datastore_keys","final_roll_count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future_deferred_credits","gas_cost","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_final","is_final","max_gas","max_gas","operation_datastore","out","owned_addresses","parameter","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","slot","state_changes","target","target_addr","target_func","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","vzip","vzip","vzip","vzip","parameter","target_addr","target_func"],"q":["massa_execution_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_exports::ExecutionError","","massa_execution_exports::ReadOnlyExecutionTarget","","","massa_execution_exports::controller_traits","","","","","","","","","","","","","","massa_execution_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_exports::error::ExecutionError","","massa_execution_exports::event_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_exports::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_exports::typesmassa_execution_exports::types::ReadOnlyExecutionTarget","",""],"d":["Block gas error: {0}","Execute the main function of a bytecode","Cache error: {0}","Channel error","Store for events emitted by smart contracts","Execution info about an address","Execution module configuration","interface that communicates with the execution worker …","Errors of the execution component.","Execution manager used to stop the execution thread","structure describing the output of a single execution","Structure describing an element of the execution stack. …","Execute a function call","","Include denunciation error: {0}","Include operation error: {0}","Error when initialize vesting addresses: {0}","Invalid slot range","<code>MassaHashError</code>: {0}","<code>ModelsError</code>: {0}","Not enough gas in the block: {0}","structure describing a read-only call","structure describing the output of a read only execution","structure describing different types of read-only …","structure describing different possible targets of a …","<code>RollBuy</code> error: {0}","<code>RollSell</code> error: {0}","Runtime error: {0}","Slash roll or deferred credits  error: {0}","Storage cost constants","Given gas is above the threshold: {0}","<code>Transaction</code> error: {0}","VM Error in {context} context: {error}","We reach the vesting constraint: {0}","","Called address","optional block ID at that slot (None if miss)","block creation reward","","","Returned value from the module call","Call stack to simulate, older caller first","Call stack to simulate, older caller first. Target should …","candidate balance of the address","candidate datastore keys of the address","candidate number of rolls the address has","","Returns a boxed clone of self. Useful to allow cloning …","","Coins transferred to the target address during the call","This module exports generic traits representing interfaces …","extra lag to add on the execution cursor to improve …","cycle information","","Denunciation expire delta","","","","","endorsement count","this file defines all possible execution error categories","This module represents an event store allowing to store, …","events emitted by the execution step","Execute read-only SC function call without causing …","final balance of the address","final datastore keys of the address","final number of rolls the address has","","Returns the argument unchanged.","","future deferred credits","Gas cost for this execution","Gas costs","genesis timestamp","Gets information about a batch of addresses","Returns for a given cycle the stakers taken into account …","Get execution events optionally filtered by:","Get a copy of a single datastore entry with its final and …","Get the final and active values of balance.","Get the execution status of operation that have been …","Get execution statistics","Path to the hard drive cache storage","Maximum number of entries we want to keep in the HD cache","","Path to the initial vesting file","Calls <code>U::from(self)</code>.","","execution start state","execution start state","last start period, used to attach to the correct execution …","","Cost per byte in ledger","Ledger entry base cost","Ledger entry datastore base cost","Maximum number of entries we want to keep in the LRU cache","maximum available gas for asynchronous messages execution","Max bytecode size","Max size of a datastore key","Max datastore value size","maximum number of SC output events kept in cache","Maximum gas to spend in the execution.","Maximum gas to spend in the execution.","maximum gas per block","Max miss ratio for auto roll sell","Max gas for read only executions","","Datastore (key value store) for <code>ExecuteSC</code> Operation","operation validity period","","Output of a single execution","List of addresses owned by the current call, and on which …","Parameter to pass to the target function","periods per cycle","","read-only execution request queue length","Number of roll to remove per denunciation","price of a roll inside the network","This module provides the structures used to provide …","slot","Amount of entries removed when <code>hd_cache_size</code> is reached","","state changes caused by the execution step","duration of the statistics time window","Stop the execution thread Note that we do not take self by …","Storage cost constants","period duration","Target of the request","Target address","Target function","number of threads","","","","","This file exports useful types used to interact with the …","List which operations inside the provided list were not …","","","","Updates blockclique status by signaling newly finalized …","","execution context in which the error happened","<code>massa-sc-runtime</code> virtual machine error","Parameter to pass to the target function","Target address","Target function","interface that communicates with the execution worker …","Execution manager used to stop the execution thread","Returns a boxed clone of self. Useful to allow cloning …","Execute read-only SC function call without causing …","Gets information about a batch of addresses","Returns for a given cycle the stakers taken into account …","Get execution events optionally filtered by:","Get a copy of a single datastore entry with its final and …","Get the final and active values of balance.","Get the execution status of operation that have been …","Get execution statistics","Stop the execution thread Note that we do not take self by …","List which operations inside the provided list were not …","Updates blockclique status by signaling newly finalized …","Block gas error: {0}","Cache error: {0}","Channel error","","Errors of the execution component.","Include denunciation error: {0}","Include operation error: {0}","Error when initialize vesting addresses: {0}","Invalid slot range","<code>MassaHashError</code>: {0}","<code>ModelsError</code>: {0}","Not enough gas in the block: {0}","","<code>RollBuy</code> error: {0}","<code>RollSell</code> error: {0}","Runtime error: {0}","Slash roll or deferred credits  error: {0}","Given gas is above the threshold: {0}","<code>Transaction</code> error: {0}","VM Error in {context} context: {error}","We reach the vesting constraint: {0}","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","execution context in which the error happened","<code>massa-sc-runtime</code> virtual machine error","Store for events emitted by smart contracts","","","Clear the event store","","","","","","","","Extend the event store with another store","Set the events of this store as final","","Returns the argument unchanged.","","Get events optionally filtered by:","","Calls <code>U::from(self)</code>.","","","Prune the event store if its size is over the given limit","Push a new smart contract event to the store","Take the event store","","","","","","","","","Execution module configuration","Storage cost constants","block creation reward","","","","","","","","","extra lag to add on the execution cursor to improve …","Denunciation expire delta","","","","","","","","","endorsement count","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Gas costs","genesis timestamp","Path to the hard drive cache storage","Maximum number of entries we want to keep in the HD cache","","","Path to the initial vesting file","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","last start period, used to attach to the correct execution …","Cost per byte in ledger","Ledger entry base cost","Ledger entry datastore base cost","Maximum number of entries we want to keep in the LRU cache","maximum available gas for asynchronous messages execution","Max bytecode size","Max size of a datastore key","Max datastore value size","maximum number of SC output events kept in cache","maximum gas per block","Max miss ratio for auto roll sell","Max gas for read only executions","operation validity period","periods per cycle","","","read-only execution request queue length","Number of roll to remove per denunciation","price of a roll inside the network","Amount of entries removed when <code>hd_cache_size</code> is reached","duration of the statistics time window","Storage cost constants","period duration","number of threads","","","","","","","","","","","","","","","","","Execute the main function of a bytecode","Execution info about an address","structure describing the output of a single execution","Structure describing an element of the execution stack. …","Execute a function call","structure describing a read-only call","structure describing the output of a read only execution","structure describing different types of read-only …","structure describing different possible targets of a …","Called address","optional block ID at that slot (None if miss)","","","","","","","","","","","","","","","Returned value from the module call","Call stack to simulate, older caller first","Call stack to simulate, older caller first. Target should …","candidate balance of the address","candidate datastore keys of the address","candidate number of rolls the address has","","","","","","","","","","","","","","","Coins transferred to the target address during the call","cycle information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","events emitted by the execution step","final balance of the address","final datastore keys of the address","final number of rolls the address has","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","future deferred credits","Gas cost for this execution","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","execution start state","execution start state","Maximum gas to spend in the execution.","Maximum gas to spend in the execution.","Datastore (key value store) for <code>ExecuteSC</code> Operation","Output of a single execution","List of addresses owned by the current call, and on which …","Parameter to pass to the target function","","","","","","","","slot","state changes caused by the execution step","Target of the request","Target address","Target function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parameter to pass to the target function","Target address","Target function"],"i":[9,48,9,9,0,0,0,0,0,0,0,0,48,0,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,0,9,9,9,9,1,50,47,46,1,1,8,7,49,12,12,12,1,2,1,50,0,46,12,1,46,1,1,1,1,46,0,0,47,2,12,12,12,1,1,1,12,8,46,46,2,2,2,2,2,2,2,46,46,1,46,1,1,7,49,46,1,45,45,45,46,46,46,46,46,46,7,49,46,46,46,1,50,46,1,8,50,49,46,1,46,46,46,0,47,46,1,47,46,51,46,46,7,49,49,46,1,1,1,1,0,2,1,1,1,2,1,52,52,53,53,53,0,0,2,2,2,2,2,2,2,2,2,51,2,2,9,9,9,0,0,9,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,0,54,55,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,52,52,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,46,45,46,45,46,45,46,45,46,46,46,45,46,45,46,45,46,45,46,46,45,46,45,46,45,46,46,46,46,46,45,46,46,45,46,45,46,46,45,45,45,46,46,46,46,46,46,46,46,46,46,46,45,46,46,46,46,46,46,46,46,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,48,0,0,0,48,0,0,0,0,50,47,12,47,8,7,48,49,50,12,47,8,7,48,49,50,8,7,49,12,12,12,12,47,8,7,48,49,50,12,47,8,7,48,49,50,50,12,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,47,12,12,12,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,8,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,7,49,7,49,50,8,50,49,12,47,8,7,48,49,50,47,47,7,49,49,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,12,47,8,7,48,49,50,53,53,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,[1,1],[[],[[3,[2]]]],[[]],0,0,0,0,[[],1],0,[4],[4],[[],[[6,[5]]]],[4],0,0,0,0,[7,[[6,[8,9]]]],0,0,0,[[1,10],[[6,[11]]]],[[]],[[]],0,0,0,0,[[],[[13,[12]]]],[14,[[16,[15,14]]]],[17,[[13,[18]]]],[13,13],[[],13],[[]],[[],19],0,0,[[],4],0,[[]],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[21,21],[[6,[1,22]]]],0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,[[]],[[],6],[[],6],[[],23],0,[[24,25],[[24,[26]]]],[[[3,[27]]],[[3,[28,27]]]],[[],28],[[],28],[[[31,[29,30]],[32,[[31,[29,30]]]],[34,[30,33]]]],[[]],0,0,0,0,0,0,0,[[],[[3,[2]]]],[7,[[6,[8,9]]]],[[],[[13,[12]]]],[14,[[16,[15,14]]]],[17,[[13,[18]]]],[13,13],[[],13],[[]],[[],19],[[]],[[24,25],[[24,[26]]]],[[[31,[29,30]],[32,[[31,[29,30]]]],[34,[30,33]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],35],[[]],[[]],[9,9],[[]],[4],[4],[[],[[6,[5]]]],[4],[[9,10],36],[[9,10],36],[[]],[37,9],[38,9],[39,9],[[]],[[],4],[[]],[[],20],[[]],[40],[9,[[32,[41]]]],[[]],[[],42],[[],6],[[],6],[[],23],[[[3,[27]]],[[3,[28,27]]]],[[],28],[[],28],[[]],0,0,0,[[]],[[]],[43],[43,43],[[]],[[],43],[4],[4],[[],[[6,[5]]]],[4],[[43,43]],[43],[[43,10],36],[[]],[[]],[[43,17],[[44,[18]]]],[[],4],[[]],[[],20],[[]],[[43,4]],[[43,18]],[43,[[44,[18]]]],[[]],[[],6],[[],6],[[],23],[[[3,[27]]],[[3,[28,27]]]],[[],28],[[],28],[[]],0,0,0,[[]],[[]],[[]],[[]],[45,45],[46,46],[[]],[[]],0,0,[4],[4],[4],[4],[[],[[6,[5]]]],[[],[[6,[5]]]],[4],[4],0,[[45,10],36],[[46,10],36],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],0,[[]],[[]],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[],28],[[],28],[[],28],[[],28],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[12,12],[47,47],[8,8],[7,7],[48,48],[49,49],[50,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[4],[4],[4],[4],[4],[4],[4],0,0,0,0,[[12,10],36],[[47,10],36],[[8,10],36],[[7,10],36],[[48,10],36],[[49,10],36],[[50,10],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[[3,[27]]],[[3,[28,27]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0],"p":[[3,"GasCosts"],[8,"ExecutionController"],[3,"Box"],[15,"usize"],[3,"With"],[4,"Result"],[3,"ReadOnlyExecutionRequest"],[3,"ReadOnlyExecutionOutput"],[4,"ExecutionError"],[3,"Formatter"],[3,"Error"],[3,"ExecutionAddressInfo"],[3,"Vec"],[15,"u64"],[4,"Address"],[3,"BTreeMap"],[3,"EventFilter"],[3,"SCOutputEvent"],[3,"ExecutionStats"],[3,"Request"],[3,"PathBuf"],[3,"Error"],[3,"TypeId"],[6,"PreHashSet"],[15,"u8"],[3,"OperationId"],[3,"Global"],[8,"Any"],[3,"Slot"],[3,"BlockId"],[3,"HashMap"],[4,"Option"],[3,"Storage"],[6,"PreHashMap"],[3,"Display"],[6,"Result"],[4,"CacheError"],[4,"MassaHashError"],[4,"ModelsError"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"EventStore"],[3,"VecDeque"],[3,"StorageCostsConstants"],[3,"ExecutionConfig"],[3,"ExecutionOutput"],[4,"ReadOnlyExecutionTarget"],[3,"ReadOnlyCallRequest"],[3,"ExecutionStackElement"],[8,"ExecutionManager"],[13,"VMError"],[13,"FunctionCall"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_execution_worker":{"doc":"General description","t":"AAAAAAAAAAAAFAAANDNNENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHDDHHHLLLMLLLLLMLMMMMMMMLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLMMLMLLLLLMMMMMMMMLLLLLLLLLLMMLLLLLLLMLLHHDDDHHMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLMLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHHHHHHHHMMLLLLMOLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLMMLLLLMLLLLLLLLMLHDHLLLLLLLMMOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLLLLLLDDLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMLMLLLLLLLLLLLLLLLLDMLLLLLLLMLLLLLFMLLMLLLLLLLLLLLLDMLLLLLLMMLLLLLLLLLLLLLLLLLLDMLLLLLLMMLLLLLLLLLLLLLLLLLLHHHHDMMLLLLLLLLLMLLLLLLLLLLLMMMLLLLLMLLLLLLLLLDMLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLMMLLLLLLLLLLMLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLMLLMMMLLLLLLLLLLLLLMLLHDHLLLLLLLMLLMLLLLLMMMFLLLLLL","n":["active_history","context","controller","execution","interface_impl","request_queue","slot_sequencer","speculative_async_pool","speculative_executed_denunciations","speculative_executed_ops","speculative_ledger","speculative_roll_state","start_execution_worker","stats","vesting_manager","worker","Absent","ActiveHistory","Found","Future","HistorySearchResult","NoHistory","NoInfo","Past","Present","SlotIndexPosition","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fetch_active_history_data_entry","fetch_balance","fetch_bytecode","fetch_executed_op","fetch_message","fetch_processed_de","fetch_roll_count","find_cycle_indices","fmt","from","from","from","get_adress_deferred_credit_for","get_all_deferred_credits_until","get_op_exec_status","get_slot_index","init","init","init","into","into","into","into_request","into_request","into_request","pointer_metadata","pointer_metadata","pointer_metadata","truncate_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","ExecutionContext","ExecutionContextSnapshot","META","META","META","active_slot","add_rolls","append_data_entry","async_pool_changes","borrow","borrow","borrow_mut","borrow_mut","cancel_async_message","config","create_new_sc_address","created_addr_index","created_addr_index","created_event_index","created_event_index","created_message_index","creator_address","creator_coin_spending_allowance","delete_data_entry","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","event_create","event_emit","events","events","execute_deferred_credits","executed_ops","from","from","get_address_cycle_infos","get_address_deferred_credits","get_address_future_deferred_credits","get_balance","get_bytecode","get_call_stack","get_current_address","get_current_call_coins","get_current_owned_addresses","get_data_entry","get_keys","get_snapshot","has_data_entry","has_write_rights_on","init","init","insert_executed_denunciation","insert_executed_op","into","into","into_request","into_request","is_denunciation_processed","is_op_executed","ledger_changes","max_gas","module_cache","new","opt_block_id","origin_operation_id","pointer_metadata","pointer_metadata","pos_changes","processed_denunciations","push_new_message","read_only","readonly","reset_to_snapshot","set_bytecode","set_data_entry","settle_slot","slot","speculative_async_pool","speculative_executed_ops","speculative_ledger","speculative_processed_denunciations","speculative_roll_state","stack","stack","take_async_batch","transfer_coins","try_from","try_from","try_into","try_into","try_sell_rolls","try_slash_rolls","type_id","type_id","unsafe_rng","unsafe_rng","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","update_production_stats","vesting_manager","vzip","vzip","CALLSITE","CALLSITE","ExecutionControllerImpl","ExecutionInputData","ExecutionManagerImpl","META","META","block_storage","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_box","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","execute_readonly_request","execution_state","finalized_blocks","fmt","from","from","from","from_ref","get_addresses_infos","get_cycle_active_rolls","get_filtered_sc_output_event","get_final_and_active_data_entry","get_final_and_candidate_balance","get_op_exec_status","get_stats","init","init","init","input_data","input_data","into","into","into","into_request","into_request","into_request","new","new_blockclique","pointer_metadata","pointer_metadata","pointer_metadata","readonly_requests","stop","stop","take","thread_handle","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unexecuted_ops_among","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","update_blockclique_status","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ExecutionState","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","active_cursor","active_history","apply_active_execution_output","apply_final_execution_output","borrow","borrow_mut","config","context_guard","deref","deref_mut","deserialize","drop","execute_async_message","execute_callsc_op","execute_candidate_slot","execute_executesc_op","execute_final_slot","execute_operation","execute_readonly_request","execute_roll_buy_op","execute_roll_sell_op","execute_slot","execute_transaction_op","execution_context","execution_interface","final_cursor","final_events","final_state","from","get_address_cycle_infos","get_address_future_deferred_credits","get_cycle_active_rolls","get_filtered_sc_output_event","get_final_and_active_data_entry","get_final_and_candidate_balance","get_final_and_candidate_datastore_keys","get_final_and_candidate_rolls","get_op_exec_status","get_stats","init","into","into_request","mip_store","module_cache","new","pointer_metadata","prepare_operation_for_execution","process_denunciation","stats_counter","try_from","try_into","type_id","unexecuted_ops_among","upcast_any_box","upcast_any_mut","upcast_any_ref","update_versioning_stats","vesting_manager","vzip","CALLSITE","InterfaceImpl","META","address_from_public_key","borrow","borrow_mut","caller_has_write_access","clone","clone_box","clone_into","config","context","context_guard","create_module","deref","deref_mut","deserialize","drop","finish_call","from","from_ref","generate_event","get_balance","get_balance_for","get_call_coins","get_call_stack","get_current_period","get_current_thread","get_keys","get_keys_for","get_module","get_op_data","get_op_keys","get_owned_addresses","get_time","has_data","has_data_for","has_op_key","hash","hash_sha256","init","init_call","into","into_request","new","pointer_metadata","print","raw_append_data","raw_append_data_for","raw_delete_data","raw_delete_data_for","raw_get_bytecode","raw_get_bytecode_for","raw_get_data","raw_get_data_for","raw_set_bytecode","raw_set_bytecode_for","raw_set_data","raw_set_data_for","send_message","signature_verify","to_owned","transfer_coins","transfer_coins_for","try_from","try_into","type_id","unsafe_random","unsafe_random_f64","upcast_any_box","upcast_any_mut","upcast_any_ref","validate_address","vzip","RequestQueue","RequestWithResponseSender","borrow","borrow","borrow_mut","borrow_mut","cancel","cancel","capacity","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","extend","fmt","fmt","from","from","init","init","into","into","into_request","into_request","into_request_sender_pair","is_empty","is_full","max_items","new","new","pointer_metadata","pointer_metadata","pop","push","queue","request","response_tx","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SlotInfo","SlotSequencer","borrow","borrow","borrow_mut","borrow_mut","cleanup_sequence","clone","clone_into","config","content","css_final","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","from","from","from_ref","get_block_id","get_next_slot_deadline","get_slot","get_slot_index","get_time_cursor","init","init","init","into","into","into_request","into_request","is_task_available","latest_css_final_slots","latest_executed_candidate_slot","latest_executed_final_slot","latest_sce_final_slot","new","pointer_metadata","pointer_metadata","run_task_with","sce_final","sequence","sequence_build_step","slot","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","update","vzip","vzip","SpeculativeAsyncPool","active_history","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fetch_msgs","final_state","from","get_snapshot","init","into","into_request","is_triggered","message_infos","new","pointer_metadata","pool_changes","push_new_message","reset_to_snapshot","settle_slot","take","take_batch_to_execute","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","SpeculativeExecutedDenunciations","active_history","borrow","borrow_mut","deref","deref_mut","deserialize","drop","executed_denunciations","final_state","from","get_snapshot","init","insert_processed_de","into","into_request","is_de_processed","new","pointer_metadata","reset_to_snapshot","take","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","SpeculativeExecutedOps","active_history","borrow","borrow_mut","deref","deref_mut","deserialize","drop","executed_ops","final_state","from","get_snapshot","init","insert_executed_op","into","into_request","is_op_executed","new","pointer_metadata","reset_to_snapshot","take","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","CALLSITE","META","META","SpeculativeLedger","active_history","added_changes","borrow","borrow_mut","create_new_sc_address","delete_data_entry","deref","deref_mut","deserialize","drop","entry_exists","final_state","from","get_balance","get_bytecode","get_data_entry","get_keys","get_snapshot","get_storage_cost_datastore_value","has_data_entry","init","into","into_request","max_bytecode_size","max_datastore_key_length","max_datastore_value_size","new","pointer_metadata","reset_to_snapshot","set_bytecode","set_data_entry","storage_costs_constants","take","transfer_coins","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","SpeculativeRollState","active_history","add_rolls","added_changes","borrow","borrow_mut","deref","deref_mut","deserialize","drop","final_state","from","get_address_cycle_infos","get_address_deferred_credit_for_slot","get_address_deferred_credits","get_production_stats_at_cycle","get_rolls","get_snapshot","init","into","into_request","new","pointer_metadata","reset_to_snapshot","settle_production_stats","take","take_unexecuted_deferred_credits","try_from","try_into","try_sell_rolls","try_slash_deferred_credits","try_slash_rolls","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","update_production_stats","vzip","ExecutionStatsCounter","borrow","borrow_mut","deref","deref_mut","deserialize","drop","final_blocks","final_executed_ops","from","get_stats","init","into","into_request","new","pointer_metadata","refresh","register_final_blocks","register_final_executed_operations","time_window_duration","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","VestingInfo","VestingManager","borrow","borrow","borrow_mut","borrow_mut","check_vesting_rolls_buy","check_vesting_transfer_coins","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","fmt","from","from","from_ref","genesis_timestamp","get_addr_vesting_at_slot","get_addr_vesting_at_time","init","init","into","into","into_request","into_request","load_vesting_from_file","max_rolls","min_balance","new","periods_per_cycle","pointer_metadata","pointer_metadata","roll_price","t0","thread_count","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vesting_registry","vzip","vzip","CALLSITE","ExecutionThread","META","borrow","borrow_mut","deref","deref_mut","deserialize","drop","execute_one_readonly_request","execution_state","from","init","input_data","into","into_request","main_loop","new","pointer_metadata","readonly_requests","selector","slot_sequencer","start_execution_worker","try_from","try_into","type_id","update_readonly_requests","vzip","wait_loop_event"],"q":["massa_execution_worker","","","","","","","","","","","","","","","","massa_execution_worker::active_history","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::execution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::interface_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::request_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::slot_sequencer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::speculative_async_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::speculative_executed_denunciations","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::speculative_executed_ops","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::speculative_ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::speculative_roll_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::stats","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::vesting_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_execution_worker::worker","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","This module represents the context in which the VM …","This module implements an execution controller. See …","This module deals with executing final and active slots, …","Implementation of the interface between …","This file defines a generic finite-size execution request …","Copyright (c) 2022 MASSA LABS info@massa.net This module …","The speculative asynchronous pool represents the state of …","Copyright (c) 2023 MASSA LABS info@massa.net Speculative …","Copyright (c) 2022 MASSA LABS info@massa.net Speculative …","The speculative ledger represents, in a compressed way, …","","Launches an execution worker thread and returns an …","Copyright (c) 2022 MASSA LABS info@massa.net","","Copyright (c) 2022 MASSA LABS info@massa.net This module …","","History of the outputs of recently executed slots. Slots …","found in history at a the given index","out of bounds in the future","Result of a lazy, active history search","history is empty","","out of bounds in the past","","Result of the search for a slot index in history","","","","","","","","","","","","","","","","","","","","Lazily query (from end to beginning) the active datastore …","Lazily query (from end to beginning) the active balance of …","Lazily query (from end to beginning) the active bytecode …","Lazily query (from end to beginning) the active list of …","Lazily query (from end to beginning) the a message based …","Lazily query (from end to beginning) the active list of …","Starting from the newest element in history, return the …","Find the history range of a cycle","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the deferred credits for a given address that will be …","Gets all the deferred credits that will be credited until …","Get the execution statuses of operations","Gets the index of a slot in history","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Remove <code>slot</code> and the slots after it from history","","","","","","","","","","","","","","","","","","","","","","","","","An execution context that needs to be initialized before …","A snapshot taken from an <code>ExecutionContext</code> and that …","","","","Create a new <code>ExecutionContext</code> for executing an active slot.","Add <code>roll_count</code> rolls to the buyer address. Validity checks …","Appends data to a datastore entry for an address in the …","speculative asynchronous pool messages emitted so far in …","","","","","Cancels an asynchronous message, reimbursing <code>msg.coins</code> to …","configuration","Creates a new smart contract address with initial …","counter of newly created addresses so far at this slot …","counter of newly created addresses so far during this …","counter of newly created events so far during this …","counter of newly created events so far during this …","counter of newly created messages so far during this …","Creator address. The bytecode of this address can’t be …","coin spending allowance for the operation creator","Deletes a datastore entry for an address. Fails if the …","","","","","","","","","Creates a new event but does not emit it. Note that this …","Emits a previously created event. Overrides the event’s …","generated events during this execution, with multiple …","generated events during this execution, with multiple …","Execute the deferred credits of <code>slot</code>.","speculative list of operations executed","Returns the argument unchanged.","Returns the argument unchanged.","gets the cycle information for an address","Get deferred credits of an address starting from a given …","Get future deferred credits of an address","gets the effective balance of an address","gets the bytecode of an address if it exists in the …","Gets the addresses from the call stack (last = top of the …","Gets the address at the top of the call stack, if any","Gets the current call coins","Gets the current list of owned addresses (top of the stack)","gets the data from a datastore entry of an address if it …","gets the datastore keys of an address if it exists in the …","Returns a snapshot containing the clone of the current …","checks if a datastore entry exists in the speculative …","Checks whether the context currently grants write access …","","","Insert a processed denunciation.","Insert an executed operation. Does not check for reuse, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Check if a denunciation was previously processed (to …","Check if an operation was previously executed (to prevent …","speculative ledger changes caused so far in the context","max gas for this execution","","Create a new empty <code>ExecutionContext</code> This should only be …","block ID, if one is present at the execution slot","operation id that originally caused this execution (if any)","","","speculative roll state changes caused so far in the context","speculative list of processed denunciations","Add a new asynchronous message to speculative pool","True if it’s a read-only context","Create a new <code>ExecutionContext</code> for read-only execution This …","Resets context to an existing snapshot. Optionally emits …","Sets a bytecode for an address in the speculative ledger. …","Sets a datastore entry for an address in the speculative …","Finishes a slot and generates the execution output. …","slot at which the execution happens","speculative asynchronous pool state, as seen after …","speculative list of executed operations","speculative ledger state, as seen after everything that …","speculative list of processed denunciations","speculative roll state, as seen after everything that …","address call stack, most recent is at the back","address call stack, most recent is at the back","This function takes a batch of asynchronous operations to …","Transfers coins from one address to another. No changes …","","","","","Try to sell <code>roll_count</code> rolls from the seller address.","Try to slash <code>roll_count</code> rolls from the denounced address. …","","","Unsafe random state","Unsafe random state (can be predicted and manipulated)","","","","","","","Update production statistics of an address.","","","","","","implementation of the execution controller","structure used to communicate with execution thread","Execution manager Allows stopping the execution worker","","","storage instances for previously unprocessed blocks","","","","","","","","Returns a boxed clone of self. Allows cloning …","","","","","","","","","","","","","","Executes a read-only request Read-only requests do not …","current execution state (see execution.rs for details)","list of newly finalized blocks","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets information about a batch of addresses","Return the active rolls distribution for the given <code>cycle</code>","Get the generated execution events, optionally filtered by:","Get a copy of a single datastore entry with its final and …","Get the final and candidate values of balance.","See trait definition","Get execution statistics","","","","input data to process in the VM loop with a wake-up …","input data to process in the VM loop with a wake-up …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new empty <code>ExecutionInputData</code>","new blockclique (if there is a new one)","","","","queue for read-only execution requests and response MPSCs …","stops the worker","set stop to true to stop the thread","Takes the current input data into a clone that is returned,","handle used to join the worker thread","","","","","","","","","","","","List which operations inside the provided list were not …","","","","","","","Updates blockclique status by signaling newly finalized …","","","","","","","","","","","","","","","","","","","","","","","","","","Structure holding consistent speculative and final …","","","","","","","","","","","","","","","","","","","","","","","","","Applies an execution output to the active (non-final) state","Applies the output of an execution to the final execution …","","","","Used to acquire a lock on the execution context","","","","","Tries to execute an asynchronous message If the execution …","Execute an operation of type <code>CallSC</code> Will panic if called …","Execute a candidate slot","Execute an operation of type <code>ExecuteSC</code> Will panic if …","Execute an SCE-final slot","Execute an operation in the context of a block. Assumes …","Runs a read-only execution request. The executed bytecode …","Execute an operation of type <code>RollBuy</code> Will panic if called …","Execute an operation of type <code>RollSell</code> Will panic if called …","Executes a full slot (with or without a block inside) …","Execute an operation of type <code>Transaction</code> Will panic if …","","","","","","Returns the argument unchanged.","Gets the production stats for an address at all cycles","Get future deferred credits of an address","Returns for a given cycle the stakers taken into account …","Gets execution events optionally filtered by:","Gets a data entry both at the latest final and active …","Gets a balance both at the latest final and candidate …","Get every final and active datastore key of the given …","Gets roll counts both at the latest final and active …","Get the execution statuses of both speculative and final …","Get execution statistics","","Calls <code>U::from(self)</code>.","","","","Create a new execution state. This should be called only …","","Helper function. Within a locked execution context (lock …","Process a denunciation in the context of a block.","","","","","List which operations inside the provided list were not …","","","","Update MipStore with block header stats","","","","an implementation of the Interface trait (see …","","Converts a public key to an address","","","Check whether or not the caller has write access in the …","","allows cloning a boxed <code>InterfaceImpl</code>","","execution configuration","thread-safe shared access to the execution context (see …","helper for locking the context mutex","Creates a new ledger entry with the initial bytecode given …","","","","","Called to finish the call process after a bytecode calls a …","Returns the argument unchanged.","","Emits an execution event to be stored.","Gets the balance of the current address address (top of …","Gets the balance of arbitrary address passed as argument.","Gets the amount of coins that have been transferred at the …","Returns the addresses in the call stack, from the bottom …","Returns the period of the current execution slot","Returns the thread of the current execution slot","Get the datastore keys (aka entries) for a given address","Get the datastore keys (aka entries) for a given address","Get the module from cache if possible, compile it if not","Gets an operation datastore value by key. Note that the …","Get the operation datastore keys (aka entries). Note that …","Returns the list of owned addresses (top of the call …","Returns the current time (millisecond UNIX timestamp) Note …","Checks if a datastore entry exists for the current address …","Checks if a datastore entry exists for a given address.","Checks if an operation datastore entry exists in the …","Hashes arbitrary data","Hashes givens byte array with sha256","","Initialize the call when bytecode calls a function from …","Calls <code>U::from(self)</code>.","","creates a new <code>InterfaceImpl</code>","","prints a message in the node logs at log level 3 (debug)","Appends data to a datastore entry for the current address …","Appends a value to a datastore entry for a given address. …","Deletes a datastore entry by key for the current address …","Deletes a datastore entry by key for a given address. …","Returns bytecode of the current address","Returns bytecode of the target address","Gets a datastore value by key for the current address (top …","Gets a datastore value by key for a given address.","Sets the bytecode of the current address","Sets the bytecode of an arbitrary address. Fails if the …","Sets a datastore entry for the current address (top of the …","Sets a datastore entry for a given address. Fails if the …","Adds an asynchronous message to the context speculative …","Verifies a signature","","Transfer coins from the current address (top of the call …","Transfer coins from a given address towards a target …","","","","Returns a pseudo-random deterministic <code>i64</code> number","Returns a pseudo-random deterministic <code>f64</code> number","","","","","","Structure representing an execution request queue with …","Represents an execution request T coupled with an MPSC …","","","","","Cancel the request by consuming the object and sending an …","Cancel all queued items.","Returns the max number of items the queue can contain","","","","","","","","","Extends Self with the contents of another <code>RequestQueue</code>. …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Destructure self into a (request, response sender) pair","Checks whether the queue is empty","Take all the elements into a new queue and reset the …","Max number of item in the queue. When the queue is full, …","Create a new request with response sender","Create a new request queue","","","Pop out the oldest element of the queue","Push a new element at the end of the queue. May fail if …","The actual underlying queue","The underlying execution request","An std::mpsc::Sender to later send the execution output R …","","","","","","","","","Information about a slot in the execution sequence","Structure allowing execution slot sequence management.","","","","","Clean the slot sequence by removing slots that are not …","","","Config","Content of the slot (None if miss, otherwise block ID and …","Whether the slot is CSS-final","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get the block ID (if any) at that slot","Gets the instant of the slot just after the latest slot in …","Gets an immutable reference to a SlotInfo, if any, …","Get the index of a slot in the sequence, if present, …","Internal function allowing to get the latest slot we …","Internal method that inits the sequencer. This method is …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if there is a queued slot that needs to be …","latest CSS-final slots (one per thread)","candidate slot execution cursor","final slot execution cursor","latest SCE-final slot","Create a new slot sequencer. Note that this will create a …","","","If a slot is ready for execution, this method will mark it …","Whether the slot is SCE-final","Continuous sequence of slots containing all the slots …","Internal method called by <code>Self::update</code> to construct one …","Slot","","","","","","","","","","","","","","Notify the sequencer of incoming changes: CSS-finalized …","","","","","","","","","","","","","Returns the argument unchanged.","Takes a snapshot (clone) of the emitted messages","","Calls <code>U::from(self)</code>.","","Check in the ledger changes if a message trigger has been …","","Creates a new <code>SpeculativeAsyncPool</code>","","","Add a new message to the list of changes of this …","Resets the <code>SpeculativeAsyncPool</code> emitted messages to a …","Settle a slot. Consume newly emitted messages into …","Returns the changes caused to the <code>SpeculativeAsyncPool</code> …","Takes a batch of asynchronous messages to execute, …","","","","","","","","Speculative state of processed denunciations","History of the outputs of recently executed slots. Slots …","","","","","","","executed operations: maps the operation ID to its validity …","Thread-safe shared access to the final state. For reading …","Returns the argument unchanged.","Takes a snapshot (clone) of the changes since its creation","","Insert a processed denunciation.","Calls <code>U::from(self)</code>.","","Checks if a denunciation was processed previously","Creates a new <code>SpeculativeProcessedDenunciations</code>","","Resets the <code>SpeculativeRollState</code> to a snapshot (see …","Returns the set of operation IDs caused to the …","","","","","","","","Speculative state of executed operations","History of the outputs of recently executed slots. Slots …","","","","","","","executed operations: maps the operation ID to its validity …","Thread-safe shared access to the final state. For reading …","Returns the argument unchanged.","Takes a snapshot (clone) of the changes caused to the …","","Insert an executed operation. Does not check for reuse, …","Calls <code>U::from(self)</code>.","","Checks if an operation was executed previously","Creates a new <code>SpeculativeExecutedOps</code>","","Resets the <code>SpeculativeRollState</code> to a snapshot (see …","Returns the set of operation IDs caused to the …","","","","","","","","","","","","The <code>SpeculativeLedger</code> contains an thread-safe shared …","History of the outputs of recently executed slots. Slots …","list of ledger changes that were applied to this …","","","Creates a new smart contract address with initial bytecode.","Deletes a datastore entry for a given address. Fails if …","","","","","Checks if an address exists in the speculative ledger","Thread-safe shared access to the final state. For reading …","Returns the argument unchanged.","Gets the effective balance of an address","Gets the effective bytecode of an address","Gets a copy of a datastore value for a given address and …","Gets a copy of a datastore keys for a given address","Takes a snapshot (clone) of the changes caused to the …","","Checks if a data entry exists for a given address","","Calls <code>U::from(self)</code>.","","Max bytecode size","max datastore key length","Max datastore value size","creates a new <code>SpeculativeLedger</code>","","Resets the <code>SpeculativeLedger</code> to a snapshot (see …","Sets the bytecode associated to an address in the ledger. …","Sets a data set entry for a given address in the ledger. …","storage cost constants","Returns the changes caused to the <code>SpeculativeLedger</code> since …","Transfers coins from one address to another. No changes …","","","","","","","","Speculative state of the rolls","History of the outputs of recently executed slots. Slots …","Add <code>roll_count</code> rolls to the buyer address. Validity checks …","List of changes to the state after settling roll sell/buy","","","","","","","Thread-safe shared access to the final state. For reading …","Returns the argument unchanged.","Get the production statistics for a given address at a …","Gets the deferred credits for a given address that will be …","Get deferred credits of an address starting from a given …","Get the production statistics for a given cycle. Returns a …","Internal function to retrieve the rolls of a given address","Takes a snapshot (clone) of the changes caused to the …","","Calls <code>U::from(self)</code>.","","Creates a new <code>SpeculativeRollState</code>","","Resets the <code>SpeculativeRollState</code> to a snapshot (see …","Settle the production statistics at <code>slot</code>.","Returns the changes caused to the <code>SpeculativeRollState</code> …","Take the non-zero deferred credits at or before <code>slot</code>. Set …","","","Try to sell <code>roll_count</code> rolls from the seller address.","Try to slash <code>amount</code> credits from the given address. If not …","Try to slash <code>roll_count</code> rolls from the given address. If …","","","","","Update production statistics of an address.","","Execution statistics counter","","","","","","","final blocks in the time window (count, instant)","final operations executed in the time window (count, …","Returns the argument unchanged.","get statistics","","Calls <code>U::from(self)</code>.","","create a new <code>ExecutionStatsCounter</code>","","refresh the counters and delete old records","register final blocks","register final executed operations","duration of the time window","","","","","","","","","","","","","","Check vesting max rolls for given address","Check vesting minimal balance for given address","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Retrieve vesting info for address at given slot","Retrieve vesting info for address at given time","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Initialize the hashmap of addresses from the vesting file","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure gathering all elements needed by the execution …","","","","","","","","Executes a read-only request from the queue, if any. The …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Main loop of the execution worker","Creates the <code>ExecutionThread</code> structure to gather all data …","","queue for read-only requests and response MPSCs to send …","Selector controller","","Launches an execution worker thread and returns an …","","","","Append incoming read-only requests to the relevant queue, …","","Waits for an event to trigger a new iteration in the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,26,26,0,26,15,26,15,0,15,8,26,15,8,26,8,15,8,26,15,8,26,15,8,26,15,8,26,8,8,8,8,8,8,8,8,26,15,8,26,8,8,8,8,15,8,26,15,8,26,15,8,26,15,8,26,8,15,8,26,15,8,26,15,8,26,15,8,26,15,8,26,15,8,26,15,8,26,0,0,0,0,0,0,0,0,40,40,40,47,47,40,47,40,40,40,40,47,40,47,40,40,40,40,40,47,40,47,40,47,40,47,40,40,40,47,40,40,47,47,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,47,40,40,40,47,40,47,40,40,40,47,40,40,40,40,40,47,40,47,47,40,40,40,40,40,40,40,40,40,40,40,40,40,47,40,40,40,47,40,47,40,40,40,47,40,47,40,47,40,47,40,47,40,40,40,47,40,0,0,0,0,0,0,0,54,54,58,50,54,58,50,50,50,50,54,58,50,54,58,50,54,58,50,54,58,50,50,50,54,54,54,58,50,50,50,50,50,50,50,50,50,54,58,50,58,50,54,58,50,54,58,50,54,54,54,58,50,54,58,54,54,58,50,54,54,58,50,54,58,50,54,58,50,50,58,50,58,50,58,50,50,54,58,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,66,66,66,66,66,66,66,66,66,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,74,75,74,75,74,75,75,74,75,74,75,74,75,74,75,75,74,75,74,75,74,75,74,75,74,75,74,75,75,75,74,75,74,75,75,75,75,74,74,74,75,74,75,74,75,74,75,0,0,78,79,78,79,78,79,79,78,79,79,78,79,78,79,78,79,78,79,79,78,79,79,79,78,78,78,78,78,78,79,78,79,78,79,78,78,78,78,78,78,78,79,78,79,78,78,79,79,78,79,78,79,78,79,78,79,78,79,78,79,78,78,79,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,39,95,39,95,39,39,95,95,95,39,95,39,95,39,95,39,95,95,95,95,95,39,95,95,39,39,39,39,95,39,95,39,95,39,95,95,39,39,39,95,39,39,39,95,39,95,39,95,39,95,39,95,39,95,39,95,39,39,95,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,97,97,97,97,97,97],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[1,[4,[[3,[2]]]],[6,[5]],7]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[9],[9],[9],[9],[9],[9],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[9],[9],[9],[[8,12],[[15,[[14,[13]]]]]],[[8,12],[[15,[16]]]],[[8,12],[[15,[17]]]],[[8,18],15],[[8,19,20],[[15,[[22,[21,20]]]]]],[[8,23],15],[[8,12],[[25,[24]]]],[[8,24,24,13]],[[26,27],28],[[]],[[]],[[]],[[8,12,29],[[25,[16]]]],[[8,29],30],[8,[[32,[18,31]]]],[[8,29,13],26],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[8,29,13]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],34],[[],34],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[[6,[35]]],[[6,[36,35]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[1,29,[25,[37]],[4,[[3,[2]]]],[4,[[3,[8]]]],[4,[[3,[38]]]],[4,[39]]],40],[[40,12,24]],[[40,12,[14,[13]],[14,[13]]],[[11,[41]]]],0,[[]],[[]],[[]],[[]],[[40,21]],0,[[40,17],[[11,[12,41]]]],0,0,0,0,0,0,0,[[40,12],[[11,[41]]]],[9],[9],[9],[9],[[],[[11,[10]]]],[[],[[11,[10]]]],[9],[9],[[40,42,31],43],[[40,43]],0,0,[[40,29]],0,[[]],[[]],[[40,12,24],[[14,[44]]]],[[40,12,29],[[45,[29,16]]]],[[40,12,13],[[45,[29,16]]]],[[40,12],[[25,[16]]]],[[40,12],[[25,[17]]]],[40,[[14,[12]]]],[40,[[11,[12,41]]]],[40,[[11,[16,41]]]],[40,[[11,[[14,[12]],41]]]],[[40,12],[[25,[[14,[13]]]]]],[[40,12],[[25,[[46,[[14,[13]]]]]]]],[40,47],[[40,12],31],[[40,12],31],[[],9],[[],9],[[40,23]],[[40,18,31,29]],[[]],[[]],[[],33],[[],33],[[40,23],31],[[40,18],31],0,0,0,[[1,[4,[[3,[2]]]],[4,[[3,[8]]]],[4,[[3,[38]]]],[4,[39]]],40],0,0,[[]],[[]],0,0,[[40,21]],0,[[1,29,24,[14,[48]],[4,[[3,[2]]]],[4,[[3,[8]]]],[4,[[3,[38]]]],[4,[39]]],40],[[40,47,41]],[[40,12,17],[[11,[41]]]],[[40,12,[14,[13]],[14,[13]]],[[11,[41]]]],[40,49],0,0,0,0,0,0,0,0,[[40,24],14],[[40,[25,[12]],[25,[12]],16,31],[[11,[41]]]],[[],11],[[],11],[[],11],[[],11],[[40,12,24],[[11,[41]]]],[[40,12,24],[[11,[16,41]]]],[[],34],[[],34],0,0,[[[6,[35]]],[[6,[36,35]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[],36],[[],36],[[40,12,29,[25,[37]]]],0,[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[50,[[6,[51]]]],[[]],[9],[9],[9],[9],[9],[9],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[9],[9],[9],[[50,52],[[11,[53,41]]]],0,0,[[54,27],28],[[]],[[]],[[]],[[]],[50,[[14,[55]]]],[[50,24],[[45,[12,24]]]],[[50,56],[[14,[43]]]],[[50,14],14],[50,14],[50],[50,57],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],[[],33],[[],33],[[],33],[1,54],0,[[]],[[]],[[]],0,[58],0,[54,54],0,[[]],[[],42],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],34],[[],34],[[],34],[[50,59,13],[[59,[18]]]],[[[6,[35]]],[[6,[36,35]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[],36],[[],36],[[50,[32,[29,37]],[25,[[32,[29,37]]]],[61,[37,60]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[62,49]],[[62,49]],[[]],[[]],0,0,[9],[9],[[],[[11,[10]]]],[9],[[62,21,[25,[17]]],[[11,[41]]]],[[62,63,12],[[11,[41]]]],[[62,29,25,[6,[5]]]],[[62,63,12],[[11,[41]]]],[[62,29,25,[6,[5]]]],[[62,64,29,24,16],[[11,[41]]]],[[62,52],[[11,[53,41]]]],[[62,63,12,29],[[11,[41]]]],[[62,63,12],[[11,[41]]]],[[62,29,25,[6,[5]]],49],[[62,63,12],[[11,[41]]]],0,0,0,0,0,[[]],[[62,12],[[14,[44]]]],[[62,12],[[45,[29,16]]]],[[62,24],[[45,[12,24]]]],[[62,56],[[14,[43]]]],[[62,12]],[[62,12]],[[62,12]],[[62,12]],[62],[62,57],[[],9],[[]],[[],33],0,0,[[1,[4,[[3,[2]]]],7],62],[[]],[[62,64,12],[[11,[47,41]]]],[[62,65,29,16],[[11,[41]]]],0,[[],11],[[],11],[[],34],[[62,59,13],[[59,[18]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[62,25,29]],0,[[]],0,0,0,[[66,67],[[68,[42]]]],[[]],[[]],[66,[[68,[31]]]],[66,66],[66,[[6,[69]]]],[[]],0,0,0,[66,[[68,[42]]]],[9],[9],[[],[[11,[10]]]],[9],[66,68],[[]],[[]],[[66,42],68],[66,[[68,[24]]]],[[66,67],[[68,[24]]]],[66,[[68,[24]]]],[66,[[68,[[14,[42]]]]]],[66,[[68,[24]]]],[66,[[68,[13]]]],[[66,25],[[68,[[46,[[14,[13]]]]]]]],[[66,67,25],[[68,[[46,[[14,[13]]]]]]]],[[66,24],[[68,[70]]]],[66,[[68,[[14,[13]]]]]],[66,[[68,[[14,[[14,[13]]]]]]]],[66,[[68,[[14,[42]]]]]],[66,[[68,[24]]]],[66,[[68,[31]]]],[[66,67],[[68,[31]]]],[66,[[68,[31]]]],[66,68],[66,68],[[],9],[[66,67,24],[[68,[[14,[13]]]]]],[[]],[[],33],[[1,[4,[[71,[40]]]]],66],[[]],[[66,67],68],[66,68],[[66,67],68],[66,68],[[66,67],68],[66,[[68,[[14,[13]]]]]],[[66,67],[[68,[[14,[13]]]]]],[66,[[68,[[14,[13]]]]]],[[66,67],[[68,[[14,[13]]]]]],[66,68],[[66,67],68],[66,68],[[66,67],68],[[66,67,67,24,24,24,25],68],[[66,67,67],[[68,[31]]]],[[]],[[66,67,24],68],[[66,67,67,24],68],[[],11],[[],11],[[],34],[66,[[68,[72]]]],[66,[[68,[73]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[66,67],[[68,[31]]]],[[]],0,0,[[]],[[]],[[]],[[]],[[74,41]],[[75,41]],[75,9],[9],[9],[9],[9],[[],[[11,[10]]]],[[],[[11,[10]]]],[9],[9],[[75,75]],[[[74,[76,76]],27],28],[[[75,[76,76]],27],28],[[]],[[]],[[],9],[[],9],[[]],[[]],[[],33],[[],33],[74],[75,31],[75,31],0,[[[77,[[11,[41]]]]],74],[9,75],[[]],[[]],[75,[[25,[74]]]],[[75,74]],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],34],[[],34],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[78],[79,79],[[]],0,0,0,[9],[9],[9],[9],[[],[[11,[10]]]],[[],[[11,[10]]]],[9],[9],[[79,27],28],[[]],[[]],[[]],[79,[[25,[37]]]],[78,80],[[78,29],[[25,[79]]]],[[78,29],[[25,[9]]]],[78,29],[[78,[32,[29,37]],[32,[29,37]],[61,[37,60]]]],[[],9],[[],9],[[]],[[]],[[],33],[[],33],[78,31],0,0,0,0,[[1,29],78],[[]],[[]],[78,25],0,0,[[29,[25,[79]],31,[25,[37]],31,[25,[37]],61,31]],0,[[]],[[],11],[[],11],[[],11],[[],11],[[],34],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[],36],[[],36],[[78,[32,[29,37]],[25,[[32,[29,37]]]],[61,[37,60]]]],[[]],[[]],0,0,[[]],[[]],[9],[9],[[],[[11,[10]]]],[9],[[81,[14,[19]],31],14],0,[[]],[81,82],[[],9],[[]],[[],33],[[83,84],31],0,[[[4,[[3,[2]]]],[4,[[3,[8]]]]],81],[[]],0,[[81,21]],[[81,82]],[[81,29,84],14],[81,82],[[81,29,24],14],[[],11],[[],11],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[]],0,0,[[]],[[]],[9],[9],[[],[[11,[10]]]],[9],0,0,[[]],[85,86],[[],9],[[85,23]],[[]],[[],33],[[85,23],31],[[[4,[[3,[2]]]],[4,[[3,[8]]]]],85],[[]],[[85,86]],[85,86],[[],11],[[],11],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[]],0,0,[[]],[[]],[9],[9],[[],[[11,[10]]]],[9],0,0,[[]],[87,88],[[],9],[[87,18,31,29]],[[]],[[],33],[[87,18],31],[[[4,[[3,[2]]]],[4,[[3,[8]]]]],87],[[]],[[87,88]],[87,88],[[],11],[[],11],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[]],0,0,0,0,0,0,0,[[]],[[]],[[89,12,12,17],[[11,[41]]]],[[89,12,12],[[11,[41]]]],[9],[9],[[],[[11,[10]]]],[9],[[89,12],31],0,[[]],[[89,12],[[25,[16]]]],[[89,12],[[25,[17]]]],[[89,12],[[25,[[14,[13]]]]]],[[89,12],[[25,[[46,[[14,[13]]]]]]]],[89,84],[[89,14],[[11,[16,41]]]],[[89,12],31],[[],9],[[]],[[],33],0,0,0,[[[4,[[3,[2]]]],[4,[[3,[8]]]],13,24,24,90],89],[[]],[[89,84]],[[89,12,12,17],[[11,[41]]]],[[89,12,12,[14,[13]],[14,[13]]],[[11,[41]]]],0,[89,84],[[89,[25,[12]],[25,[12]],16],[[11,[41]]]],[[],11],[[],11],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[]],0,0,[[91,12,24]],0,[[]],[[]],[9],[9],[[],[[11,[10]]]],[9],0,[[]],[[91,12,24,29],[[14,[44]]]],[[91,12,29],[[25,[16]]]],[[91,12,29],[[45,[29,16]]]],[[91,24,24,13,29]],[[91,12],24],[91,92],[[],9],[[]],[[],33],[[[4,[[3,[2]]]],[4,[[3,[8]]]]],91],[[]],[[91,92]],[[91,29,24,13,16,[93,[24]]]],[91,92],[[91,29],30],[[],11],[[],11],[[91,12,29,24,24,13,16],[[11,[41]]]],[[91,29,12,16],16],[[91,12,24],[[11,[24,41]]]],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[91,12,29,[25,[37]]]],[[]],0,[[]],[[]],[9],[9],[[],[[11,[10]]]],[9],0,0,[[]],[[94,29],57],[[],9],[[]],[[],33],[80,94],[[]],[[94,80]],[[94,9]],[[94,9]],0,[[],11],[[],11],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[]],0,0,[[]],[[]],[[]],[[]],[[39,12,29,24],[[11,[41]]]],[[39,40,12,16],[[11,[41]]]],[95,95],[[]],[[],95],[9],[9],[9],[9],[[],[[11,[10]]]],[[],[[11,[10]]]],[9],[9],[[95,95],31],[[],31],[[],31],[[95,27],28],[[]],[[]],[[]],0,[[39,12,29],95],[[39,12,80],95],[[],9],[[],9],[[]],[[]],[[],33],[[],33],[96,[[11,[[61,[12,14]],41]]]],0,0,[[13,80,80,24,16,96],[[11,[39,41]]]],0,[[]],[[]],0,0,0,[[]],[[],11],[[],11],[[],11],[[],11],[[],34],[[],34],[[[6,[35]]],[[6,[36,35]]]],[[[6,[35]]],[[6,[36,35]]]],[[],36],[[],36],[[],36],[[],36],0,[[]],[[]],0,0,0,[[]],[[]],[9],[9],[[],[[11,[10]]]],[9],[97,31],0,[[]],[[],9],0,[[]],[[],33],[97],[[1,4,[4,[[3,[62]]]],[6,[5]]],97],[[]],0,0,0,[[1,[4,[[3,[2]]]],[6,[5]],7]],[[],11],[[],11],[[],34],[[97,[75,[52,53]]]],[[]],[97]],"p":[[3,"ExecutionConfig"],[3,"FinalState"],[6,"RwLock"],[3,"Arc"],[8,"SelectorController"],[3,"Box"],[3,"MipStore"],[3,"ActiveHistory"],[15,"usize"],[3,"With"],[4,"Result"],[4,"Address"],[15,"u8"],[3,"Vec"],[4,"HistorySearchResult"],[3,"Amount"],[3,"Bytecode"],[3,"OperationId"],[6,"AsyncMessageId"],[3,"AsyncMessageUpdate"],[3,"AsyncMessage"],[4,"SetUpdateOrDelete"],[4,"DenunciationIndex"],[15,"u64"],[4,"Option"],[4,"SlotIndexPosition"],[3,"Formatter"],[6,"Result"],[3,"Slot"],[3,"DeferredCredits"],[15,"bool"],[3,"HashMap"],[3,"Request"],[3,"TypeId"],[3,"Global"],[8,"Any"],[3,"BlockId"],[3,"ModuleCache"],[3,"VestingManager"],[3,"ExecutionContext"],[4,"ExecutionError"],[3,"String"],[3,"SCOutputEvent"],[3,"ExecutionAddressCycleInfo"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"ExecutionContextSnapshot"],[3,"ExecutionStackElement"],[3,"ExecutionOutput"],[3,"ExecutionControllerImpl"],[8,"ExecutionController"],[3,"ReadOnlyExecutionRequest"],[3,"ReadOnlyExecutionOutput"],[3,"ExecutionInputData"],[3,"ExecutionAddressInfo"],[3,"EventFilter"],[3,"ExecutionStats"],[3,"ExecutionManagerImpl"],[6,"PreHashSet"],[3,"Storage"],[6,"PreHashMap"],[3,"ExecutionState"],[4,"OperationType"],[6,"SecureShareOperation"],[4,"Denunciation"],[3,"InterfaceImpl"],[15,"str"],[6,"Result"],[8,"Interface"],[4,"RuntimeModule"],[6,"Mutex"],[15,"i64"],[15,"f64"],[3,"RequestWithResponseSender"],[3,"RequestQueue"],[8,"Debug"],[3,"Sender"],[3,"SlotSequencer"],[3,"SlotInfo"],[3,"MassaTime"],[3,"SpeculativeAsyncPool"],[3,"AsyncPoolChanges"],[3,"AsyncMessageTrigger"],[3,"LedgerChanges"],[3,"SpeculativeExecutedDenunciations"],[6,"ExecutedDenunciationsChanges"],[3,"SpeculativeExecutedOps"],[6,"ExecutedOpsChanges"],[3,"SpeculativeLedger"],[3,"StorageCostsConstants"],[3,"SpeculativeRollState"],[3,"PoSChanges"],[3,"Ratio"],[3,"ExecutionStatsCounter"],[3,"VestingInfo"],[3,"PathBuf"],[3,"ExecutionThread"]]},\
"massa_factory_exports":{"doc":"Definition and exports of the PoS types and errors.","t":"DDEIGNGAMAMAMMMMMMMMMMKMMMADLLLLMLLLLLLLMLMLLMMMMMLMMLLLLLLLLIKIEGNIRKKLLLLLLLLLLLLLLLLLLLLLLDGLLLLMLLLLLLLLLLMMMMLLLLLLLL","n":["FactoryChannels","FactoryConfig","FactoryError","FactoryManager","FactoryResult","GenericError","ProductionHistory","config","consensus","controller_traits","denunciation_expire_periods","error","genesis_timestamp","initial_delay","last_start_period","max_block_gas","max_block_size","max_operations_per_block","periods_per_cycle","pool","protocol","selector","stop","storage","t0","thread_count","types","FactoryConfig","borrow","borrow_mut","clone","clone_into","denunciation_expire_periods","deref","deref_mut","deserialize","drop","fmt","from","from_ref","genesis_timestamp","init","initial_delay","into","into_request","last_start_period","max_block_gas","max_block_size","max_operations_per_block","periods_per_cycle","pointer_metadata","t0","thread_count","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","FactoryManager","stop","DisplayToDisplayDoc","FactoryError","FactoryResult","GenericError","PathToDisplayDoc","_DERIVE_Display_FOR_FactoryError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","fmt","from","init","into","into_request","pointer_metadata","provide","to_string","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","FactoryChannels","ProductionHistory","borrow","borrow_mut","clone","clone_into","consensus","deref","deref_mut","deserialize","drop","from","from_ref","init","into","into_request","pointer_metadata","pool","protocol","selector","storage","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip"],"q":["massa_factory_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_factory_exports::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_factory_exports::controller_traits","","massa_factory_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_factory_exports::types","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["List of channels the factory will send commands to","Structure defining the settings of the factory","factory error","Factory manager used to stop the factory thread","factory result","Generic error: {0}","History of block production from latest to oldest todo: …","Copyright (c) 2022 MASSA LABS info@massa.net This file …","consensus controller","Copyright (c) 2022 MASSA LABS info@massa.net This module …","denunciation expiration as periods","","genesis timestamp","initial delay before starting production, to avoid …","last start period, to deduce genesis blocks","maximal block gas","maximal block size in bytes","maximum number of operation ids in block","cycle duration in periods","pool controller","protocol controller","selector controller to get draws","Stop the factory thread Note that we do not take self by …","storage instance","period duration","number of threads","","Structure defining the settings of the factory","","","","","denunciation expiration as periods","","","","","","Returns the argument unchanged.","","genesis timestamp","","initial delay before starting production, to avoid …","Calls <code>U::from(self)</code>.","","last start period, to deduce genesis blocks","maximal block gas","maximal block size in bytes","maximum number of operation ids in block","cycle duration in periods","","period duration","number of threads","","","","","","","","","Factory manager used to stop the factory thread","Stop the factory thread Note that we do not take self by …","","factory error","factory result","Generic error: {0}","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","List of channels the factory will send commands to","History of block production from latest to oldest todo: …","","","","","consensus controller","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","pool controller","protocol controller","selector controller to get draws","storage instance","","","","","","","",""],"i":[0,0,0,0,0,13,0,0,16,0,1,0,1,1,1,1,1,1,1,16,16,16,17,16,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,17,0,0,0,13,0,0,18,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,[[]],[[]],[1,1],[[]],0,[2],[2],[[],[[4,[3]]]],[2],[[1,5],6],[[]],[[]],0,[[],2],0,[[]],[[],7],0,0,0,0,0,[[]],0,0,[[]],[[],4],[[],4],[[],8],[[[10,[9]]],[[10,[11,9]]]],[[],11],[[],11],[[]],0,[[]],0,0,0,0,0,0,[[]],[[],12],[[]],[[]],[2],[2],[[],[[4,[3]]]],[2],[[13,5],6],[[13,5],6],[[]],[[],2],[[]],[[],7],[[]],[14],[[],15],[[],4],[[],4],[[],8],[[[10,[9]]],[[10,[11,9]]]],[[],11],[[],11],[[]],0,0,[[]],[[]],[16,16],[[]],0,[2],[2],[[],[[4,[3]]]],[2],[[]],[[]],[[],2],[[]],[[],7],[[]],0,0,0,0,[[]],[[],4],[[],4],[[],8],[[[10,[9]]],[[10,[11,9]]]],[[],11],[[],11],[[]]],"p":[[3,"FactoryConfig"],[15,"usize"],[3,"With"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Display"],[4,"FactoryError"],[3,"Demand"],[3,"String"],[3,"FactoryChannels"],[8,"FactoryManager"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_factory_worker":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net","t":"AAAAFDHHHHHHHHHHLLMMLLLLMLLLLLLLLLLLLLLMHHHDHHHLLMMLLLLMMLLMLLLLLLLLLLLLMHHHHDHHHHMLLLLLLMLLLLLLLLLLF","n":["block_factory","endorsement_factory","manager","run","start_factory","BlockFactoryWorker","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","borrow","borrow_mut","cfg","channels","deref","deref_mut","deserialize","drop","factory_receiver","from","get_next_slot","init","interruptible_wait_until","into","into_request","pointer_metadata","process_slot","run","spawn","try_from","try_into","type_id","vzip","wallet","CALLSITE","CALLSITE","CALLSITE","EndorsementFactoryWorker","META","META","META","borrow","borrow_mut","cfg","channels","deref","deref_mut","deserialize","drop","endorsement_serializer","factory_receiver","from","get_next_slot","half_t0","init","interruptible_wait_until","into","into_request","pointer_metadata","process_slot","run","spawn","try_from","try_into","type_id","vzip","wallet","CALLSITE","CALLSITE","CALLSITE","CALLSITE","FactoryManagerImpl","META","META","META","META","block_worker","borrow","borrow_mut","deref","deref_mut","deserialize","drop","endorsement_worker","from","init","into","into_request","pointer_metadata","stop","try_from","try_into","type_id","vzip","start_factory"],"q":["massa_factory_worker","","","","","massa_factory_worker::block_factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_factory_worker::endorsement_factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_factory_worker::manager","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_factory_worker::run"],"d":["Copyright (c) 2022 MASSA LABS info@massa.net","","This module implements a factory manager. See …","Copyright (c) 2022 MASSA LABS info@massa.net","Start factory","Structure gathering all elements needed by the factory …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Gets the next slot and the instant when it will happen. …","","Wait and interrupt or wait until an instant or a stop …","Calls <code>U::from(self)</code>.","","","Process a slot: produce a block at that slot if one of the …","main run loop of the block creator thread","Creates the <code>FactoryThread</code> structure to gather all data and …","","","","","","","","","Structure gathering all elements needed by the factory …","","","","","","","","","","","","","","Returns the argument unchanged.","Gets the next slot and the instant when the corresponding …","","","Wait and interrupt or wait until an instant or a stop …","Calls <code>U::from(self)</code>.","","","Process a slot: produce an endorsement at that slot if one …","main run loop of the endorsement creator thread","Creates the <code>FactoryThread</code> structure to gather all data and …","","","","","","","","","","Implementation of the factory manager Allows stopping the …","","","","","block worker message sender and join handle","","","","","","","endorsement worker message sender and join handle","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","stops the worker","","","","","Start factory"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0],"f":[0,0,0,0,[[1,[4,[[3,[2]]]],5],[[7,[6]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[8],[8],[[],[[10,[9]]]],[8],0,[[]],[[11,[13,[12]]]],[[],8],[[11,14],15],[[]],[[],16],[[]],[[11,12]],[11],[[1,[4,[[3,[2]]]],5,17],18],[[],10],[[],10],[[],19],[[]],0,0,0,0,0,0,0,0,[[]],[[]],0,0,[8],[8],[[],[[10,[9]]]],[8],0,0,[[]],[[20,[13,[12]]]],0,[[],8],[[20,14],15],[[]],[[],16],[[]],[[20,12]],[20],[[1,[4,[[3,[2]]]],5,17],18],[[],10],[[],10],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[8],[8],[[],[[10,[9]]]],[8],0,[[]],[[],8],[[]],[[],16],[[]],[21],[[],10],[[],10],[[],19],[[]],[[1,[4,[[3,[2]]]],5],[[7,[6]]]]],"p":[[3,"FactoryConfig"],[3,"Wallet"],[6,"RwLock"],[3,"Arc"],[3,"FactoryChannels"],[8,"FactoryManager"],[3,"Box"],[15,"usize"],[3,"With"],[4,"Result"],[3,"BlockFactoryWorker"],[3,"Slot"],[4,"Option"],[3,"Instant"],[15,"bool"],[3,"Request"],[3,"Receiver"],[3,"JoinHandle"],[3,"TypeId"],[3,"EndorsementFactoryWorker"],[3,"FactoryManagerImpl"]]},\
"massa_final_state":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net","t":"DDENNNNDDDMMMMMMAMMMMAMMMMMMMAMMMMMMMMMMMMMMMMMMMMMAMDMLLLLMMMMLLLMMLLMMMMMMLLLLLIENNINNRKKLLLLLLLLLLLLLHHHHHHHHHHRDDDDHHHHHHHHHHMMMMLLLLLLLLMLLMMMMLMMMLMMMMLMMLLLLLLMLLLLLLLLLLLLMMMLLLLMMMLMLMMMMMLLLLLLLLLLLLLLLLRDDDEDDNNNNNNLMMMLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FinalState","FinalStateConfig","FinalStateError","InvalidSlot","LedgerError","PosError","SnapshotError","StateChanges","StateChangesDeserializer","StateChangesSerializer","async_pool","async_pool_changes","async_pool_changes_deserializer","async_pool_changes_serializer","async_pool_config","changes_history","config","config","de_changes_deserializer","de_changes_serializer","endorsement_count","error","executed_denunciations","executed_denunciations_changes","executed_denunciations_config","executed_ops","executed_ops_changes","executed_ops_config","final_history_length","final_state","final_state_hash","initial_rolls_path","initial_seed_string","last_start_period","ledger","ledger_changes","ledger_changes_deserializer","ledger_changes_serializer","ledger_config","max_denunciations_per_block_header","max_executed_denunciations_length","ops_changes_deserializer","ops_changes_serializer","periods_per_cycle","pos_changes","pos_changes_deserializer","pos_changes_serializer","pos_config","pos_state","rocks_db","slot","state_changes","thread_count","FinalStateConfig","async_pool_config","borrow","borrow_mut","clone","clone_into","endorsement_count","executed_denunciations_config","executed_ops_config","final_history_length","fmt","from","from_ref","initial_rolls_path","initial_seed_string","into","into_request","ledger_config","max_denunciations_per_block_header","max_executed_denunciations_length","periods_per_cycle","pos_config","thread_count","to_owned","try_from","try_into","type_id","vzip","DisplayToDisplayDoc","FinalStateError","InvalidSlot","LedgerError","PathToDisplayDoc","PosError","SnapshotError","_DERIVE_Display_FOR_FinalStateError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","fmt","fmt","from","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","FINAL_STATE_HASH_INITIAL_BYTES","FinalState","FinalStateRaw","FinalStateRawDeserializer","FinalStateRawSerializer","META","META","META","META","META","META","META","META","META","META","async_deser","async_pool","async_pool_messages","async_pool_serializer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes_history","compute_initial_draws","compute_state_hash_at_slot","config","cycle_history","cycle_history_deser","cycle_history_serializer","default","deferred_credits","deferred_credits_deser","deferred_credits_serializer","deserialize","executed_denunciations","executed_ops","executed_ops_deser","executed_ops_serializer","feed_cycle_hash_and_selector_for_interpolation","final_state_hash","final_state_hash_from_snapshot","finalize","from","from","from","from","get_state_changes_part","hash_deser","init_ledger_hash","interpolate_downtime","interpolate_multiple_cycles","interpolate_single_cycle","into","into","into","into","into_request","into_request","into_request","into_request","last_start_period","latest_consistent_slot","ledger","new","new","new","new_derived_from_snapshot","pos_state","processed_denunciations_deser","processed_denunciations_serializer","reset","rocks_db","serialize","slot","slot_deser","slot_serializer","sorted_denunciations","sorted_ops","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FIELDS","StateChanges","StateChangesDeserializer","StateChangesSerializer","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__ignore","apply","async_pool_changes","async_pool_changes_deserializer","async_pool_changes_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","de_changes_deserializer","de_changes_serializer","default","default","deserialize","deserialize","deserialize","executed_denunciations_changes","executed_ops_changes","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","ledger_changes","ledger_changes_deserializer","ledger_changes_serializer","lifetime","marker","new","new","ops_changes_deserializer","ops_changes_serializer","pos_changes","pos_changes_deserializer","pos_changes_serializer","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["massa_final_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_final_state::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_final_state::error","","","","","","","","","","","","","","","","","","","","","","","massa_final_state::final_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_final_state::state_changes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a final state …","Ledger configuration","Final state error","invalid slot: {0}","ledger error: {0}","PoS error: {0}","Snapshot error: {0}","represents changes that can be applied to the execution …","Basic <code>StateChanges</code> deserializer","Basic <code>StateChanges</code> serializer.","asynchronous pool containing messages sorted by priority …","asynchronous pool changes","","","asynchronous pool configuration","history of recent final state changes, useful for …","Copyright (c) 2022 MASSA LABS info@massa.net This file …","execution state configuration","","","endorsement count","Copyright (c) 2022 MASSA LABS info@massa.net This file …","executed denunciations","executed denunciations changes","executed denunciations configuration","executed operations","executed operations changes","executed operations configuration","final changes history length","Copyright (c) 2022 MASSA LABS info@massa.net This file …","hash of the final state, it is computed on finality","initial rolls file path","initial PoS seed string","last_start_period","final ledger associating addresses to their balance, …","ledger changes","","","ledger configuration","max number of denunciations that can be included in a …","max number of denunciation index in processed …","","","periods per cycle","roll state changes","","","proof-of-stake configuration","proof of stake state containing cycle history and deferred …","the rocksdb instance used to write every final_state …","slot at the output of which the state is attached","Copyright (c) 2022 MASSA LABS info@massa.net This file …","thread count","Ledger configuration","asynchronous pool configuration","","","","","endorsement count","executed denunciations configuration","executed operations configuration","final changes history length","","Returns the argument unchanged.","","initial rolls file path","initial PoS seed string","Calls <code>U::from(self)</code>.","","ledger configuration","max number of denunciations that can be included in a …","max number of denunciation index in processed …","periods per cycle","proof-of-stake configuration","thread count","","","","","","","Final state error","invalid slot: {0}","ledger error: {0}","","PoS error: {0}","Snapshot error: {0}","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Represents a final state …","","Deserializer for <code>FinalStateRaw</code>","Serializer for <code>FinalStateRaw</code>","","","","","","","","","","","","asynchronous pool containing messages sorted by priority …","","","","","","","","","","","history of recent final state changes, useful for …","Performs the initial draws.","Compute the current state hash.","execution state configuration","","","","","","","","","executed denunciations","executed operations","","","Used during interpolation, when a new cycle is set as …","hash of the final state, it is computed on finality","","Applies changes to the execution state at a given slot, …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Used for bootstrap.","","Used after bootstrap, to set the initial ledger hash (used …","Once we created a FinalState from a snapshot, we need to …","This helper function is to be called if the downtime spans …","This helper function is to be called if the downtime does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","last_start_period","","final ledger associating addresses to their balance, …","Initializes a new <code>FinalState</code>","Initialize a <code>FinalStateRaweSerializer</code>","Initialize a <code>FinalStateRawDeserializer</code>","Initializes a <code>FinalState</code> from a snapshot. Currently, we do …","proof of stake state containing cycle history and deferred …","","","Reset the final state to the initial state.","the rocksdb instance used to write every final_state …","","slot at the output of which the state is attached","","","","","","","","","","","","","","","","","","","","","","represents changes that can be applied to the execution …","Basic <code>StateChanges</code> deserializer","Basic <code>StateChanges</code> serializer.","","","","","","","","","","extends the current <code>StateChanges</code> with another one","asynchronous pool changes","","","","","","","","","","","","","","","","","","","","","Example","","","executed denunciations changes","executed operations changes","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","ledger changes","","","","","Creates a <code>StateChangesSerializer</code>","Creates a <code>StateChangesDeserializer</code>","","","roll state changes","","","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,8,8,8,8,0,0,0,11,20,35,34,1,11,0,11,35,34,1,0,11,20,1,11,20,1,1,0,11,1,1,11,11,20,35,34,1,1,1,35,34,1,20,35,34,1,11,11,11,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,8,8,0,8,8,0,41,42,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,11,15,13,11,13,15,14,11,13,15,14,11,11,11,11,15,14,13,13,15,14,13,14,11,11,14,13,11,11,15,11,11,13,15,14,11,14,11,11,11,11,11,13,15,14,11,13,15,14,11,15,11,11,13,14,11,11,14,13,11,11,13,11,14,13,15,15,11,13,15,14,11,13,15,14,11,13,15,14,11,13,15,14,0,0,0,0,0,0,0,36,36,36,36,36,36,20,20,35,34,34,35,20,36,37,38,34,35,20,36,37,38,20,20,35,34,34,20,35,20,36,20,20,37,38,20,37,38,34,35,20,36,37,38,20,34,35,20,36,37,38,34,35,20,36,37,38,20,35,34,38,38,34,35,35,34,20,35,34,34,20,20,34,35,20,36,37,38,34,35,20,36,37,38,34,35,20,36,37,38,37,38,38,37,37,34,35,20,36,37,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],0,0,0,0,[[1,2],3],[[]],[[]],0,0,[[]],[[],4],0,0,0,0,0,0,[[]],[[],5],[[],5],[[],6],[[]],0,0,0,0,0,0,0,0,[[]],[[],7],[[]],[[]],[[8,2],3],[[8,2],3],[[]],[[]],[[],4],[9],[[],10],[[],5],[[],5],[[],6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[11,[[5,[8]]]],[[11,12]],0,0,0,0,[[],13],0,0,0,[14,[[18,[15,[0,[16,17]]]]]],0,0,0,0,[[11,19],[[5,[8]]]],0,0,[[11,12,20]],[[]],[[]],[[]],[[]],[[11,12,[22,[21]],[22,[23]],[22,[19]],[22,[12]],[22,[12]],[22,[12]]],[[5,[24,8]]]],0,[[11,19]],[11,[[5,[8]]]],[[11,12,12,19,19],[[5,[8]]]],[[11,12,12],[[5,[8]]]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],0,0,0,[[[27,[[26,[25]]]],1,[29,[28]],[29,[30]]],[[5,[11,8]]]],[[],13],[[1,19,31,19,19,19,19,32],14],[[[27,[[26,[25]]]],1,[29,[28]],[29,[30]],19],[[5,[11,8]]]],0,0,0,[11],0,[[13,15,24],[[5,[33]]]],0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,20]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[[]],0,0,[[],34],[[],20],[35,[[18,[20,[0,[16,17]]]]]],[[],[[5,[20]]]],[[],[[5,[36]]]],0,0,[[37,2],3],[[38,2],3],[[20,2],3],[2,[[5,[39]]]],[2,[[5,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,[[],34],[[31,19,19,19,31,19,19,19,19,19,19,32,19],35],0,0,0,0,0,[[34,20,24],[[5,[33]]]],[20,5],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[37,5],[38,5],[38,5],[[37,40],5],[[37,19],5],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"FinalStateConfig"],[3,"Formatter"],[6,"Result"],[3,"Request"],[4,"Result"],[3,"TypeId"],[3,"Display"],[4,"FinalStateError"],[3,"Demand"],[3,"String"],[3,"FinalState"],[3,"Slot"],[3,"FinalStateRawSerializer"],[3,"FinalStateRawDeserializer"],[3,"FinalStateRaw"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[15,"u64"],[3,"StateChanges"],[3,"Key"],[4,"StreamingStep"],[6,"AsyncMessageId"],[3,"Vec"],[6,"DB"],[6,"RwLock"],[3,"Arc"],[8,"LedgerController"],[3,"Box"],[8,"SelectorController"],[15,"u8"],[15,"u32"],[4,"SerializeError"],[3,"StateChangesSerializer"],[3,"StateChangesDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[15,"str"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_grpc":{"doc":"<strong>Overview</strong>","t":"AAAAAARRFFFFFFFRDEDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLMMMMLLLLLLLLLLMMMMLLLLMMLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNINENNNNNINNNNRKKLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLWDDLLLLMMLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLMMMMLLLLLMMLLLLLLLLLLLLLMLLAAAAAAAAAWRGFWRGFWRGFWRGFWRGFFWWGFFWWGFFWWGFFWRRGF","n":["api","config","error","handler","server","stream","DEFAULT_LIMIT","DEFAULT_OFFSET","get_blocks_by_slots","get_datastore_entries","get_largest_stakers","get_next_block_best_parents","get_selector_draws","get_transactions_throughput","get_version","FIELDS","GrpcConfig","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field10","__field11","__field12","__field13","__field14","__field15","__field16","__field17","__field18","__field19","__field2","__field20","__field21","__field22","__field23","__field24","__field25","__field26","__field27","__field28","__field29","__field3","__field30","__field31","__field32","__field33","__field34","__field35","__field36","__field37","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","accept_compressed","accept_http1","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","concurrency_limit_per_connection","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","draw_lookahead_period_count","drop","drop","drop","drop","enable_cors","enable_reflection","enabled","endorsement_count","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from_ref","genesis_timestamp","http2_adaptive_window","http2_keepalive_interval","http2_keepalive_timeout","init","init","init","init","initial_connection_window_size","initial_stream_window_size","into","into","into","into","into_request","into_request","into_request","into_request","last_start_period","lifetime","marker","max_channel_size","max_concurrent_streams","max_datastore_value_length","max_decoding_message_size","max_denunciations_per_block_header","max_encoding_message_size","max_endorsements_per_message","max_frame_size","max_function_name_length","max_op_datastore_entry_count","max_op_datastore_key_length","max_op_datastore_value_length","max_operations_per_block","max_operations_per_message","max_parameter_size","periods_per_cycle","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","send_compressed","t0","tcp_keepalive","tcp_nodelay","thread_count","timeout","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","ConsensusError","DisplayToDisplayDoc","ExecutionError","GrpcError","InternalServerError","InvalidArgument","MassaHashError","ModelsError","NetworkError","PathToDisplayDoc","ProtocolError","ReflectionError","TimeError","WalletError","_DERIVE_Display_FOR_GrpcError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","into","into_request","match_for_io_error","pointer_metadata","provide","source","to_string","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","","MassaGrpc","StopHandle","borrow","borrow","borrow_mut","borrow_mut","consensus_channels","consensus_controller","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","execution_controller","from","from","get_blocks_by_slots","get_datastore_entries","get_largest_stakers","get_next_block_best_parents","get_selector_draws","get_transactions_throughput","get_version","grpc_config","init","init","into","into","into_request","into_request","new_blocks","new_blocks_headers","new_endorsements","new_filled_blocks","new_operations","pointer_metadata","pointer_metadata","pool_channels","pool_command_sender","protocol_command_sender","selector_controller","send_blocks","send_endorsements","send_operations","serve","stop","stop_cmd_sender","storage","transactions_throughput","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","version","vzip","vzip","new_blocks","new_blocks_headers","new_endorsements","new_filled_blocks","new_operations","send_blocks","send_endorsements","send_operations","tx_throughput","","BRANCHES","NewBlocksStreamType","new_blocks","","BRANCHES","NewBlocksHeadersStreamType","new_blocks_headers","","BRANCHES","NewEndorsementsStreamType","new_endorsements","","BRANCHES","NewFilledBlocksStreamType","new_filled_blocks","","BRANCHES","NewOperationsStreamType","new_operations","should_send","","","SendBlocksStreamType","report_error","send_blocks","","","SendEndorsementsStreamType","report_error","send_endorsements","","","SendOperationsStreamType","report_error","send_operations","","BRANCHES","DEFAULT_THROUGHPUT_INTERVAL","TransactionsThroughputStreamType","transactions_throughput"],"q":["massa_grpc","","","","","","massa_grpc::api","","","","","","","","","massa_grpc::configmassa_grpc::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_grpc::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_grpc::stream","","","","","","","","","massa_grpc::stream::new_blocks","","","","massa_grpc::stream::new_blocks_headers","","","","massa_grpc::stream::new_endorsements","","","","massa_grpc::stream::new_filled_blocks","","","","massa_grpc::stream::new_operations","","","","","massa_grpc::stream::send_blocks","","","","","massa_grpc::stream::send_endorsements","","","","","massa_grpc::stream::send_operations","","","","","massa_grpc::stream::tx_throughput","","","",""],"d":["business code for non stream methods","gRPC configuration","models error","gRPC API implementation","gRPC service initialization and serve","business code for stream methods","default limit","default offset","get blocks by slots","get multiple datastore entries","Get the largest stakers.","get next block best parents","","get transactions throughput","","","gRPC configuration. the gRPC configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","which compression encodings does the server accept for …","whether to accept HTTP/1.1 requests","bind for the Massa gRPC API","","","","","","","","","","","set the concurrency limit applied to on requests inbound …","","","","","","","","","","","","","","","when looking for next draw we want to look at max …","","","","","whether to enable CORS. Works only if <code>accept_http1</code> is true","whether to enable gRPC reflection","whether to enable gRPC","endorsement count","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","<code>genesis_timestamp</code>","sets whether to use an adaptive flow control. Defaults to …","set whether HTTP2 Ping frames are enabled on accepted …","sets a timeout for receiving an acknowledgement of the …","","","","","sets the max connection-level flow control for HTTP2. …","sets the SETTINGS_INITIAL_WINDOW_SIZE spec option for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","last_start_period of the network, used to deserialize …","","","limits the maximum size of streaming channel","sets the SETTINGS_MAX_CONCURRENT_STREAMS spec option for …","max datastore value length","limits the maximum size of a decoded message. Defaults to …","Max denunciations in block header","limits the maximum size of an encoded message. Defaults to …","max endorsements per message","sets the maximum frame size to use for HTTP2. If not set, …","max function name length","max op datastore entry","max datastore key length","max datastore value length","max operations per block","max operations per message in the network to avoid sending …","max parameter size","periods per cycle","","","","","which compression encodings might the server use for …","t0","set whether TCP keepalive messages are enabled on accepted …","set the value of <code>TCP_NODELAY</code> option for accepted …","thread count","set a timeout on for all request handlers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","consensus error: {0}","","execution error: {0}","Errors of the gRPC component.","Internal server error: {0}","Invalid argument error: {0}","<code>massa_hash</code> error: {0}","Models error: {0}","Network error: {0}","","Protocol error: {0}","Reflection error : {0}","Time error: {0}","Wallet error: {0}","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","returns the first IO error found","","","","","","","","","","","","","gRPC API content","Used to be able to stop the gRPC API","","","","","link(channels) to the consensus component","link(channels) to the consensus component","","","","","","","","","link to the execution component","Returns the argument unchanged.","Returns the argument unchanged.","","handler for get multiple datastore entries.","handler for get largest stakers.","handler for get_next_block_best_parents","handler for get selector draws","","handler for get version","gRPC configuration","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","handler for subscribe new blocks","handler for subscribe new blocks headers","handler for subscribe new operations stream","handler for subscribe new blocks with operations content","handler for subscribe new operations stream","","","link(channels) to the pool component","link to the pool component","link(channels) to the protocol component","link to the selector component","handler for send_blocks_stream","handler for send_endorsements","handler for send_operations","Start the gRPC API","stop the gRPC API gracefully","","link to the storage component","handler for transactions throughput","","","","","","","","","","","","","node version","","","stream new blocks","stream new blocks with operations content","stream new endorsements","stream new blocks headers","subscribe new operations","send_blocks streaming","send endorsements","send operations","subscribe tx througput","","","Type declaration for NewBlocks","Creates a new stream of new produced and received blocks","","","Type declaration for NewBlocksHeaders","Creates a new stream of new produced and received blocks …","","","Type declaration for NewEndorsements","Creates a new stream of new produced and received …","","","Type declaration for NewFilledBlocks","Creates a new stream of new produced and received filled …","","","Type declaration for NewOperations","Creates a new stream of new produced and received …","Return if the type of operation should be send to client","","","Type declaration for SendBlockStream","This function reports an error to the sender by sending a …","This function takes a streaming request of block messages, …","","","Type declaration for SendEndorsements","This function reports an error to the sender by sending a …","This function takes a streaming request of endorsements …","","","Type declaration for SendOperations","This function reports an error to the sender by sending a …","This function takes a streaming request of operations …","","","default throughput interval in seconds","Type declaration for TransactionsThroughput","The function returns a stream of transaction throughput …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,19,19,19,19,22,23,26,19,22,23,26,19,19,19,19,22,23,26,19,22,23,26,19,19,22,22,23,26,19,19,22,23,26,19,19,19,19,23,26,19,23,26,19,22,23,26,19,19,19,19,19,19,22,23,26,19,19,19,22,23,26,19,22,23,26,19,26,26,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,22,23,26,19,19,19,19,19,19,19,19,22,23,26,19,22,23,26,19,22,23,26,19,22,23,26,19,22,23,26,19,22,23,26,23,26,26,23,23,19,22,23,26,5,0,5,0,5,5,5,5,5,0,5,5,5,5,0,79,80,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,1,61,1,61,1,1,1,61,1,61,1,61,1,61,1,1,61,1,1,1,1,1,1,1,1,1,61,1,61,1,61,1,1,1,1,1,1,61,1,1,1,1,1,1,1,1,61,61,1,1,1,61,1,61,1,61,1,61,1,61,1,61,1,1,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,[[1,[3,[2]]],[[6,[4,5]]]],[[1,[3,[7]]],[[6,[8,5]]]],[[1,[3,[9]]],[[6,[10,5]]]],[[1,[3,[11]]],[[6,[12,5]]]],[[1,[3,[13]]],[[6,[14,5]]]],[[1,[3,[15]]],[[6,[16,5]]]],[[1,[3,[17]]],[[6,[18,5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[[]],0,[20],[20],[20],[20],[20],[20],[20],[20],[[],[[6,[21]]]],[[],[[6,[19]]]],[[],[[6,[22]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],0,[20],[20],[20],[20],0,0,0,0,[[23,24],25],[[26,24],25],[[19,24],25],[24,[[6,[27]]]],[24,[[6,[27]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],20],[[],20],[[],20],[[],20],0,0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[],28],[[],28],[[[30,[29]]],[[30,[31,29]]]],[[[30,[29]]],[[30,[31,29]]]],[[[30,[29]]],[[30,[31,29]]]],[[[30,[29]]],[[30,[31,29]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[23,6],[26,6],[26,6],[[23,32],6],[[23,33],6],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],34],[[]],[[]],[20],[20],[[],[[6,[21]]]],[20],[[5,24],25],[[5,24],25],[35,5],[36,5],[37,5],[38,5],[39,5],[40,5],[41,5],[[]],[42,5],[43,5],[[],20],[[]],[[],3],[44,[[46,[45]]]],[[]],[47],[5,[[46,[48]]]],[[],49],[[],6],[[],6],[[],28],[[[30,[29]]],[[30,[31,29]]]],[[],31],[[],31],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[20],[20],[20],[20],[[],[[6,[21]]]],[[],[[6,[21]]]],[20],[20],0,[[]],[[]],[[1,[3,[2]]],[[51,[[30,[50]]]]]],[[1,[3,[7]]],[[51,[[30,[50]]]]]],[[1,[3,[9]]],[[51,[[30,[50]]]]]],[[1,[3,[11]]],[[51,[[30,[50]]]]]],[[1,[3,[13]]],[[51,[[30,[50]]]]]],[[1,[3,[15]]],[[51,[[30,[50]]]]]],[[1,[3,[17]]],[[51,[[30,[50]]]]]],0,[[],20],[[],20],[[]],[[]],[[],3],[[],3],[[1,[3,[[53,[52]]]]],[[51,[[30,[50]]]]]],[[1,[3,[[53,[54]]]]],[[51,[[30,[50]]]]]],[[1,[3,[[53,[55]]]]],[[51,[[30,[50]]]]]],[[1,[3,[[53,[56]]]]],[[51,[[30,[50]]]]]],[[1,[3,[[53,[57]]]]],[[51,[[30,[50]]]]]],[[]],[[]],0,0,0,0,[[1,[3,[[53,[58]]]]],[[51,[[30,[50]]]]]],[[1,[3,[[53,[59]]]]],[[51,[[30,[50]]]]]],[[1,[3,[[53,[60]]]]],[[51,[[30,[50]]]]]],[[1,19],[[6,[61,5]]]],[61],0,0,[[1,[3,[[53,[62]]]]],[[51,[[30,[50]]]]]],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[[30,[29]]],[[30,[31,29]]]],[[[30,[29]]],[[30,[31,29]]]],[[],31],[[],31],[[],31],[[],31],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[[53,[52]]]]],[[6,[63,5]]]],0,0,0,[[1,[3,[[53,[54]]]]],[[6,[64,5]]]],0,0,0,[[1,[3,[[53,[55]]]]],[[6,[65,5]]]],0,0,0,[[1,[3,[[53,[56]]]]],[[6,[66,5]]]],0,0,0,[[1,[3,[[53,[57]]]]],[[6,[67,5]]]],[[46,68],69],0,0,0,[[49,[71,[[6,[70,44]]]],72,49]],[[1,[3,[[53,[58]]]]],[[6,[73,5]]]],0,0,0,[[49,[71,[[6,[74,44]]]],72,49]],[[1,[3,[[53,[59]]]]],[[6,[75,5]]]],0,0,0,[[49,[71,[[6,[76,44]]]],72,49]],[[1,[3,[[53,[60]]]]],[[6,[77,5]]]],0,0,0,0,[[1,[3,[[53,[62]]]]],[[6,[78,5]]]]],"p":[[3,"MassaGrpc"],[3,"GetBlocksBySlotsRequest"],[3,"Request"],[3,"GetBlocksBySlotsResponse"],[4,"GrpcError"],[4,"Result"],[3,"GetDatastoreEntriesRequest"],[3,"GetDatastoreEntriesResponse"],[3,"GetLargestStakersRequest"],[3,"GetLargestStakersResponse"],[3,"GetNextBlockBestParentsRequest"],[3,"GetNextBlockBestParentsResponse"],[3,"GetSelectorDrawsRequest"],[3,"GetSelectorDrawsResponse"],[3,"GetTransactionsThroughputRequest"],[3,"GetTransactionsThroughputResponse"],[3,"GetVersionRequest"],[3,"GetVersionResponse"],[3,"GrpcConfig"],[15,"usize"],[3,"With"],[4,"__Field"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"Error"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[15,"str"],[15,"u64"],[3,"Display"],[4,"ConsensusError"],[4,"NetworkError"],[4,"TimeError"],[4,"ProtocolError"],[4,"Error"],[4,"MassaHashError"],[4,"WalletError"],[4,"ExecutionError"],[4,"ModelsError"],[3,"Status"],[3,"Error"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"String"],[8,"Future"],[3,"Pin"],[3,"NewBlocksRequest"],[3,"Streaming"],[3,"NewBlocksHeadersRequest"],[3,"NewEndorsementsRequest"],[3,"NewFilledBlocksRequest"],[3,"NewOperationsRequest"],[3,"SendBlocksRequest"],[3,"SendEndorsementsRequest"],[3,"SendOperationsRequest"],[3,"StopHandle"],[3,"TransactionsThroughputRequest"],[6,"NewBlocksStreamType"],[6,"NewBlocksHeadersStreamType"],[6,"NewEndorsementsStreamType"],[6,"NewFilledBlocksStreamType"],[6,"NewOperationsStreamType"],[4,"OpType"],[15,"bool"],[3,"SendBlocksResponse"],[3,"Sender"],[4,"Code"],[6,"SendBlocksStreamType"],[3,"SendEndorsementsResponse"],[6,"SendEndorsementsStreamType"],[3,"SendOperationsResponse"],[6,"SendOperationsStreamType"],[6,"TransactionsThroughputStreamType"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_hash":{"doc":"Hash management crate","t":"RDDDENNAAAIENINRKKLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLR","n":["HASH_SIZE_BYTES","Hash","HashDeserializer","HashSerializer","MassaHashError","ParsingError","WrongPrefix","error","hash","settings","DisplayToDisplayDoc","MassaHashError","ParsingError","PathToDisplayDoc","WrongPrefix","_DERIVE_Display_FOR_MassaHashError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","provide","to_owned","to_string","try_from","try_into","type_id","Base58CheckVisitor","BytesVisitor","Hash","HashDeserializer","HashSerializer","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compute_from","default","default","deserialize","deserialize","eq","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bs58_check","from_bytes","from_str","hash","into","into","into","into","into","into_bytes","new","new","partial_cmp","serialize","serialize","to_bs58_check","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_str","HASH_SIZE_BYTES"],"q":["massa_hash","","","","","","","","","","massa_hash::error","","","","","","","","","","","","","","","","","","","","","","massa_hash::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_hash::settings"],"d":["Hash size","Hash wrapper, the underlying hash type is <code>Blake3</code>","Deserializer for <code>Hash</code>","Serializer for <code>Hash</code>","Error generated by massa-hash crate","parsing error : {0}","Wrong prefix for hash: expected {0}, got {1}","","","","","Error generated by massa-hash crate","parsing error : {0}","","Wrong prefix for hash: expected {0}, got {1}","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Hash wrapper, the underlying hash type is <code>Blake3</code>","Deserializer for <code>Hash</code>","Serializer for <code>Hash</code>","","","","","","","","","","","","","","","","","","Compute a hash from data.","","","<code>::serde::Deserialize</code> trait for Hash if the deserializer is …","Example","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize using <code>bs58</code> encoding with checksum.","Deserialize a Hash as bytes.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into bytes.","Creates a serializer for <code>Hash</code>","Creates a deserializer for <code>Hash</code>","","<code>::serde::Serialize</code> trait for Hash if the serializer is …","","Serialize a Hash using <code>bs58</code> encoding with checksum.","Serialize a Hash as bytes.","","","","","","","","","","","","","","","","","","","","","","Hash size"],"i":[0,0,0,0,0,2,2,0,0,0,0,0,2,0,2,0,26,27,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,9,9,18,19,9,12,10,18,19,9,12,10,9,10,9,10,9,9,12,10,9,10,9,18,19,18,19,9,9,18,19,9,12,10,9,9,9,9,18,19,9,12,10,9,12,10,9,9,12,9,9,9,10,9,18,19,9,12,10,18,19,9,12,10,18,19,9,12,10,18,19,18,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],1],[[]],[[]],[2,2],[[]],[[2,3],4],[[2,3],4],[[]],[[]],[5],[[]],[[],6],[[],7],[[],7],[[],8],0,0,0,0,0,[[9,9],9],[[9,9]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[10,10],[[]],[[]],[[9,9],11],[[],9],[[],12],[[],10],[13,[[7,[9]]]],[10,[[16,[9,[0,[14,15]]]]]],[[9,9],17],[[18,3],4],[[19,3],4],[3,[[7,[20]]]],[3,[[7,[20]]]],[[9,3],4],[[9,3],4],[[]],[[]],[[]],[[]],[[]],[21,[[7,[9,2]]]],[[],9],[21,[[7,[9]]]],[9],[[]],[[]],[[]],[[]],[[]],[9],[[],12],[[],10],[[9,9],[[22,[11]]]],[[9,23],7],[[12,9,24],[[7,[25]]]],[9,6],[9],[[]],[[]],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[18,7],[19,7],[[18,21],7],0],"p":[[3,"Display"],[4,"MassaHashError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Hash"],[3,"HashDeserializer"],[4,"Ordering"],[3,"HashSerializer"],[8,"Deserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[15,"bool"],[3,"Base58CheckVisitor"],[3,"BytesVisitor"],[3,"Error"],[15,"str"],[4,"Option"],[8,"Serializer"],[3,"Vec"],[4,"SerializeError"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_ledger_exports":{"doc":"General description","t":"INRNRNNRDDNNNNDDDEDDDDIDDDDDDENNNNEEDDEDDNMMMMMMMMKKKKMMMMMMMMMAAMMMMFMMMMKMAKKKKKKKMMMMMMMAMMMMAAMMKMMMMMMMMMKKKMAMMMMMMMDLLLLMLLLMLLMMMMLLLLLIKKKKKKKKKKKKKKKNINENIRKKLLLLLLLLLLLLLNRNRNRNRNRNRRDDDEDEDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLMMDDRDDDDDDEDDDNNNNMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLMMMLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLRDDDEDDNNNNMMLMLLLLLLLLLLLLMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLINNNNNNEDDEDDEDDNRRREEEDDDDDDNNNNNNNKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Applicable","BALANCE","BALANCE_IDENT","BYTECODE","BYTECODE_IDENT","ContainerInconsistency","DATASTORE","DATASTORE_IDENT","DatastoreUpdateDeserializer","DatastoreUpdateSerializer","Delete","Delete","FileError","Keep","Key","KeyDeserializer","KeySerializer","KeyType","LedgerChanges","LedgerChangesDeserializer","LedgerChangesSerializer","LedgerConfig","LedgerController","LedgerEntry","LedgerEntryDeserializer","LedgerEntrySerializer","LedgerEntryUpdate","LedgerEntryUpdateDeserializer","LedgerEntryUpdateSerializer","LedgerError","MissingEntry","Set","Set","Set","SetOrDelete","SetOrKeep","SetOrKeepDeserializer","SetOrKeepSerializer","SetUpdateOrDelete","SetUpdateOrDeleteDeserializer","SetUpdateOrDeleteSerializer","Update","address","address_deserializer","address_deserializer","address_serializer","address_serializer","amount_deserializer","amount_deserializer","amount_serializer","apply","apply_changes","apply_changes_to_batch","backup_db","balance","balance","balance_serializer","bytecode","bytecode","bytecode_deserializer","bytecode_deserializer","bytecode_serializer","bytecode_serializer","config","controller","datastore","datastore","datastore_deserializer","datastore_deserializer","datastore_prefix_from_address","datastore_serializer","datastore_serializer","disk_ledger_path","entry_deserializer","entry_exists","entry_serializer","error","get_balance","get_bytecode","get_data_entry","get_datastore_keys","get_ledger_hash","get_ledger_part","get_slot","initial_ledger_path","inner_deserializer","inner_deserializer_set","inner_deserializer_update","inner_serializer","inner_serializer_set","inner_serializer_update","key","key_deserializer","key_type","key_type_deserializer","key_type_serializer","ledger_changes","ledger_entry","length_deserializer","length_deserializer","load_initial_ledger","max_datastore_value_length","max_key_length","max_ledger_part_size","phantom_t","phantom_t","phantom_t","phantom_t","phantom_v","phantom_v","reset","set_initial_slot","set_ledger_part","thread_count","types","u64_serializer","u64_serializer","value_deserializer","value_serializer","vec_u8_serializer","version_byte_deserializer","version_byte_serializer","LedgerConfig","borrow","borrow_mut","clone","clone_into","disk_ledger_path","fmt","from","from_ref","initial_ledger_path","into","into_request","max_datastore_value_length","max_key_length","max_ledger_part_size","thread_count","to_owned","try_from","try_into","type_id","vzip","LedgerController","apply_changes","apply_changes_to_batch","backup_db","entry_exists","get_balance","get_bytecode","get_data_entry","get_datastore_keys","get_ledger_hash","get_ledger_part","get_slot","load_initial_ledger","reset","set_initial_slot","set_ledger_part","ContainerInconsistency","DisplayToDisplayDoc","FileError","LedgerError","MissingEntry","PathToDisplayDoc","_DERIVE_Display_FOR_LedgerError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","fmt","fmt","from","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","BALANCE","BALANCE_IDENT","BYTECODE","BYTECODE_IDENT","Balance","Balance__num_enum_0__","Bytecode","Bytecode__num_enum_0__","DATASTORE","DATASTORE_IDENT","Datastore","Datastore__num_enum_0__","KEY_VERSION","Key","KeyDeserializer","KeySerializer","KeyType","KeyTypeDeserializer","KeyTypeId","KeyTypeSerializer","address","address_deserializer","address_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","datastore_prefix_from_address","default","default","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key_type","key_type_deserializer","key_type_serializer","new","new","new","new","new","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec_u8_deserializer","vec_u8_serializer","version_byte_deserializer","version_byte_serializer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_datastore_key_length","with_datastore_key_length","DatastoreUpdateDeserializer","DatastoreUpdateSerializer","FIELDS","LedgerChanges","LedgerChangesDeserializer","LedgerChangesSerializer","LedgerEntryUpdate","LedgerEntryUpdateDeserializer","LedgerEntryUpdateSerializer","__Field","__FieldVisitor","__Visitor","__Visitor","__field0","__field1","__field2","__ignore","address_deserializer","address_serializer","amount_deserializer","apply","apply","balance","balance_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytecode","bytecode_deserializer","bytecode_serializer","clone","clone","clone_into","clone_into","create_address","datastore","datastore_deserializer","datastore_serializer","default","default","default","default","default","delete_data_entry","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","entry_deserializer","entry_exists_or_else","entry_serializer","eq","eq","equivalent","equivalent","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get","get_balance_or_else","get_bytecode_or_else","get_bytecode_updates","get_data_entry_or_else","has_changes","has_data_entry_or_else","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key_deserializer","length_deserializer","length_deserializer","lifetime","lifetime","marker","marker","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","set_balance","set_bytecode","set_data_entry","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64_serializer","u64_serializer","value_deserializer","value_serializer","vec_u8_serializer","visit_bytes","visit_map","visit_newtype_struct","visit_seq","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","LedgerEntry","LedgerEntryDeserializer","LedgerEntrySerializer","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","amount_deserializer","amount_serializer","apply","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytecode","bytecode_deserializer","bytecode_serializer","clone","clone_into","datastore","datastore_deserializer","datastore_serializer","default","default","deserialize","deserialize","deserialize","eq","equivalent","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","marker","new","new","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","Applicable","Delete","Delete","Keep","Set","Set","Set","SetOrDelete","SetOrDeleteDeserializer","SetOrDeleteSerializer","SetOrKeep","SetOrKeepDeserializer","SetOrKeepSerializer","SetUpdateOrDelete","SetUpdateOrDeleteDeserializer","SetUpdateOrDeleteSerializer","Update","VARIANTS","VARIANTS","VARIANTS","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field1","__field1","__field1","__field2","apply","apply","apply","apply","apply_to","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","inner_deserializer","inner_deserializer","inner_deserializer_set","inner_deserializer_update","inner_serializer","inner_serializer","inner_serializer_set","inner_serializer_update","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","lifetime","lifetime","marker","marker","marker","new","new","new","new","new","new","phantom_t","phantom_t","phantom_t","phantom_t","phantom_t","phantom_t","phantom_v","phantom_v","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_enum","visit_enum","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["massa_ledger_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_ledger_exports::config","","","","","","","","","","","","","","","","","","","","","massa_ledger_exports::controller","","","","","","","","","","","","","","","","massa_ledger_exports::error","","","","","","","","","","","","","","","","","","","","","","massa_ledger_exports::key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_ledger_exports::ledger_changesmassa_ledger_exports::ledger_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_ledger_exports::typesd":["Trait marking a structure that supports another one (V) …","","","","","container inconsistency: <code>{0}</code>","","","Serializer for <code>datastore</code> field of <code>LedgerEntryUpdate</code>","Serializer for <code>datastore</code> field of <code>LedgerEntryUpdate</code>","Deletes the value T","deletes the value","file error: <code>{0}</code>","keeps the existing value","Disk ledger keys representation","Basic key deserializer","Basic key serializer","","represents a list of changes to multiple ledger entries","<code>LedgerChanges</code> deserializer","<code>LedgerChanges</code> serializer","Ledger configuration","","Structure defining an entry associated to an address in …","Deserializer for <code>LedgerEntry</code>","Serializer for <code>LedgerEntry</code>","represents an update to one or more fields of a <code>LedgerEntry</code>","Deserializer for <code>LedgerEntryUpdate</code>","Serializer for <code>LedgerEntryUpdate</code>","ledger error","missing entry: <code>{0}</code>","Sets the value T a new absolute value T","sets a new absolute value T","sets a new absolute value T","<code>Enum</code> representing a set/delete change on a value T","represents a set/keep change","","","Enumeration representing set/update/delete change on a …","","","Applies an update V to an existing value T. If the value T …","","","","","","","","","apply changes from other to mutable self","Allows applying <code>LedgerChanges</code> to the final ledger","","","change the balance","The balance of that entry.","","change the executable bytecode","Executable bytecode","","","","","This file defines a configuration structure containing all …","","change datastore entries","A key-value store associating a hash to arbitrary bytes","","","","","","disk ledger db directory","","Checks if a ledger entry exists","","This file defines all error types for the ledger system","Gets the balance of a ledger entry","Gets a copy of the bytecode of a ledger entry","Gets a copy of the value of a datastore entry for a given …","Get every key of the datastore for a given address.","Get the current disk ledger hash","Get a part of the ledger Used for bootstrap Return: Tuple …","","initial SCE ledger file","","","","","","","","","","","","This file provides structures representing changes to …","This file defines the structure representing an entry in …","","","Loads ledger from file","max datastore value length","max key length","max ledger part size","","","","","","","Reset the ledger","","Set a part of the ledger Used for bootstrap Return: Last …","thread count","Provides various tools to manipulate ledger entries and …","","","","","","","","Ledger configuration","","","","","disk ledger db directory","","Returns the argument unchanged.","","initial SCE ledger file","Calls <code>U::from(self)</code>.","","max datastore value length","max key length","max ledger part size","thread count","","","","","","","Allows applying <code>LedgerChanges</code> to the final ledger","","","Checks if a ledger entry exists","Gets the balance of a ledger entry","Gets a copy of the bytecode of a ledger entry","Gets a copy of the value of a datastore entry for a given …","Get every key of the datastore for a given address.","Get the current disk ledger hash","Get a part of the ledger Used for bootstrap Return: Tuple …","","Loads ledger from file","Reset the ledger","","Set a part of the ledger Used for bootstrap Return: Last …","container inconsistency: <code>{0}</code>","","file error: <code>{0}</code>","ledger error","missing entry: <code>{0}</code>","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Disk ledger keys representation","Basic key deserializer","Basic key serializer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Example","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Creates a new KeyTypeSerializer. <code>with_datastore_key_length</code> …","Creates a new KeyTypeDeserializer. <code>max_datastore_key_length</code>…","","Creates a new <code>KeySerializer</code> <code>with_datastore_key_length</code> if …","Creates a new <code>KeyDeserializer</code> <code>max_datastore_key_length</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializer for <code>datastore</code> field of <code>LedgerEntryUpdate</code>","Serializer for <code>datastore</code> field of <code>LedgerEntryUpdate</code>","","represents a list of changes to multiple ledger entries","<code>LedgerChanges</code> deserializer","<code>LedgerChanges</code> serializer","represents an update to one or more fields of a <code>LedgerEntry</code>","Deserializer for <code>LedgerEntryUpdate</code>","Serializer for <code>LedgerEntryUpdate</code>","","","","","","","","","","","","extends the <code>LedgerEntryUpdate</code> with another one","extends the current <code>LedgerChanges</code> with another one","change the balance","","","","","","","","","","","","","","","","","","","","","","","","","","change the executable bytecode","","","","","","","Create a new, empty address. Overwrites the address if it …","change datastore entries","","","","","","","","Deletes a datastore entry for a given address. Does …","Example","Example","Example","","","","","Tries to return whether an entry exists or gets the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get an item from the <code>LedgerChanges</code>","Tries to return the balance of an entry or gets it from a …","Tries to return the executable bytecode of an entry or …","Retrieves all the bytcode updates contained in the current …","Tries to return a datastore entry for a given address, or …","Tries to return whether there is a change on a given …","Tries to return whether a datastore entry exists for a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a new <code>DatastoreUpdateSerializer</code>","Creates a new <code>DatastoreUpdateDeserializer</code>","Creates a new <code>LedgerEntryUpdateSerializer</code>","Creates a new <code>LedgerEntryUpdateDeserializer</code>","Creates a new <code>LedgerChangesSerializer</code>","Creates a new <code>LedgerChangesDeserializer</code>","Example","Example","Example","","","Set the balance of an address. If the address doesn’t …","Set the executable bytecode of an address. If the address …","Set a datastore entry for a given address. If the address …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure defining an entry associated to an address in …","Deserializer for <code>LedgerEntry</code>","Serializer for <code>LedgerEntry</code>","","","","","","","","","","","The balance of that entry.","","","","","","","","","","","","","Executable bytecode","","","","","A key-value store associating a hash to arbitrary bytes","","","","","Example","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>LedgerEntrySerializer</code>","Creates a new <code>LedgerEntryDeserializer</code>","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait marking a structure that supports another one (V) …","Deletes the value T","deletes the value","keeps the existing value","Sets the value T a new absolute value T","sets a new absolute value T","sets a new absolute value T","<code>Enum</code> representing a set/delete change on a value T","","","represents a set/keep change","","","Enumeration representing set/update/delete change on a …","","","Applies an update V to an existing value T. If the value T …","","","","","","","","","","","","","","","","","","","","apply changes from other to mutable self","","","","applies the current <code>SetOrKeep</code> to a target mutable value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,27,0,27,0,17,27,0,0,0,52,42,17,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,52,42,64,0,0,0,0,0,0,0,52,13,45,31,40,30,44,57,56,62,84,84,84,37,55,39,37,55,44,57,39,56,0,0,37,55,44,57,0,39,56,18,45,84,40,0,84,84,84,84,84,84,84,18,68,66,66,83,81,81,0,41,13,31,30,0,0,41,45,84,18,18,18,66,81,68,83,66,81,84,84,84,18,0,38,40,41,38,38,31,30,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,17,0,17,0,17,0,0,85,86,17,17,17,17,17,17,17,17,17,17,17,17,17,27,0,27,0,26,0,26,0,27,0,26,0,0,0,0,0,0,0,0,0,13,31,30,26,27,28,29,13,30,31,26,27,28,29,13,30,31,26,27,28,29,13,30,31,26,27,28,29,13,30,31,0,28,30,29,31,26,27,13,26,27,13,26,27,13,26,27,28,29,13,30,31,26,27,28,29,13,30,31,26,27,28,29,13,30,31,26,27,28,29,13,30,31,13,31,30,28,29,13,30,31,28,30,26,27,28,29,13,30,31,26,26,27,28,29,13,30,31,26,26,27,28,29,13,30,31,26,27,28,29,13,30,31,29,28,31,30,26,27,28,29,13,30,31,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,45,40,44,37,1,37,39,38,41,39,44,40,45,37,46,48,49,1,50,38,41,39,44,40,45,37,46,48,49,1,50,37,44,39,37,1,37,1,1,37,44,39,38,39,40,37,1,1,41,44,45,37,46,1,45,1,40,37,1,37,1,48,49,50,37,48,49,1,50,38,41,39,44,40,45,37,46,48,49,1,50,37,1,1,1,1,1,1,1,1,38,41,39,44,40,45,37,46,48,49,1,50,38,41,39,44,40,45,37,46,48,49,1,50,41,41,45,49,50,49,50,38,41,39,44,40,45,38,39,40,37,1,1,1,1,37,1,38,41,39,44,40,45,37,46,48,49,1,50,38,41,39,44,40,45,37,46,48,49,1,50,38,41,39,44,40,45,37,46,48,49,1,50,38,40,41,38,38,48,49,50,49,50,48,48,38,41,39,44,40,45,37,46,48,49,1,50,0,0,0,0,0,0,0,58,58,58,58,57,56,55,55,56,57,55,58,59,60,56,57,55,58,59,60,55,57,56,55,55,55,57,56,56,55,57,55,58,55,55,59,60,55,59,60,56,57,55,58,59,60,55,56,57,55,58,59,60,56,57,55,58,59,60,60,60,56,57,56,55,55,56,57,55,58,59,60,56,57,55,58,59,60,56,57,55,58,59,60,59,60,60,59,59,56,57,55,58,59,60,0,52,42,64,52,42,64,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,69,70,71,69,70,71,69,62,52,42,64,64,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,52,42,64,52,42,64,64,66,67,68,52,69,42,70,64,71,52,42,64,52,42,64,73,74,75,76,77,78,52,73,74,42,75,76,64,77,78,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,52,42,64,67,68,66,66,82,83,81,81,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,74,76,78,74,76,78,66,81,67,82,68,83,66,81,67,82,68,83,66,81,81,82,83,52,42,64,52,42,64,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78,73,75,77,74,76,78,73,75,77,73,75,77,66,81,67,82,68,83,52,69,73,74,42,70,75,76,64,71,77,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[1,2]],[[1,2,3]],[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,[[6,[5]]]],0,0,0,0,[4,7],0,0,[4,[[9,[8]]]],[4,[[9,[10]]]],[4,[[9,[[6,[5]]]]]],[4,[[9,[[11,[[6,[5]]]]]]]],[[],12],[[[14,[13]]],[[16,[15]]]],[[],[[16,[2,15]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[16,[17]]]],0,0,0,0,0,0,0,0,0,[[]],[2],[[[6,[5]]],[[16,[[14,[13]],15]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[18,18],[[]],0,[[18,19],20],[[]],[[]],0,[[]],[[],21],0,0,0,0,[[]],[[],16],[[],16],[[],22],[[]],0,[[1,2]],[[1,2,3]],[2],[4,7],[4,[[9,[8]]]],[4,[[9,[10]]]],[4,[[9,[[6,[5]]]]]],[4,[[9,[[11,[[6,[5]]]]]]]],[[],12],[[[14,[13]]],[[16,[15]]]],[[],[[16,[2,15]]]],[[],[[16,[17]]]],[[]],[2],[[[6,[5]]],[[16,[[14,[13]],15]]]],0,0,0,0,0,0,0,[[]],[[],23],[[]],[[]],[[17,19],20],[[17,19],20],[[]],[[]],[[],21],[24],[[],25],[[],16],[[],16],[[],22],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[29,29],[13,13],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[5]]]],[[],28],[[],30],[29,[[34,[27,[0,[32,33]]]]]],[31,[[34,[13,[0,[32,33]]]]]],[[26,26],7],[[27,27],7],[[13,13],7],[[],7],[[],7],[[],7],[[26,19],20],[[27,19],20],[[13,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,[7,28],[[5,7],29],[[4,27],13],[7,30],[[5,7],31],[[28,27,6],[[16,[35]]]],[[30,13,6],[[16,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[5,[[16,[26,[36,[26]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],[[16,[26,[36,[26]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,37]],[[1,1]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[37,37],[1,1],[[]],[[]],[[1,4]],0,0,0,[[],38],[[],39],[[],40],[[],37],[[],1],[[1,4,[6,[5]]]],[41,[[34,[[43,[[6,[5]],[42,[[6,[5]]]]]],[0,[32,33]]]]]],[44,[[34,[37,[0,[32,33]]]]]],[45,[[34,[1,[0,[32,33]]]]]],[[],[[16,[37]]]],[[],[[16,[46]]]],[[],[[16,[1]]]],0,[[1,4,47],7],0,[[37,37],7],[[1,1],7],[[],7],[[],7],[[48,19],20],[[49,19],20],[[50,19],20],[[37,19],20],[19,[[16,[51]]]],[19,[[16,[51]]]],[[1,19],20],[19,[[16,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,4],[[9,[52]]]],[[1,4,47],[[9,[8]]]],[[1,4,47],[[9,[10]]]],[1,[[6,[10]]]],[[1,4,47],[[9,[[6,[5]]]]]],[[1,4,[9,[[6,[5]]]]],7],[[1,4,47],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,[[],38],[[5,53,53],41],[[],39],[[5,53,53],44],[[],40],[[53,5,53,53],45],[[38,43,6],[[16,[35]]]],[[39,37,6],[[16,[35]]]],[[40,1,6],[[16,[35]]]],[37,16],[1,16],[[1,4,8]],[[1,4,10]],[[1,4,[6,[5]],[6,[5]]]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,[48,16],[49,16],[50,16],[49,16],[50,16],[[48,54],16],[[48,53],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[55,37]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[55,55],[[]],0,0,0,[[],56],[[],55],[57,[[34,[55,[0,[32,33]]]]]],[[],[[16,[55]]]],[[],[[16,[58]]]],[[55,55],7],[[],7],[[59,19],20],[[60,19],20],[[55,19],20],[19,[[16,[51]]]],[19,[[16,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[],56],[[53,5,53],57],[[56,55,6],[[16,[35]]]],[55,16],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[59,16],[60,16],[60,16],[[59,54],16],[[59,53],16],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[52,[[0,[61,62]]]],[52,[[0,[61,62]]]]]],[[[42,[63]],[42,[63]]]],[[[64,[63]],[64,[63]]]],[[[64,[63]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[63,61,[62,[[0,[63,[62,[[0,[63,[62,[[0,[63,62,63]]]],63]]]],63]]]]]],[0,[63,[62,[[0,[63,[62,[[0,[63,[62,[[0,[63,62,63]]]],63]]]],63]]]],63]]]]],[[52,[[0,[63,61,[62,[[0,[63,[62,[[0,[63,[62,[[0,[63,62,63]]]],63]]]],63]]]]]],[0,[63,[62,[[0,[63,[62,[[0,[63,[62,[[0,[63,62,63]]]],63]]]],63]]]],63]]]]]],[[[42,[[0,[63,63]]]]],[[42,[[0,[63,63]]]]]],[[[64,[[0,[63,63]]]]],[[64,[[0,[63,63]]]]]],[[]],[[]],[[]],[[],[[64,[63]]]],[[[66,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]],[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]],[65,[[0,[61,[62,[[0,[[62,[[0,[62,63]]]],63]]]]]]]],[65,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]]],[[34,[[52,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]],[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]]]],[0,[32,33]]]]]],[[[67,[63,[65,[63]]]]],[[34,[[42,[63]],[0,[32,33]]]]]],[[[68,[63,[65,[63]]]]],[[34,[[64,[63]],[0,[32,33]]]]]],[[],[[16,[52]]]],[[],[[16,[69]]]],[[],[[16,[42]]]],[[],[[16,[70]]]],[[],[[16,[64]]]],[[],[[16,[71]]]],[[[52,[[0,[72,61,[62,[[0,[72,[62,[[0,[72,[62,[[0,[72,62,63]]]],63]]]],63]]]]]],[0,[72,[62,[[0,[72,[62,[[0,[72,[62,[[0,[72,62,63]]]],63]]]],63]]]],63]]]],52],7],[[[42,[[0,[72,63]]]],42],7],[[[64,[[0,[72,63]]]],64],7],[[],7],[[],7],[[],7],[[73,19],20],[[74,19],20],[[75,19],20],[[76,19],20],[[77,19],20],[[78,19],20],[[[52,[[0,[79,61,[62,[[0,[79,[62,[[0,[79,[62,[[0,[79,62,63]]]],63]]]],63]]]]]],[0,[79,[62,[[0,[79,[62,[[0,[79,[62,[[0,[79,62,63]]]],63]]]],63]]]],63]]]],19],20],[19,[[16,[51]]]],[19,[[16,[51]]]],[[[42,[[0,[79,63]]]],19],20],[19,[[16,[51]]]],[19,[[16,[51]]]],[[[64,[[0,[79,63]]]],19],20],[19,[[16,[51]]]],[19,[[16,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,[[[65,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]]]],[65,[[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]]]]],[[66,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]],[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]],[65,[[0,[61,[62,[[0,[[62,[[0,[62,63]]]],63]]]]]]]],[65,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]]]],[[[80,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]]]],[80,[[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]]]]],[[81,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]],[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]],[80,[[0,[61,[62,[[0,[[62,[[0,[62,63]]]],63]]]]]]]],[80,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]]]],[[[65,[63]]],[[67,[63,[65,[63]]]]]],[[[80,[63]]],[[82,[63,[80,[63]]]]]],[[[65,[63]]],[[68,[63,[65,[63]]]]]],[[[80,[63]]],[[83,[63,[80,[63]]]]]],0,0,0,0,0,0,0,0,[[[81,[[0,[61,[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]],[0,[[62,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]],63]],[80,[[0,[61,[62,[[0,[[62,[[0,[62,63]]]],63]]]]]]]],[80,[[0,[[62,[[0,[[62,[[0,[62,63]]]],63]]]],63]]]]]],52,6],[[16,[35]]]],[[[82,[63,[80,[63]]]],42,6],[[16,[35]]]],[[[83,[63,[80,[63]]]],64,6],[[16,[35]]]],[52,16],[42,16],[64,16],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[73,16],[75,16],[77,16],[74,16],[76,16],[78,16],[[73,54],16],[[75,54],16],[[77,54],16],[[73,53],16],[[75,53],16],[[77,53],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"LedgerChanges"],[3,"Slot"],[3,"DBBatch"],[4,"Address"],[15,"u8"],[3,"Vec"],[15,"bool"],[3,"Amount"],[4,"Option"],[3,"Bytecode"],[3,"BTreeSet"],[3,"Hash"],[3,"Key"],[4,"StreamingStep"],[4,"ModelsError"],[4,"Result"],[4,"LedgerError"],[3,"LedgerConfig"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[3,"Display"],[3,"Demand"],[3,"String"],[4,"KeyTypeId"],[4,"KeyType"],[3,"KeyTypeSerializer"],[3,"KeyTypeDeserializer"],[3,"KeySerializer"],[3,"KeyDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"SerializeError"],[3,"TryFromPrimitiveError"],[3,"LedgerEntryUpdate"],[3,"DatastoreUpdateSerializer"],[3,"LedgerEntryUpdateSerializer"],[3,"LedgerChangesSerializer"],[3,"DatastoreUpdateDeserializer"],[4,"SetOrDelete"],[3,"BTreeMap"],[3,"LedgerEntryUpdateDeserializer"],[3,"LedgerChangesDeserializer"],[4,"__Field"],[8,"FnOnce"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__Visitor"],[3,"Error"],[4,"SetUpdateOrDelete"],[15,"u64"],[15,"str"],[3,"LedgerEntry"],[3,"LedgerEntrySerializer"],[3,"LedgerEntryDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"Default"],[8,"Applicable"],[8,"Clone"],[4,"SetOrKeep"],[8,"Deserializer"],[3,"SetUpdateOrDeleteDeserializer"],[3,"SetOrDeleteDeserializer"],[3,"SetOrKeepDeserializer"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[8,"PartialEq"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"Debug"],[8,"Serializer"],[3,"SetUpdateOrDeleteSerializer"],[3,"SetOrDeleteSerializer"],[3,"SetOrKeepSerializer"],[8,"LedgerController"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_ledger_worker":{"doc":"General description","t":"DMAAMDLLLLLMLLLLLLLLLLLLLLLLLMLLLLNNNDEMLLLLLLLMMLLLFLLLLLLLLLLLLMMMMMMLLLLLLLLMMMLLLLLLLLLL","n":["FinalLedger","config","ledger","ledger_db","sorted_ledger","FinalLedger","apply_changes","apply_changes_to_batch","backup_db","borrow","borrow_mut","config","entry_exists","fmt","from","get_balance","get_bytecode","get_data_entry","get_datastore_keys","get_ledger_hash","get_ledger_part","get_slot","into","into_request","load_initial_ledger","new","reset","set_initial_slot","set_ledger_part","sorted_ledger","try_from","try_into","type_id","vzip","Balance","Bytecode","Datastore","LedgerDB","LedgerSubEntry","amount_serializer","apply_changes","apply_changes_to_batch","backup_db","borrow","borrow","borrow_mut","borrow_mut","bytecode_serializer","db","delete_entry","delete_key","derive_key","end_prefix","fmt","from","from","get_datastore_keys","get_ledger_hash","get_ledger_part","get_slot","get_sub_entry","into","into","into_request","into_request","key_deserializer","key_deserializer_db","key_serializer","key_serializer_db","ledger_part_size_message_bytes","len_serializer","load_initial_ledger","new","put_entry","put_entry_value","reset","set_initial_slot","set_ledger_part","set_slot","slot_deserializer","slot_serializer","thread_count","try_from","try_from","try_into","try_into","type_id","type_id","update_entry","update_key_value","vzip","vzip"],"q":["massa_ledger_worker","","","","","massa_ledger_worker::ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_ledger_worker::ledger_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a final ledger associating addresses to their …","ledger configuration","This file defines the final ledger associating addresses …","Copyright (c) 2022 MASSA LABS info@massa.net Module to …","ledger tree, sorted by address","Represents a final ledger associating addresses to their …","Allows applying <code>LedgerChanges</code> to the final ledger","","","","","ledger configuration","Checks if a ledger entry exists","","Returns the argument unchanged.","Gets the balance of a ledger entry","Gets a copy of the bytecode of a ledger entry","Gets a copy of the value of a datastore entry for a given …","Get every key of the datastore for a given address.","Get the current disk ledger hash","Get a part of the disk ledger.","Get the slot associated with the current ledger","Calls <code>U::from(self)</code>.","","Loads ledger from file","Initializes a new <code>FinalLedger</code> by reading its initial state …","Reset the disk ledger.","","Set a part of the disk ledger.","ledger tree, sorted by address","","","","","Balance","Bytecode","Datastore entry","Disk ledger DB module","Ledger sub entry enum","","Allows applying <code>LedgerChanges</code> to the disk ledger","Allows applying <code>LedgerChanges</code> to the disk ledger","","","","","","","","Delete every sub-entry associated to the given address.","Internal function to delete a key and perform the ledger …","","For a given start prefix (inclusive), returns the correct …","","Returns the argument unchanged.","Returns the argument unchanged.","Get every key of the datastore for a given address.","Get the current disk ledger hash","Get a part of the disk Ledger. Mainly used in the …","","Get the given sub-entry of a given address.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Loads the initial disk ledger","Create and initialize a new <code>LedgerDB</code>.","Add every sub-entry individually for a given entry.","Internal function to put a key &amp; value and perform the …","","","Set a part of the ledger in the database. We deserialize …","Set the disk ledger slot metadata","","","","","","","","","","Update the ledger entry of a given address.","Internal function to update a key &amp; value and perform the …","",""],"i":[0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,29,29,29,0,0,27,27,27,27,29,27,29,27,27,27,27,27,29,0,27,29,27,27,27,27,27,27,29,27,29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,29,27,29,27,29,27,27,27,29,27],"f":[0,0,0,0,0,0,[[1,2,3]],[[1,2,3,4]],[[1,3]],[[]],[[]],0,[[1,5],6],[[1,7],8],[[]],[[1,5],[[10,[9]]]],[[1,5],[[10,[11]]]],[[1,5],[[10,[[13,[12]]]]]],[[1,5],[[10,[[14,[[13,[12]]]]]]]],[1,15],[[1,[17,[16]]],[[19,[18]]]],[1,[[19,[3,18]]]],[[]],[[],20],[1,[[19,[21]]]],[[22,[25,[[24,[23]]]]],1],[1],[[1,3]],[[1,[13,[12]]],[[19,[[17,[16]],18]]]],0,[[],19],[[],19],[[],26],[[]],0,0,0,0,0,0,[[27,2,3]],[[27,2,3,4]],[[27,3]],[[]],[[]],[[]],[[]],0,0,[[27,5,4]],[[27,28,4,16]],[[29,5],16],[[],[[10,[[13,[12]]]]]],[[27,7],8],[[]],[[]],[[27,5],[[10,[[14,[[13,[12]]]]]]]],[27,15],[[27,[17,[16]]],[[19,[18]]]],[27,[[19,[3,18]]]],[[27,5,29],[[10,[[13,[12]]]]]],[[]],[[]],[[],20],[[],20],0,0,0,0,0,0,[[27,[31,[5,30]]]],[[[25,[[24,[23]]]],12,12,32],27],[[27,5,30,4]],[[27,28,4,16]],[27],[[27,3]],[27,[[19,[[17,[16]],18]]]],[[27,3,4]],0,0,0,[[],19],[[],19],[[],19],[[],19],[[],26],[[],26],[[27,5,33,4]],[[27,28,4,16]],[[]],[[]]],"p":[[3,"FinalLedger"],[3,"LedgerChanges"],[3,"Slot"],[3,"DBBatch"],[4,"Address"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Amount"],[4,"Option"],[3,"Bytecode"],[15,"u8"],[3,"Vec"],[3,"BTreeSet"],[3,"Hash"],[3,"Key"],[4,"StreamingStep"],[4,"ModelsError"],[4,"Result"],[3,"Request"],[4,"LedgerError"],[3,"LedgerConfig"],[6,"DB"],[6,"RwLock"],[3,"Arc"],[3,"TypeId"],[3,"LedgerDB"],[3,"ColumnFamily"],[4,"LedgerSubEntry"],[3,"LedgerEntry"],[3,"HashMap"],[15,"u64"],[3,"LedgerEntryUpdate"]]},\
"massa_logging":{"doc":"Log utilities","t":"O","n":["massa_trace"],"q":["massa_logging"],"d":["tracing with some context"],"i":[0],"f":[0],"p":[]},\
"massa_models":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net All the …","t":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAADREDDNNNNNNNNNMLLLLLLLLMLLMMLLLLMLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLLRRREDDDDDRNDRRNDEDDNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMMLLMMLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLRDDDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLNNDDDEDNRRDNNNGRNNEEEDDDDDDNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDDRRRRGEDDNNNNNNLLLLLLLLLLLLLLLLLLMMMMLLLMMMMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLRRRDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMLLLLLLDDDREDDNNNNMMMMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNRRRNNDEENDDRRNNEEEEEDDDDDDDDDDNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMFAAMMMAMMMMMMDREDDNNNNNNNNNNNMLLLLLLLLLLLMLLMLLLLLLLLLLLMLLLLLLLLMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRDRDDRRRHHHHHRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRDRMMMMMFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFGDDLLLLLLLLLLLLMMLLLLLLLLLMMMLLNNNNNDDDDRRREDEEDDEEDENNNNNDDDDRRRRRRNNNRREEEEEEDDDDDDDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLMMMMMMLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMRRRDDDDDDDRDGEDDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLNNNNNNNINNNNNNNNEGNNNNINNNNNNNRKKLLLLLLLLLLLLLLLLLLLLLLLLDRRDEEDDDDNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDDDDDDDDDEEDDDDDNNNNNMMMMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNRNNRRRRRRRDRRRRDDDDDDDDDGDDDEDEDDDNNRNNRGNNRRDDEEEEEEEDDDDDDDDDDDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLMMMMLLMMMMLMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMDRRDEEDDDDNNNNNNNNNNNNMLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGIDGGILLLLLMLLMLLLLKLLLRDDDDDDEDDDDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLRIDIDDEDDNNNNNNLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLMLLLLLLLLLLLLMMMKLLLMLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIDDSDDIDDDDDDFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLMMMMLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMMLLLLLLLLLLLLRRDRDDDEEDDDDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMMMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLDDRRRRDDEEEEDDDDDDDDNNNNNNNNNNNNNNNNNNNNNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEDDLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLMMLLLFFFFFFRDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLLLL","n":["active_block","address","amount","block","block_header","block_id","bytecode","clique","composite","config","datastore","denunciation","endorsement","error","execution","ledger","mapping_grpc","node","operation","output_event","prehash","rolls","secure_share","serialization","slot","stats","streaming_step","timeslots","version","ActiveBlock","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__field5","__field6","__field7","__ignore","block_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","creator_address","descendants","deserialize","deserialize","expecting","expecting","fitness","fmt","fmt","fmt","from","from","from","from","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","is_final","lifetime","marker","parents","serialize","slot","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","ADDRESS_PREFIX","ADDRESS_SIZE_BYTES","ADDRESS_VERSION","Address","AddressDeserializer","AddressSerializer","AddressVisitor","BytesVisitor","ExecutionAddressCycleInfo","FIELDS","SC","SCAddress","SC_PREFIX","USER_PREFIX","User","UserAddress","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__ignore","active_rolls","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cycle","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_public_key","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","get_hash","get_hash","get_hash","get_thread","hash","hash","hash","hash_bytes","hash_deserializer","int_deserializer","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_final","lifetime","marker","new","new","nok_count","ok_count","partial_cmp","partial_cmp","partial_cmp","prefixed_bytes","sc_parser","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_parser","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_seq","visit_str","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AMOUNT_DECIMAL_FACTOR","Amount","AmountDeserializer","AmountSerializer","AmountVisitor","MAX","MIN","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div_u64","checked_mul_u64","checked_sub","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","deserialize","deserialize","eq","equivalent","expecting","fmt","fmt","fmt","from","from","from","from","from_mantissa_scale","from_raw","from_ref","from_ref","from_ref","from_str","into","into","into","into","into_request","into_request","into_request","into_request","is_zero","new","new","partial_cmp","saturating_add","saturating_mul_u64","saturating_sub","serialize","serialize","to_owned","to_owned","to_owned","to_raw","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u64_deserializer","u64_serializer","visit_str","vzip","vzip","vzip","vzip","zero","ActiveInAlternativeCliques","ActiveInBlockclique","Block","BlockDeserializer","BlockDeserializerArgs","BlockGraphStatus","BlockSerializer","Discarded","FIELDS","FIELDS","FilledBlock","Final","Incoming","NotFound","SecureShareBlock","VARIANTS","WaitingForDependencies","WaitingForSlot","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field1","__field1","__field1","__field2","__field3","__field4","__field5","__field6","__field7","__ignore","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_count","clone","clone","clone_into","clone_into","contains_operation","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","endorsement_count","eq","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get_fitness","header","header","header_deserializer","header_serializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_start_period","lifetime","lifetime","lifetime","marker","marker","marker","max_denunciations_per_block_header","max_operations_per_block","new","new","new_verifiable","op_ids_deserializer","op_ids_serializer","operations","operations","serialize","serialize","serialize","serialize","serialize","thread_count","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ARR_LEN","BlockHeader","BlockHeaderDenunciationData","BlockHeaderDeserializer","BlockHeaderSerializer","CONCATP_NHPMWYD3NJA","CONCAT_ARR","CONCAT_STR","FIELDS","SecuredHeader","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compute_hash","default","denunciation_deserializer","denunciation_len_deserializer","denunciation_serializer","denunciations","deserialize","deserialize","deserialize","endorsement_content_serializer","endorsement_count","endorsement_len_deserializer","endorsement_serializer","endorsement_serializer","endorsements","expecting","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","get_fitness","hash_deserializer","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_start_period","lifetime","marker","new","new","new","operation_merkle_root","parents","serialize","serialize","slot","slot","slot_deserializer","slot_serializer","thread_count","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_serializer","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BLOCKID_PREFIX","BLOCKID_VERSION","BLOCK_ID_SIZE_BYTES","BlockId","BlockIdDeserializer","BlockIdSerializer","Helper","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","deserialize","deserialize","eq","equivalent","expecting","fmt","fmt","fmt","from","from","from","from","from_bytes","from_ref","from_ref","from_ref","from_str","get_first_bit","get_hash","get_hash","hash","hash_deserializer","into","into","into","into","into_bytes","into_request","into_request","into_request","into_request","new","new","new","partial_cmp","serialize","serialize","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_str","vzip","vzip","vzip","vzip","BYTECODE_VERSION","Bytecode","BytecodeDeserializer","BytecodeSerializer","__Visitor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","deserialize","deserialize","eq","equivalent","expecting","fmt","fmt","from","from","from","from","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","new","new","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vec_u8_deserializer","vec_u8_serializer","version_byte_deserializer","version_byte_serializer","visit_newtype_struct","visit_seq","vzip","vzip","vzip","vzip","Clique","CliqueDeserializer","CliqueSerializer","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","block_id_deserializer","block_ids","block_ids_length_deserializer","block_ids_length_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","deserialize","deserialize","deserialize","expecting","expecting","fitness","fitness_deserializer","fitness_serializer","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_blockclique","lifetime","marker","new","new","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","Active","Discarded","Discarded","FIELDS","FIELDS","FIELDS","InBlock","Incoming","OperationSearchResult","OperationSearchResultBlockStatus","OperationSearchResultStatus","Pending","PubkeySig","StakersCycleProductionStats","VARIANTS","VARIANTS","WaitingForDependencies","WaitingForSlot","__Field","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field1","__field2","__field2","__field2","__field2","__field3","__field3","__field4","__ignore","__ignore","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cycle","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","in_blocks","in_pool","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_final","lifetime","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","marker","ok_nok_counts","op","public_key","serialize","serialize","serialize","serialize","serialize","signature","status","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_enum","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompactConfig","block_reward","build_massa_settings","compact_config","constants","delta_f0","end_timestamp","genesis_timestamp","massa_settings","max_block_size","operation_validity_periods","periods_per_cycle","roll_price","t0","thread_count","CompactConfig","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","block_reward","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","delta_f0","deserialize","deserialize","end_timestamp","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","genesis_timestamp","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","max_block_size","operation_validity_periods","periods_per_cycle","roll_price","serialize","t0","thread_count","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","ASYNC_POOL_BOOTSTRAP_PART_SIZE","BLOCK_REWARD","BOOTSTRAP_RANDOMNESS_SIZE_BYTES","CHANNEL_SIZE","CONSENSUS_BOOTSTRAP_PART_SIZE","DEFERRED_CREDITS_BOOTSTRAP_PART_SIZE","DELTA_F0","DENUNCIATION_EXPIRE_PERIODS","DOWNTIME_END_TIMESTAMP","DOWNTIME_START_TIMESTAMP","ENDORSEMENT_COUNT","END_TIMESTAMP","EXECUTED_OPS_BOOTSTRAP_PART_SIZE","GENESIS_KEY","GENESIS_TIMESTAMP","HANDSHAKE_RANDOMNESS_SIZE_BYTES","INITIAL_DRAW_SEED","IP_LIST_MAX_SIZE","LAZY","LAZY","LAZY","LAZY","LAZY","LEDGER_COST_PER_BYTE","LEDGER_ENTRY_BASE_SIZE","LEDGER_ENTRY_DATASTORE_BASE_SIZE","LEDGER_PART_SIZE_MESSAGE_BYTES","MAX_ADVERTISE_LENGTH","MAX_ASK_BLOCKS_PER_MESSAGE","MAX_ASYNC_GAS","MAX_ASYNC_MESSAGE_DATA","MAX_ASYNC_POOL_LENGTH","MAX_BLOCK_SIZE","MAX_BOOTSTRAP_ASYNC_POOL_CHANGES","MAX_BOOTSTRAP_BLOCKS","MAX_BOOTSTRAP_CHILDREN","MAX_BOOTSTRAP_CLIQUES","MAX_BOOTSTRAP_DEPS","MAX_BOOTSTRAP_ERROR_LENGTH","MAX_BOOTSTRAP_FINAL_STATE_PARTS_SIZE","MAX_BOOTSTRAP_MESSAGE_SIZE","MAX_BOOTSTRAP_POS_CYCLES","MAX_BOOTSTRAP_POS_ENTRIES","MAX_BYTECODE_LENGTH","MAX_CONSENSUS_BLOCKS_IDS","MAX_DATASTORE_ENTRY_COUNT","MAX_DATASTORE_KEY_LENGTH","MAX_DATASTORE_VALUE_LENGTH","MAX_DEFERRED_CREDITS_LENGTH","MAX_DENUNCIATIONS_PER_BLOCK_HEADER","MAX_DENUNCIATION_CHANGES_LENGTH","MAX_DUPLEX_BUFFER_SIZE","MAX_ENDORSEMENTS_PER_MESSAGE","MAX_EXECUTED_OPS_CHANGES_LENGTH","MAX_EXECUTED_OPS_LENGTH","MAX_FUNCTION_NAME_LENGTH","MAX_GAS_PER_BLOCK","MAX_LEDGER_CHANGES_COUNT","MAX_LEDGER_CHANGES_PER_SLOT","MAX_MESSAGE_SIZE","MAX_OPERATIONS_PER_BLOCK","MAX_OPERATIONS_PER_MESSAGE","MAX_OPERATION_DATASTORE_ENTRY_COUNT","MAX_OPERATION_DATASTORE_KEY_LENGTH","MAX_OPERATION_DATASTORE_VALUE_LENGTH","MAX_PARAMETERS_SIZE","MAX_PRODUCTION_EVENTS_PER_BLOCK","MAX_PRODUCTION_STATS_LENGTH","MAX_RNG_SEED_LENGTH","MAX_ROLLS_COUNT_LENGTH","MIP_STORE_STATS_BLOCK_CONSIDERED","MIP_STORE_STATS_COUNTERS_MAX","NETWORK_CONTROLLER_CHANNEL_SIZE","NETWORK_EVENT_CHANNEL_SIZE","NETWORK_NODE_COMMAND_CHANNEL_SIZE","NETWORK_NODE_EVENT_CHANNEL_SIZE","NODE_SEND_CHANNEL_SIZE","OPERATION_VALIDITY_PERIODS","PERIODS_PER_CYCLE","POOL_CONTROLLER_CHANNEL_SIZE","POS_MISS_RATE_DEACTIVATION_THRESHOLD","POS_SAVED_CYCLES","PROTOCOL_CONTROLLER_CHANNEL_SIZE","PROTOCOL_EVENT_CHANNEL_SIZE","ROLL_COUNT_TO_SLASH_ON_DENUNCIATION","ROLL_PRICE","T0","THREAD_COUNT","VERSION","VERSIONING_THRESHOLD_TRANSITION_ACCEPTED","__private_field","__private_field","__private_field","__private_field","__private_field","__stability","__stability","__stability","__stability","__stability","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","from","from","from","from","from","get_period_from_args","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","build_massa_settings","Datastore","DatastoreDeserializer","DatastoreSerializer","borrow","borrow","borrow_mut","borrow_mut","default","deserialize","from","from","into","into","into_request","into_request","key_deserializer","length_deserializer","new","new","serialize","try_from","try_from","try_into","try_into","type_id","type_id","u64_serializer","value_deserializer","vec_u8_serializer","vzip","vzip","BlockHeader","BlockHeader","BlockHeader","BlockHeader","BlockHeader","BlockHeaderDenunciation","BlockHeaderDenunciationDeserializer","BlockHeaderDenunciationPrecursor","BlockHeaderDenunciationSerializer","BlockHeader__num_enum_0__","BlockHeader__num_enum_0__","DENUNCIATION_TYPE_ID_VARIANT_COUNT","Denunciation","DenunciationDeserializer","DenunciationError","DenunciationIndex","DenunciationIndexDeserializer","DenunciationIndexSerializer","DenunciationIndexTypeId","DenunciationPrecursor","DenunciationSerializer","DenunciationTypeId","Endorsement","Endorsement","Endorsement","Endorsement","Endorsement","EndorsementDenunciation","EndorsementDenunciationDeserializer","EndorsementDenunciationPrecursor","EndorsementDenunciationSerializer","Endorsement__num_enum_0__","Endorsement__num_enum_0__","FIELDS","FIELDS","FIELDS","FIELDS","InvalidInput","Serialization","Signature","VARIANTS","VARIANTS","__Field","__Field","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field1","__field2","__field2","__field3","__field3","__field4","__field4","__field5","__field5","__field6","__ignore","__ignore","__ignore","__ignore","blkh_de_deserializer","blkh_de_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_content_hash","compute_content_hash","compute_hash_for_sig_verif","compute_hash_for_sig_verif","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","endo_de_deserializer","endo_de_serializer","eq","eq","eq","eq","eq","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_public_key","get_public_key","get_slot","get_slot","get_slot","hash","hash","hash","hash_1","hash_1","hash_2","hash_2","hash_deserializer","hash_deserializer","hash_serializer","hash_serializer","id_deserializer","index","index","index_deserializer","index_deserializer","index_serializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_also_for_block_header","is_also_for_endorsement","is_expired","is_for_block_header","is_for_endorsement","is_valid","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","marker","marker","new","new","new","new","new","new","new","new","provide","pubkey_deserializer","pubkey_deserializer","public_key","public_key","public_key","public_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signature_1","signature_1","signature_2","signature_2","signature_deserializer","signature_deserializer","slot","slot","slot","slot","slot_deserializer","slot_deserializer","slot_deserializer","slot_serializer","slot_serializer","slot_serializer","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id_deserializer","type_id_serializer","u32_serializer","u32_serializer","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_enum","visit_map","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","index","slot","slot","ENDORSEMENTID_PREFIX","ENDORSEMENTID_VERSION","ENDORSEMENT_ID_SIZE_BYTES","Endorsement","EndorsementDenunciationData","EndorsementDeserializer","EndorsementDeserializerLW","EndorsementId","EndorsementSerializer","EndorsementSerializerLW","FIELDS","Helper","SecureShareEndorsement","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compute_hash","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","endorsed_block","endorsed_block","eq","eq","equivalent","equivalent","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_ref","from_ref","from_ref","from_str","get_hash","get_hash","hash","hash_deserializer","index","index","index_deserializer","index_deserializer","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","marker","new","new","new","new","new","new","partial_cmp","serialize","serialize","serialize","serialize","slot","slot","slot","slot_deserializer","slot_serializer","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_serializer","u32_serializer","visit_bytes","visit_bytes","visit_map","visit_seq","visit_str","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddressParseError","AmountOverflowError","AmountParseError","BlockIdParseError","BufferError","CheckedOperationError","DeserializeError","DisplayToDisplayDoc","EndorsementIdParseError","ErrorRaised","HashError","InvalidLedgerChange","InvalidRollUpdate","InvalidVersionError","MassaHashError","MassaSignatureError","ModelsError","ModelsResult","NodeIdParseError","OperationIdParseError","OperationPrefixJoinError","OutdatedBootstrapCursor","PathToDisplayDoc","PeriodOverflowError","SerializationError","SerializeError","ThreadOverflowError","TimeError","TimeOverflowError","WrongPrefix","_DERIVE_Display_FOR_ModelsError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","from","from","from","from","from","from","from_ref","into","into_request","provide","source","to_owned","to_string","try_from","try_into","type_id","vzip","EventFilter","FIELDS","FIELDS","TempFileVestingRange","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__field2","__field2","__field3","__field4","__field5","__field6","__ignore","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","emitter_address","end","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_error","is_final","lifetime","lifetime","marker","marker","max_rolls","min_balance","original_caller_address","original_operation_id","serialize","serialize","start","timestamp","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","FIELDS","LedgerChange","LedgerChangeDeserializer","LedgerChangeSerializer","LedgerChanges","LedgerChangesDeserializer","LedgerChangesSerializer","LedgerData","LedgerDataDeserializer","LedgerDataSerializer","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field1","__ignore","__ignore","address_deserializer","address_serializer","amount_deserializer","amount_deserializer","amount_serializer","amount_serializer","apply","apply_change","balance","balance_delta","balance_increment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","clone","clone","clone","clone_into","clone_into","clone_into","clone_subset","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","get_involved_addresses","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_nil","is_nil","ledger_change_deserializer","ledger_change_serializer","length_deserializer","length_serializer","lifetime","lifetime","lifetime","marker","marker","marker","new","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize","sync_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_map","visit_map","visit_newtype_struct","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Helper","NODEID_PREFIX","NODEID_VERSION","NodeId","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","expecting","fmt","fmt","fmt","from","from","from_ref","from_str","get_hash","get_public_key","hash","into","into","into_request","into_request","new","partial_cmp","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","visit_bytes","visit_str","vzip","vzip","CallSC","CallSC","CallSC__num_enum_0__","ExecuteSC","ExecuteSC","ExecuteSC__num_enum_0__","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","Helper","OPERATIONID_PREFIX","OPERATIONID_VERSION","OPERATION_ID_PREFIX_SIZE_BYTES","OPERATION_ID_SIZE_BYTES","Operation","OperationDeserializer","OperationId","OperationIdDeserializer","OperationIdSerializer","OperationIdsDeserializer","OperationIdsSerializer","OperationPrefixId","OperationPrefixIdDeserializer","OperationPrefixIds","OperationPrefixIdsDeserializer","OperationPrefixIdsSerializer","OperationSerializer","OperationType","OperationTypeDeserializer","OperationTypeId","OperationTypeSerializer","OperationsDeserializer","OperationsSerializer","RollBuy","RollBuy","RollBuy__num_enum_0__","RollSell","RollSell","RollSell__num_enum_0__","SecureShareOperation","Transaction","Transaction","Transaction__num_enum_0__","VARIANTS","__DeserializeWith","__DeserializeWith","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__SerializeWith","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field1","__field2","__field2","__field2","__field2","__field3","__field3","__field3","__field4","__field4","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","address_deserializer","address_serializer","amount_deserializer","amount_deserializer","amount_serializer","amount_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data_deserializer","datastore_deserializer","datastore_serializer","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expire_period","expire_period_deserializer","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","function_name_deserializer","function_name_serializer","get_gas_usage","get_hash","get_hash","get_hash","get_ledger_involved_addresses","get_max_spending","get_roll_involved_addresses","get_validity_range","hash","hash","hash_deserializer","hash_deserializer","id_deserializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_prefix","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","length_deserializer","length_deserializer","length_deserializer","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","marker","marker","marker","marker","max_gas_deserializer","new","new","new","new","new","new","new","new","new","new","new","new","new","new","op","op_type_deserializer","op_type_serializer","parameter_deserializer","partial_cmp","partial_cmp","phantom","phantom","phantom","pref_deserializer","prefix","rolls_number_deserializer","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signed_op_deserializer","signed_op_serializer","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_serializer","u32_serializer","u32_serializer","u32_serializer","u64_serializer","u64_serializer","value","value","values","vec_u8_serializer","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_newtype_struct","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","amount","coins","data","datastore","max_coins","max_gas","max_gas","param","recipient_address","roll_count","roll_count","target_addr","target_func","EventExecutionContext","FIELDS","FIELDS","SCOutputEvent","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__field2","__field3","__field4","__field5","__field6","__field7","__ignore","__ignore","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_stack","clone","clone","clone_into","clone_into","context","data","deserialize","deserialize","deserialize","deserialize","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","index_in_slot","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_error","is_final","lifetime","lifetime","marker","marker","origin_operation_id","read_only","serialize","serialize","slot","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BuildHashMapper","CapacityAllocator","HashMapper","PreHashMap","PreHashSet","PreHashed","borrow","borrow_mut","default","finish","from","hash","into","into_request","source","try_from","try_into","type_id","vzip","with_capacity","with_capacity","with_capacity","write","FIELDS","RollCompensation","RollCounts","RollUpdate","RollUpdateDeserializer","RollUpdateSerializer","RollUpdates","__Field","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field1","__ignore","apply","apply_updates","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_subset","clone_subset","compensate","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_involved_addresses","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_nil","len","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","new","new","new","roll_purchases","roll_sales","serialize","serialize","serialize","serialize","serialize","sync_from","sync_from","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64_deserializer","u64_serializer","visit_bytes","visit_map","visit_newtype_struct","visit_newtype_struct","visit_newtype_struct","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","Id","SecureShare","SecureShareContent","SecureShareDeserializer","SecureShareSerializer","__Field","__FieldVisitor","__Visitor","__field0","__field2","__field3","__field4","__field5","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_count","clone","clone_into","compute_hash","contains_operation","content","content_creator_address","content_creator_pub_key","content_deserializer","default","deserialize","deserialize","deserialize","deserialize","deserialize_with","eq","equivalent","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","get_fitness","get_fitness","get_gas_usage","get_hash","get_ledger_involved_addresses","get_max_spending","get_roll_involved_addresses","get_validity_range","id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","marker","marker_t","new","new","new","new_verifiable","public_key_deserializer","serialize","serialize","serialize","serialize_with","serialized_data","serialized_size","signature","signature_deserializer","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_signature","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","BitVecDeserializer","BitVecSerializer","DeserializeMinBEInt","IpAddrDeserializer","IpAddrSerializer","MIN_BE_INT_BASE_SIZE","PreHashSetDeserializer","PreHashSetSerializer","SerializeMinBEInt","StringDeserializer","StringSerializer","VecDeserializer","VecSerializer","VecU8Deserializer","VecU8Serializer","array_from_slice","be_bytes_min_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_deserializer","data_deserializer","data_serializer","data_serializer","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","from","from","from","from","from","from","from","from","from","from","from","from","from_be_bytes_min","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","len_serializer","len_serializer","len_serializer","length_deserializer","length_serializer","marker_l","marker_l","new","new","new","new","new","new","new","new","new","new","new","new","phantom_t","phantom_t","phantom_t","phantom_t","serialize","serialize","serialize","serialize","serialize","serialize","to_be_bytes_min","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_deserializer","u32_serializer","u8_from_slice","varint_u64_deserializer","varint_u64_deserializer","varint_u64_deserializer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","FIELDS","IndexedSlot","SLOT_KEY_SIZE","Slot","SlotDeserializer","SlotSerializer","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__ignore","__ignore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes_key","from_ref","from_ref","from_ref","from_str","get_cycle","get_first_bit","get_hash","get_hash","get_next_slot","get_prev_slot","hash","hash","index","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_first_of_cycle","is_last_of_cycle","lifetime","lifetime","marker","marker","max","min","new","new","new","new_first_of_cycle","new_last_of_cycle","partial_cmp","period","period_deserializer","range_thread","serialize","serialize","serialize","slot","slots_since","thread","to_bytes_key","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64_serializer","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConsensusStats","ExecutionStats","FIELDS","FIELDS","FIELDS","FIELDS","NetworkStats","PoolStats","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field2","__field2","__field2","__field3","__field3","__field3","__field4","__field4","__field4","__ignore","__ignore","__ignore","__ignore","active_cursor","active_node_count","banned_peer_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clique_count","clone","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end_timespan","endorsement_count","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","final_block_count","final_block_count","final_executed_operations_count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","in_connection_count","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","known_peer_count","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","operation_count","out_connection_count","serialize","serialize","serialize","serialize","stale_block_count","start_timespan","time_window_end","time_window_start","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Finished","Ongoing","Started","StreamingStep","StreamingStepDeserializer","StreamingStepSerializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data_deser","data_serializer","deserialize","eq","equivalent","finished","fmt","from","from","from","from_ref","into","into","into","into_request","into_request","into_request","new","new","opt_deser","option_serializer","phantom_t","phantom_t","serialize","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u64_deser","u64_serializer","vzip","vzip","vzip","get_block_slot_timestamp","get_closest_slot_to_timestamp","get_current_latest_block_slot","get_latest_block_slot_at_timestamp","slot_count_in_range","time_range_to_slot_range","INSTANCE_LEN","Version","VersionDeserializer","VersionSerializer","VersionVisitor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","deserialize","deserialize","eq","equivalent","expecting","fmt","fmt","fmt","from","from","from","from","from_ref","from_str","instance","into","into","into","into","into_request","into_request","into_request","into_request","is_compatible","major","minor","new","new","serialize","serialize","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u32_deserializer","u32_serializer","visit_str","vzip","vzip","vzip","vzip"],"q":["massa_models","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::active_block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::addressmassa_models::amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::blockmassa_models::block_header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::block_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::bytecode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::clique","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::compositemassa_models::config","","","","","","","","","","","","","","","massa_models::config::compact_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::config::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::config::massa_settings","massa_models::datastore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::denunciationmassa_models::denunciation::DenunciationIndex","","","massa_models::endorsementmassa_models::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::execution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::ledgermassa_models::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::operationmassa_models::operation::OperationType","","","","","","","","","","","","","massa_models::output_event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::prehash","","","","","","","","","","","","","","","","","","","","","","","massa_models::rolls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::secure_share","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::serializationmassa_models::slotmassa_models::statsmassa_models::streaming_step","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_models::timeslots","","","","","","massa_models::version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["active blocks related structures","address related structures","amount related structures","block structure Copyright (c) 2022 MASSA LABS …","block-related structure: block_header","block-related structure: block_id","bytecode structures","clique","various structures","node configuration Main node configuration and all that …","datastore serialization / deserialization","denunciation","endorsements","models error","execution related structures","ledger related structures","mapping grpc","node related structure","operations","smart contract output events","pre-hashed trait, for hash less hashmap/set","rolls","trait for massa_signature::Signature secured data-structs","serialization","slots","various statistics Copyright (c) 2022 MASSA LABS …","bootstrap streaming cursor","management of the relation between time and slots warning: …","versions","Block that was checked as valid, with some useful …","","","","","","","","","","","","","","The id of the block","","","","","","","","","one <code>HashMap&lt;Block id, period&gt;</code> per thread (blocks that need …","","","The creator’s address","Blocks id that have this block as an ancestor","","","","","Fitness","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","for example has its fitness reached the given threshold","","","one (block id, period) per thread ( if not genesis )","","Slot of the block.","","","","","","","","","","","","","","","","","","","","","","","","Size of a serialized address, in bytes","","Top level address representation that can differentiate …","Deserializer for <code>Address</code>","Serializer for <code>Address</code>","","","Info for a given address on a given cycle","","","In the near future, this will encapsulate slot, idx, and …","","","","Derived from a public key.","","","","","","","","","","number of active rolls the address had at that cycle (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cycle number","","","Example","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Computes address associated with given public key","","","","","","","Example","","","","Gets the associated thread. Depends on the <code>thread_count</code>","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","true if that cycle is final","","","Serializes an <code>Address</code> into a <code>Vec&lt;u8&gt;</code>","Creates a new deserializer for <code>Address</code>","<code>ok_count</code> blocks were missed by this address during that …","<code>ok_count</code> blocks were created by this address during that …","","","","Inner implementation for serializer. Mostly made available …","","","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","decimal factor for the internal representation","A structure representing a decimal Amount of coins with …","Deserializer for amount","Serializer for amount","","Maximum amount","Minimum amount","","","","","","","","","safely add self to another amount, returning None on …","safely divide self by a <code>u64</code>, returning None if the factor …","safely multiply self with a <code>u64</code>, returning None on overflow","safely subtract another amount from self, returning None …","","","","","","","","","","","Example","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an Amount from the form <code>mantissa / (10^scale)</code> …","constructs an <code>Amount</code> from the underlying raw <code>u64</code> …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","returns true if the amount is zero","Create a new <code>AmountSerializer</code>","Create a new <code>AmountDeserializer</code>","","safely add self to another amount, saturating the result …","safely multiply self with a <code>u64</code>, saturating the result on …","safely subtract another amount from self, saturating the …","","Example","","","","Obtains the underlying raw <code>u64</code> representation Warning: do …","","","","","","","","","","","","","","","","","","","","","Create a zero Amount","active in alternative cliques","active in blockclique","block","Deserializer for <code>Block</code>","Parameters for the deserializer of a block","Block status within the graph","Serializer for <code>Block</code>","discarded for any reason","","","filled block","forever applies","received but not yet graph-processed","not found in graph","Block with assosciated meta-data and interfaces allowing …","","waiting for a missing dependency","waiting for its slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","size in bytes of the whole block","","","","","true if given operation is included in the block","","Example:","","","","","","","","Number of endorsements in a block","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","returns the fitness of the block","signed header","signed header","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","If Some(lsp), this will through if trying to deserialize a …","","","","","","","Max denunciations in a block","Maximum of operations in a block","Creates a new <code>BlockSerializer</code>","Creates a new <code>BlockDeserializer</code>","","","","operations ids","operations","Example:","","","","","Number of threads in Massa","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block header","A denunciation data for block header","Deserializer for <code>BlockHeader</code>","Serializer for <code>BlockHeader</code>","","","","","BlockHeader wrapped up alongside verification data","","","","","","","","","","","","","","","","","","","","","","","","","","Compute hash for Block header in SecuredHeader - taking …","","","","","denunciations","Example:","","","","","","","","endorsements","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","gets the header fitness","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Creates a new <code>BlockHeaderSerializer</code>","Creates a new <code>BlockHeaderDeserializer</code> If last_start_period …","Create a new DenunciationData for block hedader","all operations hash","parents","Example:","","slot","","","","","Get byte array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Size in bytes of a serialized block ID","block id","Deserializer for <code>BlockId</code>","Serializer for <code>BlockId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","block id from bytes","","","","Example","first bit of the hashed block id","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","block id into bytes","","","","","","Creates a new serializer for <code>BlockId</code>","Creates a new deserializer for <code>BlockId</code>","","","","block id to bytes","","","","","","","","","","","","","","","","","","","","","","","Current version of the bytecode","Structure representing executable bytecode","Deserializer for <code>Bytecode</code>","Serializer for <code>Bytecode</code>","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new <code>LedgerEntryDeserializer</code>","Creates a new <code>BytecodeSerializer</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Mutually compatible blocks in the graph","Basic deserializer for <code>Clique</code>","Basic serializer for <code>Clique</code>","","","","","","","","","","the block ids of the blocks in that clique","","","","","","","","","","","","","","","","","","","Example","","","","","Fitness used to compute finality Depends on descendants …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","True if it is the clique of higher fitness","","","Creates a <code>CliqueDeserializer</code>","Creates a <code>CliqueSerializer</code>","","Example","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the block has been processed and is valid","the block is discarded","discarded","","","","in a block, the block being in …","the block hasn’t been processed by consensus yet","operation info","Status in which an operation can be (derived from the …","Status in which an operation can be","in pool","just a public key and a signature it has produced used for …","all the production stats for every known staker","","","the block waits for dependencies for further processing","the block waits for it’s slot for further processing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cycle number","","","","","","","","","","","","","","","","","","","","","combine two operation search result","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","maps block id to index on the operation in the block and …","true if in pool","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","if that cycle is final","","","","","","","","","","","map address to produced valid block count and not valid …","the operation","public key","","","","","","signature","operation status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compact representation of key values of consensus …","Reward amount for a block creation","Merge the settings","","DEFAULT VALUES USED TO INITIALIZE DIVERS CONFIGURATIONS …","Threshold for fitness.","TESTNET: time when the blockclique is ended.","Time in milliseconds when the blockclique started.","Build a settings for an object that implement …","Max total size of a block","Maximum operation validity period count","cycle duration in periods","Price of a roll on the network","Time between the periods in the same thread.","Number of threads","Compact representation of key values of consensus …","","","","","","","","","","","","","","","","Reward amount for a block creation","","","","","","","","","","","","Threshold for fitness.","","","TESTNET: time when the blockclique is ended.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Time in milliseconds when the blockclique started.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Max total size of a block","Maximum operation validity period count","cycle duration in periods","Price of a roll on the network","","Time between the periods in the same thread.","Number of threads","","","","","","","","","","","","","","","","","","","","","","","","Maximum async messages in a batch of the bootstrap of the …","Block reward is given for each block creation","Size of the random bytes array used for the bootstrap, …","Consensus static parameters (defined by protocol used) …","Maximum number of consensus blocks in a bootstrap batch","Maximum proof-of-stake deferred credits in a bootstrap …","Threshold for fitness.","denunciation expiration delta","End of the downtime simulation","Start of the downtime simulation","Number of endorsement","TESTNET: time when the blockclique is ended.","Maximum executed ops per slot in a bootstrap batch","<code>KeyPair</code> to sign genesis blocks.","Time in milliseconds when the blockclique started. In …","Length of the handshake random signature","Proof of stake seed for the initial draw","Max size of the IP list","","","","","","Cost to store one byte in the ledger","Cost for a base entry (address + balance (5 bytes …","Cost for a base entry datastore 10 bytes constant to avoid …","Maximum size batch of data in a part of the ledger","Limit on the number of peers we advertise to others.","Max number of hash in the message <code>AskForBlocks</code>","Maximum of GAS allowed for asynchronous messages execution …","Maximum data size in async message","Maximum capacity of the asynchronous messages pool","Maximum block size in bytes","Max async pool changes","Max number of blocks we provide/ take into account while …","Max number of child nodes","max bootstrapped cliques","max bootstrapped dependencies","Max size of the printed error","Max bytes in final states parts","Max message size for bootstrap","Max number of cycles in PoS bootstrap","Max number of address and random entries for PoS bootstrap","Maximum length of a datastore value","Maximum number of consensus block ids when sending a …","Maximum number of key/values in the datastore of a ledger …","Maximum length of a datastore key","Maximum length of a datastore value","Maximum size proof-of-stake deferred credits","Max number of denunciations that can be included in a …","Maximum size of processed denunciations","max duplex buffer size","Max number of endorsements per message","Maximum size of executed ops changes","Maximum size of executed ops","Maximum length function name in call SC","Maximum of GAS allowed for a block","Maximum ledger changes count","Maximum ledger changes in a block","Maximum message length in bytes","Maximum number of operations per block","Max number of operations per message","Maximum number of key/values in the datastore of a …","Maximum length of an operation datastore key","Maximum length of an operation datastore value","Maximum size of parameters in call SC","Maximum production events in a block","Maximum size of proof-of-stake production stats","Maximum length of <code>rng_seed</code> in thread cycle","Maximum size of proof-of-stake rolls","Block count to process in MipStoreStats (for state change …","Max number of stats counters","network controller communication channel size","network event channel size","network node command channel size","network node event channel size","node send channel size","Maximum operation validity period count","cycle duration in periods","Pool controller channel size","number of cycle misses (strictly) above which stakers are …","PoS saved cycles: number of cycles saved in <code>PoSFinalState</code>","Protocol controller channel size","Protocol event channel size","Number of roll to remove per denunciation","Price of a roll in the network","Time between the periods in the same thread.","Number of threads","node version","Threshold to accept a new versioning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Helper function to parse args for lazy_static evaluations","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Merge the settings","Datastore entry for Ledger &amp; <code>ExecuteSC</code> Operation A …","Deserializer for <code>Datastore</code> field in <code>LedgerEntry</code>","Serializer for <code>Datastore</code>","","","","","","Example","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a new <code>DatastoreDeserializer</code>","Creates a new <code>DatastoreSerializer</code>","Example","","","","","","","","","","","","","","Variant for Block header denunciation index","","Block header variant","A Variant of Denunciation enum for block header","Deserializer for <code>BlockHeaderDenunciation</code>","DenunciationPrecursor variant for block header","Serializer for <code>BlockHeaderDenunciation</code>","","","","A denunciation enum","Deserializer for <code>Denunciation</code>","Denunciation error","Index for Denunciations in collections (e.g. like a HashMap…","Deserializer for <code>DenunciationIndex</code>","Serializer for <code>DenunciationIndex</code>","","Lightweight data for Denunciation creation (avoid storing …","Serializer for <code>Denunciation</code>","","","","Variant for Endorsement denunciation index","","Endorsement variant","A Variant of Denunciation enum for endorsement","Deserializer for <code>EndorsementDenunciation</code>","DenunciationPrecursor variant for endorsement","Serializer for <code>EndorsementDenunciation</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute hash for Endorsement content","Compute hash for Block header content","Rebuild full hash of SecureShareEndorsement from given …","Rebuild full hash of SecuredHeader from given arguments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Compute the hash","","Get Denunciation public key ref","Get field: pub key","Get Denunciation slot ref","Get field: slot","Get field: slot","","secured header partial hash","secured header partial hash","","","","","","","","","","","endorsement index","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if it is a Denunciation for this block header","Check if it is a Denunciation for this endorsement","For a given slot (and given the slot at now()), check if …","Check if it is a Denunciation of several block headers","Check if it is a Denunciation of several endorsements","Check if Denunciation is valid Should be used if received …","","","","","","","","","","","","","Creates a new <code>EndorsementDenunciationSerializer</code>","Creates a new <code>EndorsementDeserializer</code>","Creates a new <code>BlockHeaderDenunciationSerializer</code>","Creates a new <code>BlockHeaderDenunciationDeserializer</code>","Creates a new <code>BlockHeaderDenunciationSerializer</code>","Creates a new <code>DenunciationDeserializer</code>","Creates a new <code>DenunciationIndexSerializer</code>","Creates a new <code>DenunciationIndexDeserializer</code>","","","","","","secure share endorsement public key","secured header public key","","","","","","","","","secured header signature","secured header signature","","","","","","","","","endorsement slot","block header slotde index","de slot","de slot","","","Endorsement ID size in bytes","an endorsement, as sent in the network","A denunciation data for endorsement","Deserializer for <code>Endorsement</code>","Lightweight Deserializer for <code>Endorsement</code>","endorsement id","Serializer for <code>Endorsement</code>","Lightweight Serializer for <code>Endorsement</code> When included in a …","","","Wrapped endorsement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute hash for Endorsement in SecuredHeader - taking …","","","Example:","Example:","","","","","Hash of endorsed block. This is the parent in thread …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","endorsement id from bytes","","","","Example","","","","","","Endorsement index inside the including block","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","endorsement id into bytes","","","","","","","","","","","","","","Creates a new <code>EndorsementDeserializer</code>","Creates a new <code>EndorsementSerializerLW</code>","Creates a new <code>EndorsementDeserializerLW</code>","Create a new denunciation data for endorsement","","Creates a new <code>EndorsementSerializer</code>","","Example:","","","Example:","","","Slot in which the endorsement can be included","","","Get byte array","endorsement id to bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","address parsing error: {0}","Ledger changes, Amount overflow","amount parse error","block id parsing error","buffer error: {0}","checked operation error","Deserialization error: {0}","","endorsement id parsing error","Error raised {0}","hashing error","invalid ledger change: {0}","invalid roll update: {0}","invalid version identifier: {0}","<code>MassaHash</code> error: {0}","<code>massa_signature</code> error: {0}","models error","models error","node id parsing error","operation id parsing error","Wrong operation id size deduced on join","Outdated bootstrap cursor","","period overflow error","Serialization error: {0}","Serialization error: {0}","thread overflow error","Time error {0}","Time overflow error","Wrong prefix for hash: expected {0}, got {1}","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","filter used when retrieving SC output events","","","Used for Deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","optional emitter address","optional end slot","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","optional execution status","optional event status","","","","","max rolls","minimal balance","optional caller address","optional operation id","","","optional start slot","start timestamp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A balance change that can be applied to an address","Basic deserializer for <code>LedgerChange</code>","Basic serializer for <code>LedgerChange</code>","Map an address to a <code>LedgerChange</code>","Basic deserializer for <code>LedgerChanges</code>","Basic serializer for <code>LedgerChanges</code>","a consensus ledger entry","Basic deserializer for <code>LedgerData</code>","Basic serializer for <code>LedgerData</code>","","","","","","","","","","","","","","","","","","","applies a <code>LedgerChange</code>","apply a <code>LedgerChange</code> for an entry Can fail in overflow or …","the balance in coins","Amount to add or subtract","whether to increment or decrements balance of delta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies another ledger change on top of self","chain with another <code>LedgerChange</code>","","","","","","","clone subset","","","","","","","","","Example:","Example","Example","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","addresses that are impacted by these ledger changes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","returns true if the balance is zero","true if the change is 0","","","","","","","","","","","Creates a <code>LedgerDataDeserializer</code>","Creates a <code>LedgerChangeDeserializer</code>","Creates a <code>LedgerChangesSerializer</code>","Creates a <code>LedgerChangesDeserializer</code>","new <code>LedgerData</code> from an initial balance","Creates a <code>LedgerDataSerializer</code>","Creates a <code>LedgerChangeSerializer</code>","","","Example:","","Example","","merge another ledger changes into self, overwriting …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>NodeId</code> wraps a public key to uniquely identify a node.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Example","","Get the public key of the <code>NodeId</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new <code>NodeId</code> from a public key.","","","","","","","","","","","","","","","","Calls an exported function from a stored smart contract","","","Execute a smart contract.","","","","","","","","","","","Size in bytes of the serialized operation ID prefix","Size in bytes of the serialized operation ID","the operation as sent in the network","Serializer for <code>Operation</code>","operation id","Deserializer for <code>OperationId</code>","Serializer for <code>OperationId</code>","Deserializer for <code>Vec&lt;OperationId&gt;</code>","Serializer for <code>Vec&lt;OperationId&gt;</code>","Left part of the operation id hash stored in a vector of …","Deserializer for <code>OperationPrefixId</code>","Set of operation id’s prefix","Deserializer for <code>OperationPrefixIds</code>","Serializer for <code>OperationPrefixIds</code>","Serializer for <code>Operation</code>","Type specific operation content","Deserializer for <code>OperationType</code>","","Serializer for <code>OperationType</code>","Deserializer for <code>Operations</code>","Serializer for <code>Operations</code>","","the sender buys <code>roll_count</code> rolls. Roll price is defined in …","","","the sender sells <code>roll_count</code> rolls. Roll price is defined …","","signed operation","","transfer coins from sender to recipientxample:","Example:","Example:","Example:","Example:","","","","","","","","","","","","","","","Example:","","","","","","","","","","","","","","","","","","","","","","","","after <code>expire_period</code> slot the operation won’t be included …","","the fee they have decided for this operation","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","get prefix of the operation id of size …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","op id from bytes","","","","","","","Example","","","Get the max amount of gas used by the operation (<code>max_gas</code>)","","","","get the addresses that are involved in this operation from …","Gets the maximal amount of coins that may be spent by this …","get the addresses that are involved in this operation from …","get the range of periods during which an operation is valid","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","op id into bytes","convert the <code>OperationId</code> into a <code>OperationPrefixId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>OperationSerializer</code>","Creates a <code>OperationDeserializer</code>","Creates a new <code>OperationTypeSerializer</code>","Creates a new <code>OperationTypeDeserializer</code>","Creates a new <code>OperationIdsSerializer</code>","Creates a new <code>OperationIdsDeserializer</code>","Creates a new <code>OperationIdsDeserializer</code>","Creates a new <code>OperationIdsSerializer</code>","Creates a new <code>OperationsSerializer</code>","Creates a new <code>OperationsDeserializer</code>","","Creates a new serializer for <code>OperationId</code>","Creates a new deserializer for <code>OperationId</code>","Creates a deserializer for <code>OperationPrefixId</code>","the type specific operation part","","","","","","","","","","get a prefix from the <code>OperationId</code> by copying it","","Example:","Example:","Example:","","Example:","","","","","","","","","op id to bytesamount","Extra coins that are spent from the caller’s balance and …","Smart contract bytecode.","A key-value store associating a hash to arbitrary bytes","Max amount of coins allowed to be spent by the execution","The maximum amount of gas that the execution of the …","The maximum amount of gas that the execution of the …","Parameter to pass to the target function","recipient address","roll count","roll count","Target smart contract address","Target function name. No function is called if empty.","Context of the event (not generated by the user)","","","By product of a byte code execution","","","","","","","","","","","","","","","","","","","block id if there was a block at that slot","","","","","","","","","","","","","","","","","most recent at the end","","","","","context generated by the execution context","json data string","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","index of the event in the slot","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","if the sc that emitted this event failed","if the event is final","","","","","origin operation id","if the event was generated during a read only execution","","","when was it generated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>BuildHasherDefault</code> specialization for <code>HashMapper</code>","Trait allowing pre-allocations","A <code>Hasher</code> for <code>PreHashed</code> keys that is faster because it …","<code>HashMap</code> specialization for <code>PreHashed</code> keys This hashmap is …","<code>HashSet</code> specialization for <code>PreHashed</code> keys This hashset is …","A trait indicating that its carrier is already a hash with …","","","","finish the hashing process and return the truncated <code>u64</code> …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","pre-allocate with a given capacity","pre-allocate with a given capacity","pre-allocate with a given capacity","write the bytes of a <code>PreHashed</code> key into the <code>HashMapper</code> …","","just a <code>u64</code> to keep track of the roll sells and buys during …","counts the roll for each address","roll sales and purchases","Deserializer for <code>RollUpdate</code>","Serializer for <code>RollUpdate</code>","maps addresses to roll updates","","","","","","","","","","applies a <code>RollUpdate</code>, compensates and returns compensation","applies <code>RollUpdates</code> to self with compensations","","","","","","","","","","","","","","","","","","","","","","","","","chain two roll updates, compensate and return compensation …","chains with another <code>RollUpdates</code>, compensates and returns …","","","","","","","","","get the roll update for a subset of addresses","get roll counts for a subset of addresses.","compensate a roll update, return compensation count","","","","","Example:","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","the addresses impacted by the updates","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns true if the <code>RollCounts</code> contains no elements.","true if the update has no effect","Returns the number of elements in the <code>RollCounts</code>.","","","","","","","","","Creates a new <code>RollUpdateSerializer</code>","Creates a new <code>RollUpdateDeserializer</code>","Makes a new, empty <code>RollCounts</code>.","roll purchases","roll sales","Example:","","","","","merge another roll updates into self, overwriting existing …","merge another roll counts into self, overwriting existing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used by signed structure","Packages type T such that it can be securely sent and …","Trait that define a structure that can be signed for …","Deserializer for SecureShare structure","Serializer for <code>SecureShare</code> structure","","","","","","","","","","","","","","","","","","","","","","size in bytes of the whole block","","","Compute hash","true if given operation is included in the block","Reference contents. Not required for the the security …","Derived from the same public key used to generate the …","The public-key component used in the generation of the …","","","Deserialize the secured structure","","","","This method is used deserialize data that has been …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","gets the header fitness","returns the fitness of the block","Get the max amount of gas used by the operation (<code>max_gas</code>)","Get a reference to the underlying hash","get the addresses that are involved in this operation from …","Gets the maximal amount of coins that may be spent by this …","get the addresses that are involved in this operation from …","get the range of periods during which an operation is valid","A secure hash of the data. See also massa_hash::Hash","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","New id from hash","Creates a new <code>SecureShareDeserializer</code>","Creates a new <code>SecureShareSerializer</code>","Using the provided key-pair, applies a cryptographic …","","Serialize the secured structure","","","This method is used to serialize a <code>SecureShare</code> structure …","Content in sharable, deserializable form. Is used in the …","get full serialized size","A cryptographically generated value using <code>serialized_data</code> …","","","","","","","","","","","","","","","","","","","","","","check if self has been signed by public key","","","","","","","","","","","","<code>BitVec&lt;u8&gt;</code> Deserializer","<code>BitVec&lt;u8&gt;</code> Serializer","Deserialize min big endian","Deserializer for <code>IpAddr</code>","Serializer for <code>IpAddr</code>","min big endian integer base size","Basic <code>PreHashSet&lt;_&gt;</code> deserializer","Basic <code>PreHashSet&lt;_&gt;</code> serializer","Serialize min big endian integer","Deserializer for <code>String</code> with generic deserializer for the …","Serializer for <code>String</code> with generic serializer for the size …","Basic <code>Vec&lt;_&gt;</code> deserializer","Basic <code>Vec&lt;_&gt;</code> serializer","Basic <code>Vec&lt;u8&gt;</code> deserializer","Basic <code>Vec&lt;u8&gt;</code> serializer","array from slice","Compute the minimal big endian deserialization size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserializes a minimally sized big endian integer to Self …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a <code>StringSerializer</code>.","Creates a <code>StringDeserializer</code>.","Create a new <code>BitVec&lt;u8&gt;</code> Serializer","Create a new <code>BitVec&lt;u8&gt;</code> Deserializer","Creates a <code>IpAddrSerializer</code>","Creates a <code>IpAddrDeserializer</code>","Creates a new <code>VecU8Serializer</code>","Creates a new <code>VecU8Deserializer</code>","Creates a new <code>VecSerializer</code>","Creates a new <code>VecDeserializer</code>","Creates a new <code>PreHashSetSerializer</code>","Creates a new <code>PreHashSetDeserializer</code>","","","","","","","","","","","serializes with the minimal amount of big endian bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>u8</code> from slice","","","","","","","","","","","","","","","","","","When an address is drawn to create an endorsement it is …","size of the slot key representation","a point in time where a block is expected","Basic <code>Slot</code> Deserializer","Basic serializer for <code>Slot</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserializes a slot from its fixed-size sortable binary …","","","","","cycle associated to that slot","first bit of the slot, for seed purpose","","","Returns the next Slot","Returns the previous Slot","","","endorsement index in the slot","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","check if the slot is first in the cycle","check if the slot is last in the cycle","","","","","returns the maximal slot","returns the minimal slot","new slot from period and thread","Creates a <code>SlotSerializer</code>","Creates a <code>SlotDeserializer</code>","create the first slot of a given cycle","create the last slot of a given cycle","","period","","","","","","slot","Counts the number of slots since the one passed in …","thread","Returns a fixed-size sortable binary key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stats produced by consensus module","execution statistics","","","","","stats produced by network module","stats produced by pool module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","active execution cursor slot","active node count","banned node count","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","number of actives cliques","","","","","","","","","","","end of the time span for stats","number of endorsement in the pool","","","","","","","","","number of final blocks in the time window","number of final blocks","number of final executed operations in the time window","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","in connections count","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","total known peers count","","","","","","","","","number of operations in the pool","out connections count","","","","","number of stale blocks in memory","start of the time span for stats","time window end","time window start","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finished step, after all the information has been streamed","Ongoing step, as long as you are streaming","Started step, only when launching the streaming","Streaming step cursor","<code>StreamingStep</code> deserializer","<code>StreamingStep</code> serializer","","","","","","","","","","","","","","Indicates if the current step if finished or not without …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new <code>StreamingStep</code> serializer","Creates a new <code>StreamingStep</code> deserializer","","","","","","","","","","","","","","","","","","","","","Gets timestamp in milliseconds for given slot.","TODO DOC","Returns the thread and block slot index of the current …","Returns the thread and block period index of the latest …","Counts the number of slots in a slot range [a, b)","Turns an <code>MassaTime</code> range [start, end) with optional …","","Application version, checked during handshakes","Serializer for <code>Version</code>","Serializer for <code>Version</code>","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","ASCII uppercase alpha","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","true if instance and major are the same","","","Creates a <code>VersionSerializer</code>","Creates a <code>VersionSerializer</code>","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,1,1,3,4,7,1,3,4,7,1,1,1,1,1,1,3,4,7,1,1,4,7,1,3,4,7,1,1,3,4,7,1,3,4,7,1,7,7,1,1,1,1,1,3,4,7,1,3,4,7,1,3,4,7,4,7,7,4,4,1,3,4,7,0,0,0,0,0,0,0,0,0,0,13,0,0,0,13,0,0,0,0,24,24,24,24,24,24,18,26,27,13,14,15,16,17,18,24,28,29,26,27,13,14,15,16,17,18,24,28,29,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,18,16,13,17,18,24,13,14,15,13,14,15,26,27,28,29,26,27,13,13,18,28,29,26,27,13,14,14,15,15,16,17,18,24,28,29,13,13,14,15,16,17,18,13,13,14,15,13,13,14,15,13,17,17,26,27,13,14,15,16,17,18,24,28,29,26,27,13,14,15,16,17,18,24,28,29,18,29,29,16,17,18,18,13,14,15,13,0,13,16,18,13,14,15,16,17,18,13,26,27,13,14,15,16,17,18,24,28,29,26,27,13,14,15,16,17,18,24,28,29,26,27,13,14,15,16,17,18,24,28,29,0,26,27,28,29,29,26,28,28,26,27,13,14,15,16,17,18,24,28,29,0,0,0,0,0,39,39,42,39,40,41,42,39,40,41,39,39,39,39,39,40,41,39,40,41,39,39,40,39,41,39,39,42,42,39,39,42,39,40,41,39,39,39,40,41,39,42,39,40,41,42,39,40,41,39,40,41,39,39,39,39,39,40,39,40,41,39,39,42,39,40,41,42,39,40,41,42,39,40,41,41,40,42,42,39,40,41,39,58,58,0,0,0,0,0,58,0,0,0,58,58,58,0,0,58,58,0,0,0,0,0,0,0,0,0,56,57,59,56,57,59,59,59,59,59,59,59,56,57,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,45,46,47,46,47,45,49,50,46,46,56,47,57,58,59,66,58,58,60,61,62,63,64,65,46,46,60,61,47,62,63,58,64,65,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,46,47,45,46,47,50,49,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,66,61,63,65,61,63,65,66,66,49,50,46,50,49,46,47,49,46,46,47,58,66,46,47,46,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,60,62,64,65,61,63,61,63,60,62,64,60,62,64,49,66,50,46,56,60,61,47,57,62,63,58,59,64,65,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,74,74,74,74,72,73,70,74,75,76,77,72,73,70,74,75,76,77,70,70,70,72,73,73,72,70,73,70,74,72,73,73,72,73,70,75,76,70,70,75,76,77,72,73,70,74,75,76,77,70,78,73,72,73,70,74,75,76,77,72,73,70,74,75,76,77,73,76,76,72,73,77,70,70,72,70,70,77,73,72,73,77,70,70,72,73,70,74,75,76,77,72,73,70,74,75,76,77,72,73,70,74,75,76,77,72,75,76,76,75,75,72,73,70,74,75,76,77,0,0,0,0,0,0,0,80,83,81,82,80,83,81,82,80,81,82,80,81,82,80,81,82,80,82,80,80,83,80,80,83,80,83,81,82,80,80,81,82,80,80,80,80,80,82,80,83,81,82,80,80,83,81,82,80,81,82,80,80,81,80,80,81,82,80,80,83,81,82,80,83,81,82,80,83,81,82,83,83,80,83,81,82,0,0,0,0,0,86,84,87,85,86,84,87,85,84,84,84,85,86,84,84,84,87,84,87,86,84,87,85,84,86,84,87,85,86,84,87,85,87,87,86,85,84,85,84,86,84,87,85,86,84,87,85,86,84,87,85,86,85,86,85,87,87,86,84,87,85,0,0,0,0,0,0,0,91,91,91,91,90,88,90,89,90,88,91,92,93,89,90,88,91,92,93,89,88,88,88,89,90,88,91,92,93,88,90,89,88,92,93,90,88,91,92,93,89,88,90,88,91,92,93,89,90,88,91,92,93,89,88,93,93,90,89,88,89,88,90,88,91,92,93,89,90,88,91,92,93,89,90,88,91,92,93,89,92,93,93,92,92,90,88,91,92,93,89,94,94,95,0,0,0,95,94,0,0,0,95,0,0,0,0,94,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,99,100,101,103,98,99,100,101,103,98,99,100,101,98,100,98,100,101,103,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,94,95,96,97,94,95,96,97,97,94,98,95,99,96,100,97,101,102,103,104,105,106,107,108,109,110,111,112,113,96,94,104,105,95,106,107,96,108,109,97,110,111,102,102,112,113,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,94,95,96,97,96,96,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,97,105,107,109,111,113,105,107,109,111,113,97,96,102,94,95,96,97,102,102,96,94,95,96,97,102,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,104,106,108,110,112,105,107,109,111,113,109,111,113,104,106,108,110,112,104,106,108,110,112,94,98,104,105,95,99,106,107,96,100,108,109,97,101,110,111,102,103,112,113,0,115,0,0,0,115,115,115,0,115,115,115,115,115,115,0,0,0,0,0,116,116,116,116,116,116,116,116,116,116,116,115,115,116,117,118,115,116,117,118,115,115,115,115,115,116,115,117,118,115,115,117,118,115,116,117,118,115,115,115,116,117,118,115,116,117,118,118,118,115,115,115,115,115,115,115,115,115,115,116,117,118,115,116,117,118,115,116,117,118,117,118,118,117,117,115,116,117,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,123,124,125,126,0,0,0,0,0,0,0,0,0,0,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,0,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,0,0,0,0,128,127,128,127,127,128,128,127,128,127,128,127,128,128,128,127,127,128,127,128,127,128,127,127,128,127,128,127,132,165,133,152,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,165,133,152,136,0,0,0,0,0,0,0,0,0,0,166,166,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,147,148,149,150,151,146,147,148,149,151,146,147,146,147,146,147,146,147,146,146,147,150,151,144,140,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,130,131,132,133,134,135,136,130,131,132,133,134,135,136,130,131,130,131,138,139,140,141,142,143,144,145,130,146,131,147,132,148,133,149,150,151,144,140,130,131,132,133,152,133,152,153,154,155,156,157,158,159,160,161,162,163,164,130,153,154,131,155,156,132,157,158,165,166,166,133,159,160,161,162,163,164,152,134,135,136,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,165,166,166,166,133,133,133,149,159,160,150,161,162,151,163,164,152,134,135,136,130,131,132,133,134,135,136,133,133,132,136,132,133,136,133,134,135,130,131,130,131,142,143,138,139,145,130,134,142,145,141,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,132,132,132,132,132,132,154,156,158,160,162,164,154,156,158,160,162,164,138,142,139,143,140,144,141,145,166,142,143,130,131,134,135,138,139,140,141,130,131,132,133,134,135,130,131,130,131,142,143,130,131,134,135,142,143,145,138,139,141,166,130,131,132,133,134,135,136,166,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,132,132,132,148,157,158,165,165,166,133,149,159,160,150,161,162,151,163,164,152,152,134,135,136,136,136,165,152,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,144,140,138,141,153,155,157,159,161,163,158,160,154,156,162,164,154,156,162,164,153,155,157,159,161,163,153,155,157,159,161,163,138,142,139,143,140,144,141,145,130,146,153,154,131,147,155,156,132,148,157,158,165,166,133,149,159,160,150,161,162,151,163,164,152,134,135,136,339,340,339,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,177,177,177,175,174,176,181,172,178,137,177,179,180,173,175,174,176,181,172,178,137,177,179,180,173,172,137,173,172,137,173,172,137,174,173,175,176,172,137,177,176,137,172,137,172,137,178,179,180,172,172,178,137,137,179,180,175,174,176,181,172,178,137,177,179,180,173,172,172,137,173,172,172,172,172,175,181,137,175,176,175,174,176,181,172,178,137,177,179,180,173,172,175,174,176,181,172,178,137,177,179,180,173,180,180,175,174,176,181,172,173,172,174,172,137,173,176,181,137,175,173,181,172,172,137,173,172,137,175,174,176,181,172,178,137,177,179,180,173,175,174,176,181,172,178,137,177,179,180,173,175,174,176,181,172,178,137,177,179,180,173,174,173,178,179,180,180,178,179,179,175,174,176,181,172,178,137,177,179,180,173,68,68,68,68,68,68,68,0,68,68,68,68,68,68,68,68,0,0,68,68,68,68,0,68,68,68,68,68,68,68,0,341,342,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,0,0,0,0,0,0,0,0,189,190,189,190,189,190,189,189,189,189,189,190,187,189,191,192,188,190,193,194,187,189,191,192,188,190,193,194,187,188,187,188,187,187,189,188,190,187,187,191,192,193,194,187,191,192,188,193,194,187,189,191,192,188,190,193,194,187,188,187,189,191,192,188,190,193,194,187,189,191,192,188,190,193,194,187,187,192,194,192,194,188,188,187,187,187,188,187,188,187,188,187,189,191,192,188,190,193,194,187,189,191,192,188,190,193,194,187,189,191,192,188,190,193,194,191,193,192,194,192,194,191,193,191,193,187,189,191,192,188,190,193,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,207,207,206,207,205,202,200,201,203,204,195,198,198,196,196,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,196,195,198,196,195,198,196,195,195,200,201,202,198,203,196,204,195,200,201,205,198,206,196,207,195,208,209,210,211,212,198,208,209,196,210,211,195,212,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,198,196,195,195,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,198,196,205,202,205,202,209,211,212,209,211,212,200,201,202,205,198,203,204,202,198,203,196,204,195,195,198,196,195,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,208,210,209,211,212,209,211,212,208,210,208,210,200,201,202,205,198,206,208,209,203,196,207,210,211,204,195,212,0,0,0,0,213,214,213,214,213,213,213,213,213,213,214,213,213,214,213,214,213,213,213,213,213,213,214,213,214,213,213,213,213,213,213,214,213,214,213,214,214,214,213,214,242,220,0,242,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,220,0,242,220,0,0,242,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,233,234,235,236,237,238,241,233,234,235,238,241,233,234,238,241,234,238,241,234,241,233,235,236,237,238,241,228,222,227,228,221,222,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,215,216,217,218,219,220,215,216,217,218,219,220,215,216,228,228,222,221,222,223,224,225,217,218,226,227,228,229,230,232,215,216,218,219,233,234,235,236,237,238,239,240,241,220,226,215,216,242,220,215,216,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,219,227,219,215,215,243,216,216,244,242,219,219,245,246,247,248,249,250,251,252,253,254,255,256,257,258,220,220,221,227,222,228,223,229,230,224,225,232,215,243,216,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,215,215,216,217,218,219,220,215,228,222,48,215,215,216,48,48,48,48,215,216,229,218,228,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,215,215,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,229,230,232,244,246,248,250,252,254,256,239,240,258,244,246,248,250,252,254,256,258,228,221,227,222,228,223,229,230,224,225,232,215,217,218,226,219,227,221,228,215,216,261,239,240,230,215,228,221,222,223,224,225,215,216,217,219,261,220,232,225,215,215,216,217,218,219,220,215,216,219,220,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,242,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,222,223,224,225,221,222,239,240,261,222,243,245,247,249,251,253,255,257,248,246,250,252,254,256,258,244,244,246,250,252,254,256,258,243,245,247,249,251,253,255,257,245,247,249,251,253,255,257,221,227,222,228,223,229,230,224,225,232,215,243,216,244,217,218,242,219,233,245,246,261,234,247,248,235,249,250,236,251,252,237,253,254,238,255,256,239,240,241,257,258,220,226,343,344,345,345,345,345,344,344,343,346,347,344,344,0,0,0,0,0,0,0,0,0,0,264,265,264,265,265,265,265,265,265,265,264,265,263,262,264,266,267,263,265,268,269,262,264,266,267,263,265,268,269,263,262,263,262,263,262,262,262,264,263,265,266,267,268,269,262,262,266,267,263,263,268,269,262,264,266,267,263,265,268,269,262,263,263,262,264,266,267,263,265,268,269,262,264,266,267,263,265,268,269,263,263,267,269,267,269,263,263,262,263,263,262,263,262,263,262,264,266,267,263,265,268,269,262,264,266,267,263,265,268,269,262,264,266,267,263,265,268,269,266,268,267,269,267,269,266,268,266,268,262,264,266,267,263,265,268,269,0,0,0,0,0,0,271,271,271,271,271,271,271,271,271,271,271,271,271,348,273,199,271,0,0,0,0,0,0,0,0,0,0,0,0,0,280,280,280,274,277,278,279,276,281,275,280,282,283,274,284,277,285,278,279,276,281,275,280,282,283,274,284,277,285,275,274,276,275,274,277,276,275,274,277,274,277,275,278,279,274,277,279,276,275,280,274,277,281,282,283,284,285,276,281,275,282,283,274,284,277,285,278,279,276,281,275,280,282,283,274,284,277,285,276,275,274,277,274,278,279,276,281,275,280,282,283,274,284,277,285,278,279,276,281,275,280,282,283,274,284,277,285,277,275,277,281,283,284,285,281,283,284,285,278,279,277,275,275,278,276,275,274,277,274,277,276,275,274,277,278,279,276,281,275,280,282,283,274,284,277,285,278,279,276,281,275,280,282,283,274,284,277,285,278,279,276,281,275,280,282,283,274,284,277,285,279,278,282,283,281,284,285,281,283,284,285,282,282,278,279,276,281,275,280,282,283,274,284,277,285,0,0,0,0,0,0,0,0,0,288,288,288,288,288,288,287,55,288,289,290,286,287,55,288,289,290,286,55,55,55,349,55,55,55,55,287,286,349,287,55,288,287,55,55,289,290,55,55,289,290,287,55,288,289,290,286,55,55,55,55,54,55,55,55,55,55,287,55,288,289,290,286,287,55,288,289,290,286,290,290,287,54,287,286,349,287,349,55,286,286,55,55,55,287,55,55,287,55,288,289,290,286,287,55,288,289,290,286,287,55,288,289,290,286,55,289,290,290,289,289,287,55,288,289,290,286,0,0,0,0,0,350,0,0,0,0,0,0,0,0,0,0,350,305,302,298,299,300,301,291,292,294,295,296,297,305,302,298,299,300,301,291,292,294,295,296,297,291,292,294,295,296,297,291,292,294,295,296,297,295,297,294,296,298,299,300,301,291,302,299,301,292,295,297,305,302,298,299,300,301,291,292,294,295,296,297,350,291,292,294,295,296,297,305,302,298,299,300,301,291,292,294,295,296,297,305,302,298,299,300,301,291,292,294,295,296,297,291,294,296,302,305,305,302,305,302,298,299,300,301,291,292,294,295,296,297,294,295,296,297,305,298,300,291,294,296,351,291,292,294,295,296,297,305,302,298,299,300,301,291,292,294,295,296,297,305,302,298,299,300,301,291,292,294,295,296,297,305,302,298,299,300,301,291,292,294,295,296,297,299,298,0,292,295,297,305,302,298,299,300,301,291,292,294,295,296,297,0,0,0,0,0,0,0,0,0,0,0,0,0,308,310,308,310,308,310,79,308,311,312,306,307,309,310,313,314,79,308,311,312,306,307,309,310,313,314,79,306,307,79,306,307,79,306,79,308,307,309,310,79,309,79,309,311,312,313,314,79,79,311,312,309,309,313,314,79,308,311,312,306,307,309,310,313,314,79,79,306,307,79,79,79,79,309,79,79,79,309,309,79,308,311,312,306,307,309,310,313,314,79,308,311,312,306,307,309,310,313,314,79,79,312,314,312,314,79,79,79,306,307,79,79,79,79,307,307,79,306,309,309,79,79,79,79,306,307,79,309,79,308,311,312,306,307,309,310,313,314,79,308,311,312,306,307,309,310,313,314,79,308,311,312,306,307,309,310,313,314,306,311,313,312,314,312,314,311,313,311,313,79,308,311,312,306,307,309,310,313,314,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,317,319,320,322,317,319,320,322,317,319,320,317,319,320,317,319,320,317,319,320,322,316,318,318,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,315,315,315,316,317,318,319,315,320,321,322,315,321,323,324,325,326,327,328,329,330,316,315,316,316,316,323,324,318,318,325,326,315,315,327,328,321,321,329,330,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,315,318,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,318,324,326,328,330,324,326,328,330,321,318,316,318,315,321,315,315,316,316,315,316,318,315,321,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,323,325,327,329,324,326,328,330,324,326,328,330,323,325,327,329,323,325,327,329,316,317,323,324,318,319,325,326,315,320,327,328,321,322,329,330,331,331,331,0,0,0,335,332,331,335,332,331,331,331,332,335,332,331,331,331,331,335,332,331,331,335,332,331,335,332,331,335,332,332,335,335,332,335,331,335,332,331,335,332,331,335,332,331,332,335,335,332,331,0,0,0,0,0,0,0,0,0,0,0,338,336,337,119,338,336,337,119,119,119,336,337,337,119,119,119,338,338,119,119,338,336,337,119,119,119,119,338,336,337,119,338,336,337,119,119,119,119,336,337,336,119,119,119,338,336,337,119,338,336,337,119,338,336,337,119,337,336,338,338,336,337,119],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],0,0,[[],[[2,[1]]]],[[],[[2,[3]]]],[[4,5],6],[[7,5],6],0,[[1,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],0,0,0,0,[1,2],0,[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[4,2],[7,2],[7,2],[[4,11],2],[[4,12],2],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[13,13],19],[[14,14],19],[[15,15],19],0,[[],16],[20,[[2,[13]]]],[17,[[23,[13,[0,[21,22]]]]]],[[],[[2,[18]]]],[[],[[2,[24]]]],[[13,13],25],[[14,14],25],[[15,15],25],[[],25],[[],25],[[],25],[[26,5],6],[[27,5],6],[[28,5],6],[[29,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[13,5],6],[[13,5],6],[[18,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[15,14],[14,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,13],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[2,[13]]]],[[],12],[[],12],[[],12],[[13,31],31],[13],[14],[15],[13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[],16],[[],17],0,0,[[13,13],[[32,[19]]]],[[14,14],[[32,[19]]]],[[15,15],[[32,[19]]]],[13,[[33,[31]]]],[[34,35],[[23,[13,[0,[21,22]]]]]],[[13,36],2],[[16,13,33],[[2,[37]]]],[18,2],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[34,35],[[23,[13,[0,[21,22]]]]]],[26,2],[27,2],[28,2],[29,2],[29,2],[[26,11],2],[[28,11],2],[[28,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,39],[[32,[39]]]],[[39,12],[[32,[39]]]],[[39,12],[[32,[39]]]],[[39,39],[[32,[39]]]],[39,39],[40,40],[41,41],[[]],[[]],[[]],[[39,39],19],[[],39],[[],40],[[],[[2,[39]]]],[41,[[23,[39,[0,[21,22]]]]]],[[39,39],25],[[],25],[[42,5],6],[5,[[2,[8]]]],[[39,5],6],[[39,5],6],[[]],[[]],[[]],[[]],[[12,43],39],[12,39],[[]],[[]],[[]],[11,[[2,[39]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[39,25],[[],40],[[[44,[39]],[44,[39]]],41],[[39,39],[[32,[19]]]],[[39,39],39],[[39,12],39],[[39,39],39],[39,2],[[40,39,33],[[2,[37]]]],[[]],[[]],[[]],[39,12],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],0,0,[[42,11],[[2,[39]]]],[[]],[[]],[[]],[[]],[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,12],[46,46],[47,47],[[]],[[]],[[45,48],25],[[],49],[50,[[23,[46,[0,[21,22]]]]]],[[],[[2,[46]]]],[[[32,[51]],52,53],[[23,[[55,[46,54]],[0,[21,22]]]]]],[[],[[2,[56]]]],[[],[[2,[47]]]],[[],[[2,[57]]]],[[],[[2,[58]]]],[[],[[2,[59]]]],0,[[58,58],25],[[],25],[[60,5],6],[[61,5],6],[[62,5],6],[[63,5],6],[[64,5],6],[[65,5],6],[[46,5],6],[[46,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[47,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[58,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,12],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,[[],49],[66,50],[[46,[51,[46]],67],[[2,[[55,[46,54]],68]]]],0,0,0,0,[[49,46,33],[[2,[37]]]],[[69,30,33],[[2,[37]]]],[46,2],[47,2],[58,2],0,[[]],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[60,2],[62,2],[64,2],[65,2],[61,2],[63,2],[61,2],[63,2],[[60,11],2],[[62,11],2],[[64,11],2],[[60,12],2],[[62,12],2],[[64,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[[]],[[70,30],71],[[],72],0,0,0,0,[73,[[23,[70,[0,[21,22]]]]]],[[],[[2,[70]]]],[[],[[2,[74]]]],0,0,0,0,0,0,[[75,5],6],[[76,5],6],[[70,5],6],[[70,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[77,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,12],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[],72],[[31,43,43,[32,[12]]],73],[79,77],0,0,[[72,70,33],[[2,[37]]]],[70,2],0,0,0,0,0,[77,[[33,[31]]]],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[75,2],[76,2],[76,2],[[75,11],2],[[75,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,80],[81,81],[82,82],[[]],[[]],[[]],[[80,80],19],[[],81],[[],82],[[],[[2,[80]]]],[82,[[23,[80,[0,[21,22]]]]]],[[80,80],25],[[],25],[[83,5],6],[[80,5],6],[[80,5],6],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[],80],[[]],[[]],[[]],[11,[[2,[80]]]],[80,25],[[],12],[80,71],[80],0,[[]],[[]],[[]],[[]],[80],[[],9],[[],9],[[],9],[[],9],[71,80],[[],81],[[],82],[[80,80],[[32,[19]]]],[80,2],[[81,80,33],[[2,[37]]]],[80],[[]],[[]],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[83,2],[[83,11],2],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[[]],[[],84],[[],85],[86,[[23,[84,[0,[21,22]]]]]],[[],[[2,[84]]]],[[84,84],25],[[],25],[[87,5],6],[[84,5],6],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],0,0,[12,86],[[],85],[84,2],[[85,84,33],[[2,[37]]]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[87,2],[87,2],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[[]],[[],88],[[],89],[90,[[23,[88,[0,[21,22]]]]]],[[],[[2,[88]]]],[[],[[2,[91]]]],[[92,5],6],[[93,5],6],0,0,0,[[88,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[43,90],[[],89],[88,2],[[89,88,33],[[2,[37]]]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[92,2],[93,2],[93,2],[[92,11],2],[[92,12],2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[95,95],[96,96],[97,97],[[]],[[]],[[]],[[]],0,[[],[[2,[94]]]],[[],[[2,[98]]]],[[],[[2,[95]]]],[[],[[2,[99]]]],[[],[[2,[96]]]],[[],[[2,[100]]]],[[],[[2,[97]]]],[[],[[2,[101]]]],[[],[[2,[102]]]],[[],[[2,[103]]]],[[104,5],6],[[105,5],6],[[106,5],6],[[107,5],6],[[108,5],6],[[109,5],6],[[110,5],6],[[111,5],6],[[112,5],6],[[113,5],6],[[96,96]],[[94,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[95,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[96,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[97,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[102,5],6],[[102,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[94,2],[95,2],[96,2],[97,2],[102,2],0,0,[[]],[[]],[[]],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[104,2],[106,2],[108,2],[110,2],[112,2],[105,2],[107,2],[109,2],[111,2],[113,2],[109,2],[111,2],[113,2],[[104,11],2],[[106,11],2],[[108,11],2],[[110,11],2],[[112,11],2],[[104,12],2],[[106,12],2],[[108,12],2],[[110,12],2],[[112,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[11,11],114],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,115],[[]],[[],115],0,[[],[[2,[115]]]],[[],[[2,[116]]]],0,[[117,5],6],[[118,5],6],[[115,5],6],[[115,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,[115,2],0,0,[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[117,2],[118,2],[118,2],[[117,11],2],[[117,12],2],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],119],[[],32],[[],120],[[],67],[[],121],[[],[[121,[12]]]],[[],120],[[],[[32,[120]]]],[[],119],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,120],[123,32],[124,67],[125,121],[126,119],[[]],[[]],[[]],[[]],[[]],[[],12],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[11,11],114],0,0,0,[[]],[[]],[[]],[[]],[[],127],[128,[[23,[[129,[[33,[31]],[33,[31]]]],[0,[21,22]]]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],0,0,[[12,31,12],128],[[],127],[[127,129,33],[[2,[37]]]],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,[[2,[71,37]]]],[70,[[2,[71,37]]]],[[30,79,43,71],71],[[30,79,71],71],[[],138],[[],139],[[],140],[[],141],[142,[[23,[130,[0,[21,22]]]]]],[143,[[23,[131,[0,[21,22]]]]]],[144,[[23,[132,[0,[21,22]]]]]],[145,[[23,[133,[0,[21,22]]]]]],[[],[[2,[130]]]],[[],[[2,[146]]]],[[],[[2,[131]]]],[[],[[2,[147]]]],[[],[[2,[132]]]],[[],[[2,[148]]]],[[],[[2,[133]]]],[[],[[2,[149]]]],[[],[[2,[150]]]],[[],[[2,[151]]]],0,0,[[130,130],25],[[131,131],25],[[132,132],25],[[133,133],25],[[152,152],25],[[],25],[[],25],[[153,5],6],[[154,5],6],[[155,5],6],[[156,5],6],[[157,5],6],[[158,5],6],[[159,5],6],[[160,5],6],[[161,5],6],[[162,5],6],[[163,5],6],[[164,5],6],[[130,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[131,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[132,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[165,5],6],[[166,5],6],[[166,5],6],[[133,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[[152,5],6],[[134,5],6],[[135,5],6],[[136,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,165],[[]],[167,166],[37,166],[[]],[132,133],[136,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,71],[[],12],[132,30],[136,30],[132,79],[133,79],[136,79],[133],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[132,78],[[2,[25,166]]]],[[132,168],[[2,[25,166]]]],[[79,12],25],[132,25],[132,25],[132,25],0,0,0,0,0,0,0,0,0,0,0,0,[[],138],[[31,43],142],[[],139],[31,143],[[],140],[[31,43],144],[[],141],[[31,43],145],[169],0,0,0,0,0,0,[[138,130,33],[[2,[37]]]],[[139,131,33],[[2,[37]]]],[[140,132,33],[[2,[37]]]],[[141,133,33],[[2,[37]]]],[130,2],[131,2],[132,2],[133,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[166,[[32,[170]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[2,[132]]]],[[],[[2,[132]]]],[[],[[2,[132]]]],[[],2],[[],2],[[],2],[[],2],[43,[[2,[165,[171,[165]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[43,[[2,[152,[171,[152]]]]]],[[],2],[[],2],[168,[[2,[136]]]],[78,[[2,[136]]]],[[],2],[[],[[2,[165,[171,[165]]]]]],[[],[[2,[152,[171,[152]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[153,2],[155,2],[157,2],[159,2],[161,2],[163,2],[158,2],[160,2],[154,2],[156,2],[162,2],[164,2],[154,2],[156,2],[162,2],[164,2],[[153,11],2],[[155,11],2],[[157,11],2],[[159,11],2],[[161,11],2],[[163,11],2],[[153,12],2],[[155,12],2],[[157,12],2],[[159,12],2],[[161,12],2],[[163,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[172,172],[137,137],[173,173],[[]],[[]],[[]],[[172,172],19],[[137,30],71],[[],174],[[],173],[175,[[23,[137,[0,[21,22]]]]]],[176,[[23,[137,[0,[21,22]]]]]],[[],[[2,[172]]]],[[],[[2,[137]]]],[[],[[2,[177]]]],0,0,[[172,172],25],[[137,137],25],[[],25],[[],25],[[178,5],6],[[179,5],6],[[180,5],6],[[172,5],6],[[172,5],6],[5,[[2,[8]]]],[[137,5],6],[[137,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],172],[[]],[[]],[[]],[11,[[2,[172]]]],[[],12],[172,71],[172],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[172],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[31,43],175],[[],174],[[43,79,80],176],[[79,43],181],[71,172],[[],173],[[172,172],[[32,[19]]]],[[174,137,33],[[2,[37]]]],[172,2],[137,2],[[173,137,33],[[2,[37]]]],0,0,0,0,0,[181,[[33,[31]]]],[172],[[]],[[]],[[]],[[],38],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[178,2],[179,2],[180,2],[180,2],[[178,11],2],[[179,11],2],[[179,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],182],[[]],[[]],[68,68],[[]],[[68,5],6],[[68,5],6],[183,68],[184,68],[[[186,[185]]],68],[167,68],[11,68],[37,68],[[]],[[]],[[]],[[],9],[169],[68,[[32,[170]]]],[[]],[[],38],[[],2],[[],2],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[187,187],[188,188],[[]],[[]],[[],187],[[],[[2,[187]]]],[[],[[2,[189]]]],[[],[[2,[188]]]],[[],[[2,[190]]]],0,0,[[191,5],6],[[192,5],6],[[193,5],6],[[194,5],6],[[187,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[188,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,[187,2],[188,2],0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[191,2],[193,2],[192,2],[194,2],[192,2],[194,2],[[191,11],2],[[193,11],2],[[191,12],2],[[193,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[195,13,196],197],[[198,196],197],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[196,196],[[197,[68]]]],[[195,195],197],[198,198],[196,196],[195,195],[[]],[[]],[[]],[[195,199],195],[[],200],[[],201],[[],202],[[],198],[[],203],[[],196],[[],204],[[],195],[200,[[23,[198,[0,[21,22]]]]]],[201,[[23,[196,[0,[21,22]]]]]],[205,[[23,[195,[0,[21,22]]]]]],[[],[[2,[198]]]],[[],[[2,[206]]]],[[],[[2,[196]]]],[[],[[2,[207]]]],[[],[[2,[195]]]],[[208,5],6],[[209,5],6],[[210,5],6],[[211,5],6],[[212,5],6],[[198,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[196,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[195,5],6],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[195,[[199,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[198,25],[196,25],0,0,0,0,0,0,0,0,0,0,[[],200],[[],201],[[],202],[12,205],[39,198],[[],203],[[],204],[[202,195,33],[[197,[37]]]],[198,2],[[203,198,33],[[197,[37]]]],[196,2],[[204,196,33],[[197,[37]]]],[195,2],[[195,199,195]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[208,2],[210,2],[209,2],[211,2],[212,2],[209,2],[211,2],[212,2],[[208,11],2],[[210,11],2],[[208,12],2],[[210,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[213,213],[[]],[[213,213],19],[[],[[2,[213]]]],[[213,213],25],[[],25],[[214,5],6],[[213,5],6],[[213,5],6],[5,[[2,[8]]]],[[]],[[]],[[]],[11,[[2,[213]]]],[[],12],[213,30],[213],[[]],[[]],[[],9],[[],9],[30,213],[[213,213],[[32,[19]]]],[213,2],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[214,2],[[214,11],2],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[[]],[[]],[[]],[[]],[[]],[[]],[[215,215],19],[[216,216],19],0,0,0,[[],221],[[],222],[[],223],[[],224],[[],225],[[],217],[[],218],[[],226],[227,[[23,[219,[0,[21,22]]]]]],[228,[[23,[220,[0,[21,22]]]]]],[229,[[23,[[33,[215]],[0,[21,22]]]]]],[230,[[23,[231,[0,[21,22]]]]]],[232,[[23,[[33,[48]],[0,[21,22]]]]]],[[],[[2,[215]]]],[[],[[2,[216]]]],[218,[[23,[215,[0,[21,22]]]]]],[[],[[2,[219]]]],[[],[[2,[233]]]],[[],[[2,[234]]]],[[],[[2,[235]]]],[[],[[2,[236]]]],[[],[[2,[237]]]],[[],[[2,[238]]]],[[],[[2,[239]]]],[[],[[2,[240]]]],[[],[[2,[241]]]],[[],[[2,[220]]]],[226,[[23,[216,[0,[21,22]]]]]],[[215,215],25],[[216,216],25],[[242,242],25],[[220,220],25],[[],25],[[],25],[[],25],[[243,5],6],[[244,5],6],[[245,5],6],[[246,5],6],[[247,5],6],[[248,5],6],[[249,5],6],[[250,5],6],[[251,5],6],[[252,5],6],[[253,5],6],[[254,5],6],[[255,5],6],[[256,5],6],[[257,5],6],[[258,5],6],0,0,0,[[215,5],6],[[215,5],6],[5,[[2,[8]]]],[[216,5],6],[[216,5],6],[5,[[2,[8]]]],[[242,5],6],[[219,5],6],[[219,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[5,[[2,[8]]]],[[220,5],6],[[220,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],216],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],215],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[2,[215]]]],0,0,[48,12],[215,71],[[],12],[[],12],[48,[[199,[13]]]],[[48,39],39],[48,[[2,[[199,[13]],68]]]],[[48,12],[[259,[12]]]],[215],[216],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215],[215,216],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],221],[[12,260,43,12,31,12],227],[[],222],[[12,260,43,12,31,12],228],[[],223],[43,229],[43,230],[[],224],[[],225],[[43,12,260,43,12,31,12],232],[71,215],[[],217],[[],218],[[],226],0,0,0,0,[[215,215],[[32,[19]]]],[[216,216],[[32,[19]]]],0,0,0,0,[215,216],0,[[221,219,33],[[2,[37]]]],[[222,220,33],[[2,[37]]]],[[223,33,33],[[2,[37]]]],[[224,231,33],[[2,[37]]]],[[225,33,33],[[2,[37]]]],[215,2],[216,2],[[217,215,33],[[2,[37]]]],[219,2],[261,2],[220,2],0,0,[215],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[43,[[2,[242,[171,[242]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[2,[242,[171,[242]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,[243,2],[245,2],[247,2],[249,2],[251,2],[253,2],[255,2],[257,2],[248,2],[246,2],[250,2],[252,2],[254,2],[256,2],[258,2],[244,2],[244,2],[246,2],[250,2],[252,2],[254,2],[256,2],[258,2],[[243,11],2],[[245,11],2],[[247,11],2],[[249,11],2],[[251,11],2],[[253,11],2],[[255,11],2],[[257,11],2],[[245,12],2],[[247,12],2],[[249,12],2],[[251,12],2],[[253,12],2],[[255,12],2],[[257,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[262,262],[263,263],[[]],[[]],0,0,[[],[[2,[262]]]],[[],[[2,[264]]]],[[],[[2,[263]]]],[[],[[2,[265]]]],[[266,5],6],[[267,5],6],[[268,5],6],[[269,5],6],[[262,5],6],[[262,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[263,5],6],[[263,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,[262,2],[263,2],0,[[]],[[]],[[],38],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[266,2],[268,2],[267,2],[269,2],[267,2],[269,2],[[266,11],2],[[268,11],2],[[266,12],2],[[268,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[],[[271,[270]]]],[[[271,[270]]],12],[[]],0,[[]],[[],9],0,[[],2],[[],2],[[],10],[[]],[272],[272,[[273,[270]]]],[272,[[199,[270]]]],[[[271,[270]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[274,13,275],[[197,[276]]]],[[277,274],197],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[275,275],[[197,[276]]]],[[274,274],[[197,[[273,[13,276]]]]]],[276,276],[275,275],[274,274],[277,277],[[]],[[]],[[]],[[]],[[274,199],274],[[277,199],277],[275,276],[[],278],[[],279],[[],274],[[],277],[279,[[23,[275,[0,[21,22]]]]]],[[],[[2,[276]]]],[[],[[2,[275]]]],[[],[[2,[280]]]],[[],[[2,[274]]]],[[],[[2,[277]]]],[[281,5],6],[[282,5],6],[[283,5],6],[[284,5],6],[[285,5],6],[[276,5],6],[5,[[2,[8]]]],[[275,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[274,5],6],[5,[[2,[8]]]],[[277,5],6],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[274,[[199,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[277,25],[275,25],[277,272],0,0,0,0,0,0,0,0,[[],278],[[],279],[[],277],0,0,[[278,275,33],[[197,[37]]]],[276,2],[275,2],[274,2],[277,2],[[274,199,274]],[[277,199,277]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[282,2],[283,2],[281,2],[284,2],[285,2],[281,2],[283,2],[284,2],[285,2],[[282,11],2],[[282,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[46,80]]],12],[55,55],[[]],[30,71],[[[55,[46,80]],48],25],0,0,0,0,[[],286],[[[32,[51]],52,53],[[23,[[55,[54]],[0,[21,22]]]]]],[287,[[23,[55,[0,[21,22]]]]]],[[],[[2,[55]]]],[[],[[2,[288]]]],[287,[[23,[[55,[54]],[0,[21,22]]]]]],[[55,55],25],[[],25],[[289,5],6],[[290,5],6],[[55,5],6],[[55,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[70,80]]],12],[[[55,[46,80]]],12],[[[55,[219,215]]],12],[[],71],[[[55,[219,215]]],[[199,[13]]]],[[[55,[219,215]],39],39],[[[55,[219,215]]],[[2,[[199,[13]],68]]]],[[[55,[219,215]],12],[[259,[12]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[71],[[],287],[[],286],[[51,67],[[2,[[55,[54]],68]]]],0,[[69,30,33],[[2,[37]]]],[55,2],[[286,55,33],[[2,[37]]]],[[286,55,33],[[2,[37]]]],0,[55,272],0,0,[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[55,[[2,[68]]]],[289,2],[290,2],[290,2],[[289,11],2],[[289,12],2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[68]]]],[[],272],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[291,291],[292,292],[[[294,[293]]],[[294,[293]]]],[[[295,[293]]],[[295,[293]]]],[[[296,[293]]],[[296,[293]]]],[[[297,[293]]],[[297,[293]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],298],[[],299],[[],300],[[],301],[[],291],[302,[[23,[38,[0,[21,22]]]]]],[299,[[23,[[303,[31]],[0,[21,22]]]]]],[301,[[23,[304,[0,[21,22]]]]]],[292,[[23,[[33,[31]],[0,[21,22]]]]]],[295,[[23,[33,[0,[21,22]]]]]],[297,[[23,[199,[0,[21,22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,[[],305],[[],302],[[],298],[[],299],[[],300],[[],301],[[],291],[[[44,[12]],[44,[12]]],292],[[],294],[[[44,[12]],[44,[12]]],295],[[],296],[[[44,[12]],[44,[12]]],297],0,0,0,0,[[305,38,33],[[2,[37]]]],[[298,303,33],[[2,[37]]]],[[300,304,33],[[2,[37]]]],[[291,33,33],[[2,[37]]]],[[294,33,33],[[2,[37]]]],[[296,199,33],[[2,[37]]]],[[],[[2,[[33,[31]],68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],[[2,[31,68]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[306,306],[307,307],[[]],[[]],[[]],[[79,79],19],[[],306],[[],[[2,[79]]]],[[],[[2,[308]]]],[307,[[23,[79,[0,[21,22]]]]]],[[],[[2,[309]]]],[[],[[2,[310]]]],[[79,79],25],[[309,309],25],[[],25],[[],25],[[311,5],6],[[312,5],6],[[313,5],6],[[314,5],6],[[79,5],6],[[79,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[309,5],6],[[309,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],79],[[]],[[]],[[]],[11,[[2,[79]]]],[[79,12],12],[79,25],[[],12],[[],12],[[79,31],[[2,[79,68]]]],[[79,31],[[2,[79,68]]]],[79],[309],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[79,12],25],[[79,12,31],25],0,0,0,0,[31,79],[[],79],[[12,31],79],[[],306],[[],307],[[12,12],[[2,[79,68]]]],[[12,12,31],[[2,[79,68]]]],[[79,79],[[32,[19]]]],0,0,0,[79,2],[[306,79,33],[[2,[37]]]],[309,2],0,[[79,79,31],[[2,[12,68]]]],0,[79],[[]],[[]],[[]],[[],38],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[311,2],[313,2],[312,2],[314,2],[312,2],[314,2],[[311,11],2],[[313,11],2],[[311,12],2],[[313,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[315,315],[[]],[[],[[2,[316]]]],[[],[[2,[317]]]],[[],[[2,[318]]]],[[],[[2,[319]]]],[[],[[2,[315]]]],[[],[[2,[320]]]],[[],[[2,[321]]]],[[],[[2,[322]]]],0,0,[[323,5],6],[[324,5],6],[[325,5],6],[[326,5],6],[[327,5],6],[[328,5],6],[[329,5],6],[[330,5],6],0,0,0,[[316,5],6],[[316,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[318,5],6],[[318,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[315,5],6],[[315,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[321,5],6],[[321,5],6],[5,[[2,[8]]]],[5,[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,[316,2],[318,2],[315,2],[321,2],0,0,0,0,[[]],[[],38],[[],38],[[],38],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[323,2],[325,2],[327,2],[329,2],[324,2],[326,2],[328,2],[330,2],[324,2],[326,2],[328,2],[330,2],[[323,11],2],[[325,11],2],[[327,11],2],[[329,11],2],[[323,12],2],[[325,12],2],[[327,12],2],[[329,12],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[331,[293]]],[[331,[293]]]],[[]],0,0,[332,[[23,[331,[0,[21,22]]]]]],[[[331,[333]],331],25],[[],25],[331,25],[[[331,[334]],5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],335],[[],332],0,0,0,0,[[335,331,33],[[2,[37]]]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],0,0,[[]],[[]],[[]],[[31,120,120,79],[[2,[120,68]]]],[[31,120,120,120],79],[[31,120,120],[[2,[[32,[79]],68]]]],[[31,120,120,120],[[2,[[32,[79]],68]]]],[[79,79,31],[[2,[12,68]]]],[[31,120,120,[32,[120]],[32,[120]]],[[2,[68]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[[]],[[],336],[[],337],[337,[[23,[119,[0,[21,22]]]]]],[[],[[2,[119]]]],[[119,119],25],[[],25],[[338,5],6],[5,[[2,[8]]]],[[119,5],6],[[119,5],6],[[]],[[]],[[]],[[]],[[]],[11,[[2,[119]]]],0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[119,119],25],0,0,[[],336],[[],337],[[336,119,33],[[2,[37]]]],[119,2],[[]],[[],38],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],0,0,[[338,11],[[2,[119]]]],[[]],[[]],[[]],[[]]],"p":[[3,"ActiveBlock"],[4,"Result"],[4,"__Field"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"Error"],[3,"Request"],[3,"TypeId"],[15,"str"],[15,"u64"],[4,"Address"],[3,"SCAddress"],[3,"UserAddress"],[3,"AddressSerializer"],[3,"AddressDeserializer"],[3,"ExecutionAddressCycleInfo"],[4,"Ordering"],[8,"Deserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"__Field"],[15,"bool"],[3,"AddressVisitor"],[3,"BytesVisitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"PublicKey"],[15,"u8"],[4,"Option"],[3,"Vec"],[3,"U64VarIntDeserializer"],[3,"HashDeserializer"],[8,"Serializer"],[4,"SerializeError"],[3,"String"],[3,"Amount"],[3,"AmountSerializer"],[3,"AmountDeserializer"],[3,"AmountVisitor"],[15,"u32"],[4,"Bound"],[6,"SecureShareBlock"],[3,"Block"],[3,"FilledBlock"],[6,"SecureShareOperation"],[3,"BlockSerializer"],[3,"BlockDeserializer"],[8,"Serializer"],[3,"SignatureDeserializer"],[3,"PublicKeyDeserializer"],[8,"Id"],[3,"SecureShare"],[4,"__Field"],[4,"__Field"],[4,"BlockGraphStatus"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"BlockDeserializerArgs"],[3,"KeyPair"],[4,"ModelsError"],[3,"Signature"],[3,"BlockHeader"],[3,"Hash"],[3,"BlockHeaderSerializer"],[3,"BlockHeaderDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"BlockHeaderDenunciationData"],[6,"SecuredHeader"],[3,"Slot"],[3,"BlockId"],[3,"BlockIdSerializer"],[3,"BlockIdDeserializer"],[3,"Helper"],[3,"Bytecode"],[3,"BytecodeSerializer"],[3,"BytecodeDeserializer"],[3,"__Visitor"],[3,"Clique"],[3,"CliqueSerializer"],[3,"CliqueDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[4,"OperationSearchResultBlockStatus"],[4,"OperationSearchResultStatus"],[3,"OperationSearchResult"],[3,"StakersCycleProductionStats"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"PubkeySig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"Deserialize"],[3,"CompactConfig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Version"],[3,"MassaTime"],[3,"Ratio"],[3,"GENESIS_TIMESTAMP"],[3,"END_TIMESTAMP"],[3,"GENESIS_KEY"],[3,"POS_MISS_RATE_DEACTIVATION_THRESHOLD"],[3,"VERSION"],[3,"DatastoreSerializer"],[3,"DatastoreDeserializer"],[3,"BTreeMap"],[3,"EndorsementDenunciation"],[3,"BlockHeaderDenunciation"],[4,"Denunciation"],[4,"DenunciationIndex"],[3,"EndorsementDenunciationPrecursor"],[3,"BlockHeaderDenunciationPrecursor"],[4,"DenunciationPrecursor"],[3,"Endorsement"],[3,"EndorsementDenunciationSerializer"],[3,"BlockHeaderDenunciationSerializer"],[3,"DenunciationSerializer"],[3,"DenunciationIndexSerializer"],[3,"EndorsementDenunciationDeserializer"],[3,"BlockHeaderDenunciationDeserializer"],[3,"DenunciationDeserializer"],[3,"DenunciationIndexDeserializer"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"DenunciationIndexTypeId"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[4,"DenunciationTypeId"],[4,"DenunciationError"],[4,"MassaSignatureError"],[6,"SecureShareEndorsement"],[3,"Demand"],[8,"Error"],[3,"TryFromPrimitiveError"],[3,"EndorsementId"],[3,"EndorsementSerializer"],[3,"EndorsementSerializerLW"],[3,"EndorsementDeserializer"],[3,"EndorsementDeserializerLW"],[4,"__Field"],[3,"Helper"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"EndorsementDenunciationData"],[3,"Display"],[4,"MassaHashError"],[4,"TimeError"],[3,"Error"],[4,"Err"],[3,"EventFilter"],[3,"TempFileVestingRange"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"LedgerChanges"],[3,"LedgerChange"],[6,"ModelsResult"],[3,"LedgerData"],[6,"PreHashSet"],[3,"LedgerDataDeserializer"],[3,"LedgerChangeDeserializer"],[3,"LedgerChangesSerializer"],[3,"LedgerDataSerializer"],[3,"LedgerChangeSerializer"],[3,"LedgerChangesDeserializer"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__Visitor"],[3,"NodeId"],[3,"Helper"],[3,"OperationId"],[3,"OperationPrefixId"],[3,"OperationIdSerializer"],[3,"OperationIdDeserializer"],[3,"Operation"],[4,"OperationType"],[3,"OperationSerializer"],[3,"OperationTypeSerializer"],[3,"OperationIdsSerializer"],[3,"OperationPrefixIdsSerializer"],[3,"OperationsSerializer"],[3,"OperationPrefixIdDeserializer"],[3,"OperationDeserializer"],[3,"OperationTypeDeserializer"],[3,"OperationIdsDeserializer"],[3,"OperationPrefixIdsDeserializer"],[6,"OperationPrefixIds"],[3,"OperationsDeserializer"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__DeserializeWith"],[3,"__DeserializeWith"],[4,"__Field"],[4,"OperationTypeId"],[3,"Helper"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"RangeInclusive"],[15,"u16"],[3,"__SerializeWith"],[3,"SCOutputEvent"],[3,"EventExecutionContext"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"PreHashed"],[3,"HashMapper"],[15,"usize"],[6,"PreHashMap"],[3,"RollUpdates"],[3,"RollUpdate"],[3,"RollCompensation"],[3,"RollCounts"],[3,"RollUpdateSerializer"],[3,"RollUpdateDeserializer"],[4,"__Field"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__Visitor"],[3,"__Visitor"],[3,"SecureShareSerializer"],[3,"SecureShareDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"VecU8Serializer"],[3,"VecU8Deserializer"],[8,"Clone"],[3,"VecSerializer"],[3,"VecDeserializer"],[3,"PreHashSetSerializer"],[3,"PreHashSetDeserializer"],[3,"BitVecSerializer"],[3,"BitVecDeserializer"],[3,"IpAddrSerializer"],[3,"IpAddrDeserializer"],[3,"StringDeserializer"],[3,"BitVec"],[4,"IpAddr"],[3,"StringSerializer"],[3,"SlotSerializer"],[3,"SlotDeserializer"],[4,"__Field"],[3,"IndexedSlot"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"ConsensusStats"],[3,"ExecutionStats"],[4,"__Field"],[3,"NetworkStats"],[4,"__Field"],[4,"__Field"],[3,"PoolStats"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[4,"StreamingStep"],[3,"StreamingStepDeserializer"],[8,"PartialEq"],[8,"Debug"],[3,"StreamingStepSerializer"],[3,"VersionSerializer"],[3,"VersionDeserializer"],[3,"VersionVisitor"],[13,"Endorsement"],[13,"BlockHeader"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"],[13,"Transaction"],[13,"CallSC"],[13,"ExecuteSC"],[13,"RollBuy"],[13,"RollSell"],[8,"CapacityAllocator"],[8,"SecureShareContent"],[8,"DeserializeMinBEInt"],[8,"SerializeMinBEInt"]]},\
"massa_module_cache":{"doc":"Module caching saves compiled <code>massa-sc-runtime</code> modules for …","t":"AAAAAOOADLLMLLLLLMMMLLLMLMLLLLLLLHHHHHHHHHHHHHHHHHHDGLLMLLLLLLMLLLLLLMLLLLLLLLLLLLEININRKKLLLLLLLLLLLLLLLLLLLLLLLLLLLHRRRRDHRRRRLLMLLLLMLLLLLLMMMLLLLLMLLLLLLLHHDHHGLLMLLLLLLLLLLLLLLLLLLLLLNNRNNNRNNEEDEDNNRLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLL","n":["config","controller","error","hd_cache","lru_cache","metadata_key","module_key","types","ModuleCacheConfig","borrow","borrow_mut","compilation_gas","deref","deref_mut","deserialize","drop","from","gas_costs","hd_cache_path","hd_cache_size","init","into","into_request","lru_cache_size","pointer_metadata","snip_amount","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","ModuleCache","PreHashLruMap","borrow","borrow_mut","cfg","compile_cached","deref","deref_mut","deserialize","drop","from","hd_cache","init","into","into_request","load_module","load_module_info","load_tmp_module","lru_cache","new","pointer_metadata","save_module","set_init_cost","set_invalid","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CacheError","DisplayToDisplayDoc","LoadError","PathToDisplayDoc","VMError","_DERIVE_Display_FOR_CacheError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","fmt","from","from","from_ref","init","into","into_request","pointer_metadata","provide","to_owned","to_string","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","CRUD_ERROR","DATA_DESER_ERROR","DATA_IDENT","DATA_SER_ERROR","HDCache","META","MODULE_IDENT","MOD_DESER_ERROR","MOD_SER_ERROR","OPEN_ERROR","borrow","borrow_mut","db","deref","deref_mut","deserialize","drop","entry_count","from","get","init","insert","into","into_request","max_entry_count","meta_deser","meta_ser","new","pointer_metadata","set_init_cost","set_invalid","snip","snip_amount","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","CALLSITE","LRUCache","META","META","PreHashLruMap","borrow","borrow_mut","cache","deref","deref_mut","deserialize","drop","from","get","init","insert","into","into_request","new","pointer_metadata","set_init_cost","set_invalid","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","Delta","Delta","Delta__num_enum_0__","Invalid","Invalid","Invalid","Invalid__num_enum_0__","Module","ModuleAndDelta","ModuleInfo","ModuleMetadata","ModuleMetadataDeserializer","ModuleMetadataId","ModuleMetadataSerializer","NotExecuted","NotExecuted","NotExecuted__num_enum_0__","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","delta_deser","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fmt","from","from","from","from","from","from_ref","id_deser","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","new","new","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","u64_ser","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","vzip","vzip"],"q":["massa_module_cache","","","","","","","","massa_module_cache::config","","","","","","","","","","","","","","","","","","","","","","","","","massa_module_cache::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_module_cache::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_module_cache::hd_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_module_cache::lru_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_module_cache::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Delta key formatting macro","Module key formatting macro","","","","","Default gas for compilation","","","","","Returns the argument unchanged.","Gas costs used to:","Path to the hard drive cache storage","Maximum number of entries we want to keep in the HD cache","","Calls <code>U::from(self)</code>.","","Maximum number of entries we want to keep in the LRU cache","","Amount of entries removed when <code>hd_cache_size</code> is reached","","","","","","","","","","","","","","","","","","","","","","","","","","Cache controller of compiled runtime modules","<code>LruMap</code> specialization for <code>PreHashed</code> keys","","","Cache config. See <code>CacheConfig</code> documentation for more …","Internal function to compile and build <code>ModuleInfo</code>","","","","","Returns the argument unchanged.","Disk stored cache. See the <code>HDCache</code> documentation for more …","","Calls <code>U::from(self)</code>.","","Load a cached module for execution and check its validity …","Load a cached module for execution","Load a temporary module from arbitrary bytecode","RAM stored LRU cache. See <code>LRUCache</code> documentation for more …","Creates a new <code>ModuleCache</code>","","Save a new or an already existing module in the cache","Set the initialization cost of a cached module","Set a cached module as invalid","","","","","","","","Cache error","","Load error: {0}","","VM error: {0}","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","RocksDB database","","","","","How many entries are in the db. Count is initialized at …","Returns the argument unchanged.","Retrieve a module","","Insert a new module in the cache","Calls <code>U::from(self)</code>.","","Maximum number of entries we want to keep in the db. When …","Module metadata deserializer","Module metadata serializer","Create a new HDCache","","Sets the initialization cost of a given module separately","Sets a given module as invalid","Try to remove as much as <code>self.amount_to_snip</code> entries from …","How many entries are removed when <code>entry_count</code> reaches …","","","","","","","","","","RAM stored LRU cache. The LRU caching scheme is to remove …","","","<code>LruMap</code> specialization for <code>PreHashed</code> keys","","","","","","","","Returns the argument unchanged.","If the module is contained in the cache:","","Save a module in the LRU cache","Calls <code>U::from(self)</code>.","","Create a new <code>LRUCache</code> with the given size","","Set the initialization cost of a LRU cached module","Set a module as invalid","","","","","","","","","","","","","","","","","Main type","Metadata type","Metadata deserializer","Metadata ID type","Metadata serializer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,14,0,14,0,39,40,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,30,34,0,30,11,34,0,11,11,0,0,0,0,0,30,34,0,30,28,29,11,34,30,28,29,11,34,11,11,28,29,29,30,28,29,11,34,30,28,29,11,34,30,28,29,29,11,34,30,28,29,11,34,34,34,34,34,30,28,29,11,34,11,29,30,28,29,11,34,30,28,29,11,34,30,28,29,11,34,28,29,30,28,29,11,34,28,11,30,28,29,11,34,34,34,30,28,29,11,34,30,28,29,11,34,28,30,28,29,11,34,30,28,29,11,34,30,28,29,11,34,30,28,29,11,34],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],0,[1],[1],[[],[[3,[2]]]],[1],[[]],0,0,0,[[],1],[[]],[[],4],0,[[]],0,[[],3],[[],3],[[],5],[[[7,[6]]],[[7,[8,6]]]],[[],8],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[9,10],11],[1],[1],[[],[[3,[2]]]],[1],[[]],0,[[],1],[[]],[[],4],[[9,12],[[3,[13,14]]]],[9,11],[[9,12],[[3,[13,14]]]],0,[15,9],[[]],[9],[[9,12]],[9],[[],3],[[],3],[[],5],[[[7,[6]]],[[7,[8,6]]]],[[],8],[[],8],[[]],0,0,0,0,0,0,[[]],[[],16],[[]],[[]],[14,14],[[]],[1],[1],[[],[[3,[2]]]],[1],[[14,17],18],[[14,17],18],[19,14],[[]],[[]],[[],1],[[]],[[],4],[[]],[20],[[]],[[],21],[[],3],[[],3],[[],5],[[[7,[6]]],[[7,[8,6]]]],[[],8],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[1],[1],[[],[[3,[2]]]],[1],0,[[]],[[22,10,12,23],[[24,[11]]]],[[],1],[[22,10,11]],[[]],[[],4],0,0,0,[[25,1,1],22],[[]],[[22,10,12]],[[22,10]],[22],0,[[],3],[[],3],[[],5],[[[7,[6]]],[[7,[8,6]]]],[[],8],[[],8],[[]],0,0,0,0,0,0,[[]],[[]],0,[1],[1],[[],[[3,[2]]]],[1],[[]],[[26,10],[[24,[11]]]],[[],1],[[26,10,11]],[[]],[[],4],[27,26],[[]],[[26,10,12]],[[26,10]],[[],3],[[],3],[[],5],[[[7,[6]]],[[7,[8,6]]]],[[],8],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[[]],[[],28],[[],29],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[29,[[33,[30,[0,[31,32]]]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],[1],[1],[1],[[34,34],35],[[],35],[[],35],[[34,17],18],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],28],[[],29],[[]],[[]],[[]],[[]],[[]],[[28,30,36],[[3,[37]]]],[[]],[[],3],[[],3],[[],3],[[],3],[12,[[3,[34,[38,[34]]]]]],[[],3],[[],[[3,[34,[38,[34]]]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[[7,[6]]],[[7,[8,6]]]],[[[7,[6]]],[[7,[8,6]]]],[[[7,[6]]],[[7,[8,6]]]],[[[7,[6]]],[[7,[8,6]]]],[[[7,[6]]],[[7,[8,6]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]]],"p":[[15,"usize"],[3,"With"],[4,"Result"],[3,"Request"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"ModuleCache"],[3,"Hash"],[4,"ModuleInfo"],[15,"u64"],[4,"RuntimeModule"],[4,"CacheError"],[3,"ModuleCacheConfig"],[3,"Display"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Demand"],[3,"String"],[3,"HDCache"],[3,"GasCosts"],[4,"Option"],[3,"PathBuf"],[3,"LRUCache"],[15,"u32"],[3,"ModuleMetadataSerializer"],[3,"ModuleMetadataDeserializer"],[4,"ModuleMetadata"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"ModuleMetadataId"],[15,"bool"],[3,"Vec"],[4,"SerializeError"],[3,"TryFromPrimitiveError"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_network_exports":{"doc":"Manages a connection with a node","t":"NNNENNNNNNNENDDDNNNNEDDNGNNNNNNENNNNNNNNNNNNNGNNNNNNNEDCEEEDEDNNNEDENNNNNNNDNDNNENDGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGNMMMMMMMMMAAAAMMMMMMMMAMMMAMAOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNENNNNNENNNNNNNNNEEENNNEDENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRNEEDDDDNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNEDNNREDDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNIINNENNNNNNNNNNNNNNNNEEIINNNNNNNNNNNNNNNNRRKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLAWWWWDDDGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWWWWHHHHHHDDDLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDDIRRRIDDEDNRNREEEEDDDDDDDDDKKNNNNNNNNNNNNNNNNNNNMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMMMMMMMMMMMMLLLMLMMMLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDDEEDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["ActiveConnectionMissing","AskForBlocks","AskForBlocks","AskForBlocksInfo","AskForOperations","AskForOperations","AskPeerList","AskedForBlocks","AskedPeerList","Banned","BannedPeerTryingToConnect","BlockInfoReply","Bootstrap","BootstrapPeers","BootstrapPeersDeserializer","BootstrapPeersSerializer","ChannelError","Close","CloseConnectionWithNoConnectionToClose","ConnectionClosed","ConnectionClosureReason","ConnectionCount","ConnectionId","ContainerInconsistencyError","Establisher","Failed","GeneralProtocolError","GetBootstrapPeers","GetPeers","GetStats","HandshakeError","HandshakeErrorType","HandshakeIdAlreadyExist","HandshakeInterruption","HandshakeInvalidSignature","HandshakeKey","HandshakeTimeout","HandshakeWrongMessage","Header","Header","IOError","IncompatibleVersion","Info","Info","InvalidIpError","Listener","MassaHashError","MassaSignatureError","MaxPeersConnectionReached","MissingBlock","MissingOperation","MissingPeersError","ModelsError","NetworkCommand","NetworkCommandSender","NetworkConfig","NetworkConnectionErrorType","NetworkError","NetworkEvent","NetworkEventReceiver","NetworkManagementCommand","NetworkManager","NewConnection","NodeBanByIds","NodeBanByIps","NodeCommand","NodeEvent","NodeEventType","NodeSignMessage","NodeUnbanByIds","NodeUnbanByIps","Normal","NotFound","Operations","Operations","Peer","PeerConnectionError","PeerInfo","PeerInfoNotFoundError","PeerListReceived","PeerType","PeerTypeNotFoundError","Peers","ReadHalf","ReceiveAskForOperations","ReceivedAskForBlocks","ReceivedAskForOperations","ReceivedBlockHeader","ReceivedBlockHeader","ReceivedBlockInfo","ReceivedEndorsements","ReceivedEndorsements","ReceivedOperationAnnouncements","ReceivedOperationAnnouncements","ReceivedOperations","ReceivedOperations","ReceivedPeerList","ReceivedReplyForBlocks","RemoveFromWhitelist","ReplyForBlocks","SelfConnection","SendBlockHeader","SendBlockHeader","SendBlockInfo","SendEndorsements","SendEndorsements","SendOperationAnnouncements","SendOperationAnnouncements","SendOperations","SendOperations","SendPeerList","SerdeError","SerializeError","Standard","TimeError","TokioRecvError","TokioTaskJoinError","TooManyConnectionAttempts","TooManyConnectionFailure","UnexpectedError","UnexpectedNodeCommandChannelClosure","UnexpectedWriterClosure","WhiteListed","Whitelist","WriteHalf","WrongSignature","active_in_connections","active_in_connections","active_nodes","active_out_connection_attempts","active_out_connection_attempts","active_out_connections","active_out_connections","advertised","banned","commands","common","error","establisher","ip","ip_addr_deserializer","ip_addr_serializer","join_handle","last_alive","last_failure","length_deserializer","manager_tx","network_controller","our_node_id","peer_info","peer_type","peers","peers","settings","throw_handshake_error","u32_serializer","batch","endorsements","header","info","list","msg","node","node","node","node","operations","response_tx","response_tx","to_node","to_node","wishlist","endorsements","header","info","list","node","node","node","node","node","node","operation_prefix_ids","operation_prefix_ids","operations","source_node_id","AskForBlocks","AskForBlocks","AskForBlocksInfo","AskForOperations","AskForOperations","AskPeerList","AskedForBlocks","AskedPeerList","BlockInfoReply","Close","ConnectionClosed","GetBootstrapPeers","GetPeers","GetStats","Header","Header","Info","Info","NetworkCommand","NetworkEvent","NetworkManagementCommand","NewConnection","NodeBanByIds","NodeBanByIps","NodeCommand","NodeEvent","NodeEventType","NodeSignMessage","NodeUnbanByIds","NodeUnbanByIps","NotFound","Operations","Operations","ReceiveAskForOperations","ReceivedAskForBlocks","ReceivedAskForOperations","ReceivedBlockHeader","ReceivedBlockHeader","ReceivedBlockInfo","ReceivedEndorsements","ReceivedEndorsements","ReceivedOperationAnnouncements","ReceivedOperationAnnouncements","ReceivedOperations","ReceivedOperations","ReceivedPeerList","ReceivedReplyForBlocks","RemoveFromWhitelist","ReplyForBlocks","SendBlockHeader","SendBlockHeader","SendBlockInfo","SendEndorsements","SendEndorsements","SendOperationAnnouncements","SendOperationAnnouncements","SendOperations","SendOperations","SendPeerList","VARIANTS","VARIANTS","Whitelist","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__field2","__field2","__field3","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","lifetime","marker","marker","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_enum","visit_enum","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","batch","endorsements","header","info","list","msg","node","node","node","node","operations","response_tx","response_tx","to_node","to_node","wishlist","endorsements","header","info","list","node","node","node","node","node","node","operation_prefix_ids","operation_prefix_ids","operations","source_node_id","Banned","ConnectionClosureReason","ConnectionId","Failed","Normal","VARIANTS","__Field","__FieldVisitor","__Visitor","__Visitor","__field0","__field1","__field2","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","get_hash","hash","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lifetime","lifetime","marker","marker","partial_cmp","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_enum","visit_newtype_struct","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","ActiveConnectionMissing","BannedPeerTryingToConnect","ChannelError","CloseConnectionWithNoConnectionToClose","ContainerInconsistencyError","DisplayToDisplayDoc","DisplayToDisplayDoc","GeneralProtocolError","HandshakeError","HandshakeErrorType","HandshakeIdAlreadyExist","HandshakeInterruption","HandshakeInvalidSignature","HandshakeKey","HandshakeTimeout","HandshakeWrongMessage","IOError","IncompatibleVersion","InvalidIpError","MassaHashError","MassaSignatureError","MaxPeersConnectionReached","MissingBlock","MissingOperation","MissingPeersError","ModelsError","NetworkConnectionErrorType","NetworkError","PathToDisplayDoc","PathToDisplayDoc","PeerConnectionError","PeerInfoNotFoundError","PeerListReceived","PeerTypeNotFoundError","SelfConnection","SerdeError","SerializeError","TimeError","TokioRecvError","TokioTaskJoinError","TooManyConnectionAttempts","TooManyConnectionFailure","UnexpectedError","UnexpectedNodeCommandChannelClosure","UnexpectedWriterClosure","WrongSignature","_DERIVE_Display_FOR_NetworkConnectionErrorType","_DERIVE_Display_FOR_NetworkError","__displaydoc_display","__displaydoc_display","__displaydoc_display","__displaydoc_display","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into_request","into_request","into_request","provide","provide","source","throw_handshake_error","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","types","","","","","DefaultConnector","DefaultEstablisher","DefaultListener","Establisher","Listener","ReadHalf","WriteHalf","accept","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","default","fmt","fmt","fmt","from","from","from","get_connector","get_listener","into","into","into","into_request","into_request","into_request","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","","","","","","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","META","META","META","NetworkCommandSender","NetworkEventReceiver","NetworkManager","add_to_whitelist","announce_operations","ask_for_block_list","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","drain","fmt","from","from","from","from_ref","get_network_stats","get_peers","into","into","into","into_request","into_request","into_request","join_handle","manager_tx","node_ban_by_ids","node_ban_by_ips","node_sign_message","node_unban_by_ids","node_unban_ips","remove_from_whitelist","send_ask_for_operations","send_block_header","send_block_info","send_endorsements","send_operations","stop","sync_get_bootstrap_peers","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_event","Bootstrap","BootstrapPeers","BootstrapPeersDeserializer","BootstrapPeersSerializer","ConnectionCount","DisplayToDisplayDoc","FIELDS","FIELDS","FIELDS","PathToDisplayDoc","Peer","PeerInfo","PeerType","Peers","Standard","VARIANTS","WhiteListed","_DERIVE_Display_FOR_PeerType","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__displaydoc_display","__displaydoc_display","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field2","__field2","__field3","__field4","__field5","__field6","__field7","__field8","__ignore","__ignore","__ignore","active_in_connections","active_in_connections","active_nodes","active_out_connection_attempts","active_out_connection_attempts","active_out_connections","active_out_connections","advertised","banned","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_usize","get_available_out_connection_attempts","get_hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_usize","ip","ip_addr_deserializer","ip_addr_serializer","is_active","is_peer_ready","last_alive","last_failure","length_deserializer","lifetime","lifetime","lifetime","lifetime","lifetime","marker","marker","marker","marker","marker","new","new","new","our_node_id","partial_cmp","peer_info","peer_type","peers","serialize","serialize","serialize","serialize","serialize","serialize","test","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_serializer","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_map","visit_map","visit_map","visit_newtype_struct","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FIELDS","FIELDS","NetworkConfig","PeerTypeConnectionConfig","__Field","__Field","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__field0","__field0","__field1","__field1","__field10","__field11","__field12","__field13","__field14","__field15","__field16","__field17","__field18","__field19","__field2","__field2","__field20","__field21","__field22","__field23","__field24","__field25","__field26","__field27","__field28","__field29","__field3","__field30","__field31","__field32","__field33","__field34","__field35","__field36","__field37","__field38","__field39","__field4","__field40","__field41","__field5","__field6","__field7","__field8","__field9","__ignore","__ignore","ask_peer_list_interval","ban_timeout","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connect_timeout","controller_channel_size","default","deserialize","deserialize","deserialize","deserialize","endorsement_count","event_channel_size","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","initial_peers_file","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keypair_file","last_start_period","lifetime","lifetime","marker","marker","max_ask_blocks","max_banned_peers","max_bytes_read","max_bytes_write","max_datastore_value_length","max_denunciations_per_block_header","max_endorsements_per_message","max_function_name_length","max_idle_peers","max_in_connection_overflow","max_in_connections","max_in_connections_per_ip","max_message_size","max_op_datastore_entry_count","max_op_datastore_key_length","max_op_datastore_value_length","max_operations_per_block","max_operations_per_message","max_out_attempts","max_parameters_size","max_peer_advertise_length","max_send_wait_network_event","max_send_wait_node_event","message_timeout","node_command_channel_size","node_event_channel_size","peer_list_send_timeout","peer_types_config","peers_file","peers_file_dump_interval","protocol_port","routable_ip","target_out_connections","thread_count","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wakeup_interval"],"q":["massa_network_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_exports::NetworkCommand","","","","","","","","","","","","","","","","massa_network_exports::NetworkEvent","","","","","","","","","","","","","","massa_network_exports::commandsmassa_network_exports::commands::NetworkCommand","","","","","","","","","","","","","","","","massa_network_exports::commands::NetworkEvent","","","","","","","","","","","","","","massa_network_exports::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_exports::establisher","massa_network_exports::establisher::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_exports::network_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_exports::peersmassa_network_exports::settingsd":["Active connection missing:<code>{0}</code>","Ask for info on a list of blocks.","Ask for a block to a node.","Ask for the info about a block.","Ask for a set of operations","Ask for operation","Ask peer list","Someone ask for block with given header hash.","Node we are connected to asked for advertised peers","Connection closed after node ban","A banned peer is trying to connect: {0}","A node replied with info about a block.","if the peer is in bootstrap servers list for now it is …","Peers that are transmitted during bootstrap","Deserializer for <code>BootstrapPeers</code>","Serializer for <code>BootstrapPeers</code>","An error occurred during channel communication: {0}","Close the node worker.","Try to close connection with no connection: {0}","connection to node was closed","Possible reasons for a connection closure","Connection count for a category","A unique connection id for a node","container inconsistency error: {0}","Connection establisher","Connection failed for some reason","Protocol err:{0}","get peers for bootstrap server","<code>(PeerInfo, Vec &lt;(NodeId, bool)&gt;) peer info + list</code> of …","gets network stats","handshake error:{0:?}","Handshake error type","Id already exist","Unexpected interruption","Invalid signature","if remote id is the same as ours","timeout","wrong handshake message","Ask header","Header","IO error : {0}","Incompatible version","The info about the block is required(list of operations …","The info about the block is required(list of operations …","The ip:<code>{0}</code> address is not valid","Connection listener","<code>MassaHash</code> error {0}","<code>massa_signature</code> error {0}","Max connected peers reached: {0}","missing block","missing operation","missing peers","models error: {0}","Commands that the worker can execute","Network command sender","","Incoming and outgoing connection with other peers error …","Network error","network event","network event receiver","Network management command","Network manager","new connection from node","Ban a list of peer by their node id","Ban a list of peer by their ip address","network command","Events node worker can emit. Events are a tuple linking a …","Event types that node worker can emit Append on receive …","sign message with our node keypair (associated to node id) …","Unban a list of peer by their node id","Unban a list of peer by their ip address","Connection was closed properly","Block not found","The actual operations are required.","The actual operations required.","Associate a peer info with nodes","Error during network connection: {0}","All information concerning a peer is here","Peer info not found for address: {0}","Outgoing connection returned a bootstrapable peer list: …","Peer categories. There is a defined number of slots for …","Peer info not found for address: {0}","peers","read half of the TCP stream","Receive a list of asked operations from <code>node</code>","Node we are connected asked for info on a list of blocks.","Receive a list of wanted operations","Node we are connected to sent block header","A block header was received","Info about a block was received","Receive a set of endorsement","received endorsements from node","Received an operation id batch announcing new operations","Receive a list of <code>OperationId</code>","Received full operations.","Receive previously asked Operation","Node we are connected to sent peer list","Node we are connected sent info on a list of blocks.","Remove from whitelist a list of <code>IpAddr</code>","Reply with info on a list of blocks.","Attempt too connect from you own IP","Send the header of a block to a node.","Send a header to a node.","Send info about the content of a block to a node.","Endorsements","Send endorsements to a node","Send a batch of operation ids","Send operation ids batch to a node","Send full Operations (send to a node that previously asked …","Send a batch of full operations","Send given peer list to node.","Serde error : {0}","serialize error: {0}","Just a peer","Time error {0}","error receiving oneshot response : {0}","A tokio task has crashed err:{0}","Too many connection attempt: {0}","Too many connection failure: {0}","Unexpected error","the network controller should not drop a node command …","the writer of a node should not drop its event sender …","Connection from these nodes are always accepted","Whitelist a list of <code>IpAddr</code>","Write half of the TCP stream","wrong signature","Current number of active in connections with that peer. Isn…","Number of currently live (TCP connection active, handshake …","corresponding nodes (true if the connection is outgoing, …","Current number of active out connection attempts with that …","Number of outgoing connections our node is currently …","Current number of active out connections with that peer. …","Number of currently live (TCP connection active, handshake …","Whether peer was promoted through another peer","peer was banned","Declaration of the public and internal Events and Commands …","","","","Peer ip address.","","","network handle","Time in milliseconds when peer was last alive","Time in milliseconds of peer’s last failure","","management commands","","our node id","peer info","The category the peer is in affects how it’s treated.","","peers","network settings","return handshake error","","batch of operation ids","endorsements","block id","block id","node to block ids","arbitrary message","to node id","to node id","to node id","to node id","operations","response channels","response channels","to node id","to node id","operation ids in the wish list","Endorsements","header","block","asked blocks","from node id","node id","node id","from node id","from node id","node id","operation prefix ids","operation prefix ids","operations","from node id","Ask for info on a list of blocks.","Ask for a block to a node.","Ask for the info about a block.","Ask for a set of operations","Ask for operation","Ask peer list","Someone ask for block with given header hash.","Node we are connected to asked for advertised peers","A node replied with info about a block.","Close the node worker.","connection to node was closed","get peers for bootstrap server","<code>(PeerInfo, Vec &lt;(NodeId, bool)&gt;) peer info + list</code> of …","gets network stats","Ask header","Header","The info about the block is required(list of operations …","The info about the block is required(list of operations …","Commands that the worker can execute","network event","Network management command","new connection from node","Ban a list of peer by their node id","Ban a list of peer by their ip address","network command","Events node worker can emit. Events are a tuple linking a …","Event types that node worker can emit Append on receive …","sign message with our node keypair (associated to node id) …","Unban a list of peer by their node id","Unban a list of peer by their ip address","Block not found","The actual operations are required.","The actual operations required.","Receive a list of asked operations from <code>node</code>","Node we are connected asked for info on a list of blocks.","Receive a list of wanted operations","Node we are connected to sent block header","A block header was received","Info about a block was received","Receive a set of endorsement","received endorsements from node","Received an operation id batch announcing new operations","Receive a list of <code>OperationId</code>","Received full operations.","Receive previously asked Operation","Node we are connected to sent peer list","Node we are connected sent info on a list of blocks.","Remove from whitelist a list of <code>IpAddr</code>","Reply with info on a list of blocks.","Send the header of a block to a node.","Send a header to a node.","Send info about the content of a block to a node.","Endorsements","Send endorsements to a node","Send a batch of operation ids","Send operation ids batch to a node","Send full Operations (send to a node that previously asked …","Send a batch of full operations","Send given peer list to node.","","","Whitelist a list of <code>IpAddr</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","batch of operation ids","endorsements","block id","block id","node to block ids","arbitrary message","to node id","to node id","to node id","to node id","operations","response channels","response channels","to node id","to node id","operation ids in the wish list","Endorsements","header","block","asked blocks","from node id","node id","node id","from node id","from node id","node id","operation prefix ids","operation prefix ids","operations","from node id","Connection closed after node ban","Possible reasons for a connection closure","A unique connection id for a node","Connection failed for some reason","Connection was closed properly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Active connection missing:<code>{0}</code>","A banned peer is trying to connect: {0}","An error occurred during channel communication: {0}","Try to close connection with no connection: {0}","container inconsistency error: {0}","","","Protocol err:{0}","handshake error:{0:?}","Handshake error type","Id already exist","Unexpected interruption","Invalid signature","if remote id is the same as ours","timeout","wrong handshake message","IO error : {0}","Incompatible version","The ip:<code>{0}</code> address is not valid","<code>MassaHash</code> error {0}","<code>massa_signature</code> error {0}","Max connected peers reached: {0}","missing block","missing operation","missing peers","models error: {0}","Incoming and outgoing connection with other peers error …","Network error","","","Error during network connection: {0}","Peer info not found for address: {0}","Outgoing connection returned a bootstrapable peer list: …","Peer info not found for address: {0}","Attempt too connect from you own IP","Serde error : {0}","serialize error: {0}","Time error {0}","error receiving oneshot response : {0}","A tokio task has crashed err:{0}","Too many connection attempt: {0}","Too many connection failure: {0}","Unexpected error","the network controller should not drop a node command …","the writer of a node should not drop its event sender …","wrong signature","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Initiates a connection with given timeout in milliseconds","Establishes a connection","The listener we are using","Connection establisher","Connection listener","read half of the TCP stream","Write half of the TCP stream","Accepts a new incoming connection from this listener.","","","","","","","Tries to connect to a address","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the connector with associated timeout","Gets the associated listener","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates an Establisher.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network command sender","network event receiver","Network manager","add ip to whitelist","Create a new call to the network, sending a announcement …","Send the order to ask for a block.","","","","","","","","","drains remaining events and returns them in a <code>VecDeque</code> …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Send the order to get peers.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","network handle","management commands","ban node(s) by id(s)","ban node(s) by ip(s)","Sign a message using the node’s keypair","remove from banned node(s) by id(s)","remove from banned node(s) by ip(s)","remove ip from whitelist","Create a new call to the network, sending a <code>wishlist</code> of …","Send the order to send block header.","Send info about the contents of a block.","send endorsements to node id","send operations to node","stop network","Send the order to get bootstrap peers.","","","","","","","","","","","","","","wait network event","if the peer is in bootstrap servers list for now it is …","Peers that are transmitted during bootstrap","Deserializer for <code>BootstrapPeers</code>","Serializer for <code>BootstrapPeers</code>","Connection count for a category","","","","","","Associate a peer info with nodes","All information concerning a peer is here","Peer categories. There is a defined number of slots for …","peers","Just a peer","","Connection from these nodes are always accepted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current number of active in connections with that peer. Isn…","Number of currently live (TCP connection active, handshake …","corresponding nodes (true if the connection is outgoing, …","Current number of active out connection attempts with that …","Number of outgoing connections our node is currently …","Current number of active out connections with that peer. …","Number of currently live (TCP connection active, handshake …","Whether peer was promoted through another peer","peer was banned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cleans up the <code>PeerInfo</code> by normalizing the IP address and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets available out connection attempts for given …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Peer ip address.","","","Returns true if there is at least one connection attempt / …","peer is ready to be retried, enough time has elapsed since …","Time in milliseconds when peer was last alive","Time in milliseconds of peer’s last failure","","","","","","","","","","","","Creates a new <code>BootstrapPeersSerializer</code>","Creates a new <code>BootstrapPeersDeserializer</code>","New standard <code>PeerInfo</code> for <code>IpAddr</code>","our node id","","peer info","The category the peer is in affects how it’s treated.","peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network configuration","Connection configuration for a peer type Limit the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Every <code>ask_peer_list_interval</code> in milliseconds we ask every …","Time after which we forget a node","Where to listen for communications.","","","","","","","","","","","","","","","","","","","","","Time interval spent waiting for a response from a peer. In …","Controller channel size","","","","","","Endorsement count","Event channel size","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Path to the file containing initial peers.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Path to the file containing our keypair","last start period, used in message deserialization","","","","","Max number ids in ask blocks message","Limit on the number of banned peers we remember.","Read limitation for a connection in bytes per seconds","Write limitation for a connection in bytes per seconds","Maximum length of a datastore value","max denunciations in block header","Max endorsements per message","Maximum length function name in call SC","Limit on the number of idle peers we remember.","Max number of in connection overflowed managed by the …","max number of incoming connection","Limit on the number of in connections per ip.","Max message size","Maximum entry in an operation datastore","Maximum length of an operation datastore key","Maximum length of an operation datastore value","Max operations per block","Max operations per message in the network to avoid sending …","max number of on going outgoing connection attempt","Maximum size of parameters in call SC","Max peer advertise length","Max wait time for sending a Network event.","Max wait time for sending a Node event.","After <code>message_timeout</code> milliseconds we are no longer …","Node command channel size","Node event channel size","Timeout Duration when we send a <code>PeerList</code> in handshake","Configuration for <code>PeerType</code> connections","Path to the file containing known peers.","Peer database is dumped every <code>peers_file_dump_interval</code> in …","Protocol port","Our own IP if it is routable, else None.","target number of outgoing connections","Thread count","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Network_worker</code> will try to connect to available peers …"],"i":[34,1,16,0,1,16,1,17,2,24,36,0,73,0,0,0,34,1,36,17,0,0,0,34,0,24,34,16,16,16,34,0,35,35,35,35,35,35,4,5,34,35,4,5,34,0,34,34,36,34,34,34,34,0,0,0,0,0,0,0,0,0,17,16,16,0,0,0,16,16,16,24,5,4,5,0,34,0,36,35,0,36,0,0,17,2,2,2,17,17,2,17,2,17,2,17,2,2,16,1,36,1,16,16,1,16,1,16,1,16,1,34,34,73,34,34,34,36,36,36,34,34,73,16,0,34,71,75,72,71,75,71,75,71,71,0,0,0,0,71,76,74,69,71,71,76,69,0,63,72,71,0,63,0,0,74,103,104,105,106,107,108,106,105,104,109,109,108,110,103,111,111,112,113,114,115,114,115,116,117,118,112,117,118,116,113,1,16,0,1,16,1,17,2,0,1,17,16,16,16,4,5,4,5,0,0,0,17,16,16,0,0,0,16,16,16,5,4,5,17,2,2,2,17,17,2,17,2,17,2,17,2,2,16,1,1,16,16,1,16,1,16,1,16,1,0,0,16,0,0,0,0,0,0,7,8,7,8,7,8,8,1,2,3,4,7,9,12,16,5,8,13,14,17,18,1,2,3,4,7,9,12,16,5,8,13,14,17,18,1,2,3,4,5,1,2,3,4,5,4,4,7,5,8,9,12,13,14,1,2,3,4,9,12,16,5,13,14,17,18,1,2,3,4,7,9,12,16,5,8,13,14,17,18,1,2,3,4,5,1,2,3,4,7,9,12,16,5,8,13,14,17,18,1,2,3,4,7,9,12,16,5,8,13,14,17,18,12,14,12,14,4,5,1,2,3,4,5,1,2,3,4,7,9,12,16,5,8,13,14,17,18,1,2,3,4,7,9,12,16,5,8,13,14,17,18,1,2,3,4,7,9,12,16,5,8,13,14,17,18,9,13,12,14,9,13,9,13,1,2,3,4,7,9,12,16,5,8,13,14,17,18,103,104,105,106,107,108,106,105,104,109,109,108,110,103,111,111,112,113,114,115,114,115,116,117,118,112,117,118,116,113,24,0,0,24,24,0,0,0,0,0,26,26,26,23,28,24,26,29,30,23,28,24,26,29,30,23,24,23,24,23,23,23,24,26,23,24,23,24,28,29,30,23,23,28,24,29,30,23,28,24,26,29,30,23,24,23,23,23,28,24,26,29,30,23,28,24,26,29,30,28,30,28,30,23,23,24,23,24,23,23,28,24,26,29,30,23,28,24,26,29,30,23,28,24,26,29,30,29,30,28,28,29,29,23,28,24,26,29,30,34,36,34,36,34,0,0,34,34,0,35,35,35,35,35,35,34,35,34,34,34,36,34,34,34,34,0,0,0,0,34,36,35,36,36,34,34,34,34,34,36,36,36,34,34,34,0,0,119,120,121,122,34,35,36,34,35,36,34,34,35,36,36,34,34,34,34,34,34,34,34,34,34,34,35,36,34,35,36,34,35,36,34,36,34,0,34,36,34,35,36,34,35,36,34,35,36,34,35,36,0,0,0,0,0,0,0,0,0,0,0,0,48,48,50,52,48,50,52,50,52,48,50,52,48,50,52,52,52,48,50,52,48,50,52,52,48,50,52,48,50,52,48,50,52,48,50,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,60,69,54,60,69,54,54,54,60,54,60,69,54,54,54,54,60,69,54,60,69,54,69,69,54,54,54,54,54,54,54,54,54,54,54,69,54,54,60,69,54,60,69,54,60,69,54,60,69,54,60,73,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,124,80,81,82,83,80,81,82,83,82,83,83,83,83,83,83,83,80,81,83,71,75,72,71,75,71,75,71,71,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,71,72,63,70,73,71,72,63,70,73,71,73,74,73,75,76,72,80,63,81,70,73,82,71,83,70,73,70,73,84,85,86,87,88,89,90,91,92,72,84,85,63,86,87,70,88,73,73,89,90,71,91,92,75,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,72,63,70,73,71,73,75,73,73,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,73,71,76,74,71,71,71,71,76,85,87,88,90,92,85,87,88,90,92,74,76,71,63,73,72,71,63,74,72,63,70,73,71,0,72,63,70,73,71,73,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,74,84,86,89,91,90,85,87,92,88,85,87,88,92,84,86,89,91,84,86,89,91,74,76,72,80,84,85,63,81,86,87,70,88,73,82,89,90,71,83,91,92,75,0,0,0,0,0,0,0,0,0,0,97,98,97,98,97,97,97,97,97,97,97,97,97,97,97,98,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,98,96,96,96,96,97,99,100,94,98,101,102,96,97,99,100,94,98,101,102,96,94,96,94,96,96,94,96,97,94,98,96,96,99,100,101,102,96,99,100,94,101,102,96,97,99,100,94,98,101,102,96,94,96,96,97,99,100,94,98,101,102,96,97,99,100,94,98,101,102,96,96,100,102,100,102,96,96,96,96,96,96,96,96,96,96,94,96,96,96,96,96,96,96,94,96,96,96,96,96,96,96,96,96,96,96,96,96,94,96,96,94,96,97,99,100,94,98,101,102,96,97,99,100,94,98,101,102,96,97,99,100,94,98,101,102,99,101,100,102,100,102,99,101,99,101,96,97,99,100,94,98,101,102,96],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[],4],[[],[[6,[4]]]],[[],[[6,[7]]]],[[],[[6,[5]]]],[[],[[6,[8]]]],[[9,10],11],[[12,10],11],[[13,10],11],[[14,10],11],[[1,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[16,10],11],[[5,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[17,10],11],[[18,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,[4,6],[5,6],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[9,6],[13,6],[12,6],[14,6],[[9,21],6],[[13,21],6],[[9,22],6],[[13,22],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[24,24],[[]],[[]],[[23,23],25],[[],23],[[],[[6,[23]]]],[[],[[6,[24]]]],[[],[[6,[26]]]],[[23,23],27],[[24,24],27],[[],27],[[],27],[[28,10],11],[[29,10],11],[[30,10],11],[[23,10],11],[[23,10],11],[10,[[6,[15]]]],[[24,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[23],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,[[23,23],[[31,[25]]]],[23,6],[24,6],[[]],[[]],[[],32],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[29,6],[30,6],[28,6],[28,6],[[29,21],6],[[29,22],6],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],33],[[]],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[34,10],11],[[34,10],11],[[35,10],11],[[36,10],11],[[36,10],11],[37,34],[38,34],[39,34],[40,34],[41,34],[42,34],[36,34],[43,34],[[]],[44,34],[45,34],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[46],[46],[34,[[31,[47]]]],0,[[],32],[[],32],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[48,49],[[]],[[]],[[]],[[]],[[]],[[]],[[50,51],49],[[],52],[[48,10],11],[[50,10],11],[[52,10],11],[[]],[[]],[[]],[[52,53],[[49,[50]]]],[[52,51],[[49,[48]]]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],52],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[54,[56,[55]]],[[6,[34]]]],[[54,57,58],[[6,[34]]]],[[54,[59,[57,56]]],[[6,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[[]],[60,[[61,[17]]]],[[54,10],11],[[]],[[]],[[]],[[]],[54,[[6,[62,34]]]],[54,[[6,[63,34]]]],[[]],[[]],[[]],[[],19],[[],19],[[],19],0,0,[[54,[56,[57]]],[[6,[34]]]],[[54,[56,[55]]],[[6,[34]]]],[[54,[56,[64]]],[[6,[65,34]]]],[[54,[56,[57]]],[[6,[34]]]],[[54,[56,[55]]],[[6,[34]]]],[[54,[56,[55]]],[[6,[34]]]],[[54,57,58],[[6,[34]]]],[[54,57,66],[[6,[34]]]],[[54,57,56],[[6,[34]]]],[[54,57,[56,[67]]],[[6,[34]]]],[[54,57,[56,[68]]],[[6,[34]]]],[[69,60],[[6,[34]]]],[54,[[6,[70,34]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[]],[[]],[[]],[60,[[6,[17,34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71],[72,72],[63,63],[70,70],[73,73],[71,71],[[]],[[]],[[]],[[]],[[]],[[73,73],25],[[],74],[[],73],[[],75],[76,[[79,[70,[0,[77,78]]]]]],[[],[[6,[72]]]],[[],[[6,[80]]]],[[],[[6,[63]]]],[[],[[6,[81]]]],[[],[[6,[70]]]],[[],[[6,[73]]]],[[],[[6,[82]]]],[[],[[6,[71]]]],[[],[[6,[83]]]],[[70,70],27],[[73,73],27],[[],27],[[],27],[[84,10],11],[[85,10],11],[[86,10],11],[[87,10],11],[[88,10],11],[[89,10],11],[[90,10],11],[[91,10],11],[[92,10],11],[[72,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[63,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[70,10],11],[10,[[6,[15]]]],[[73,10],11],[[73,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[71,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[75,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,73],[[75,94],93],[[],22],[73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[73,93],0,0,0,[71,27],[[71,53,53],27],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],74],[95,76],[[55,27],71],0,[[73,73],[[31,[25]]]],0,0,0,[[74,70,56],[[6,[39]]]],[72,6],[63,6],[70,6],[73,6],[71,6],0,[[]],[[]],[[]],[[]],[[]],[[],32],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[84,6],[86,6],[89,6],[91,6],[90,6],[85,6],[87,6],[92,6],[88,6],[85,6],[87,6],[88,6],[92,6],[[84,21],6],[[86,21],6],[[89,21],6],[[91,21],6],[[84,22],6],[[86,22],6],[[89,22],6],[[91,22],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,96],[94,94],[[]],[[]],0,0,[[],94],[[],[[6,[96]]]],[[],[[6,[97]]]],[[],[[6,[94]]]],[[],[[6,[98]]]],0,0,[[99,10],11],[[100,10],11],[[101,10],11],[[102,10],11],[[96,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[94,10],11],[10,[[6,[15]]]],[10,[[6,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[99,6],[101,6],[100,6],[102,6],[100,6],[102,6],[[99,21],6],[[101,21],6],[[99,22],6],[[101,22],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0],"p":[[4,"NodeCommand"],[4,"NodeEventType"],[3,"NodeEvent"],[4,"AskForBlocksInfo"],[4,"BlockInfoReply"],[4,"Result"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[4,"NetworkCommand"],[4,"NetworkEvent"],[4,"NetworkManagementCommand"],[3,"Request"],[3,"TypeId"],[15,"str"],[15,"u64"],[3,"ConnectionId"],[4,"ConnectionClosureReason"],[4,"Ordering"],[4,"__Field"],[15,"bool"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[4,"Option"],[3,"String"],[3,"Display"],[4,"NetworkError"],[4,"HandshakeErrorType"],[4,"NetworkConnectionErrorType"],[3,"RecvError"],[4,"TimeError"],[4,"SerializeError"],[4,"ModelsError"],[3,"Error"],[3,"Error"],[4,"MassaHashError"],[4,"MassaSignatureError"],[3,"JoinError"],[3,"Demand"],[8,"Error"],[3,"DefaultListener"],[6,"Result"],[3,"DefaultConnector"],[4,"SocketAddr"],[3,"DefaultEstablisher"],[3,"MassaTime"],[3,"NetworkCommandSender"],[4,"IpAddr"],[3,"Vec"],[3,"NodeId"],[6,"OperationPrefixIds"],[3,"HashMap"],[3,"NetworkEventReceiver"],[3,"VecDeque"],[3,"NetworkStats"],[3,"Peers"],[15,"u8"],[3,"PubkeySig"],[6,"SecuredHeader"],[6,"SecureShareEndorsement"],[6,"SecureShareOperation"],[3,"NetworkManager"],[3,"BootstrapPeers"],[3,"PeerInfo"],[3,"Peer"],[4,"PeerType"],[3,"BootstrapPeersSerializer"],[3,"ConnectionCount"],[3,"BootstrapPeersDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[15,"usize"],[3,"PeerTypeConnectionConfig"],[15,"u32"],[3,"NetworkConfig"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[13,"SendOperationAnnouncements"],[13,"SendEndorsements"],[13,"SendBlockHeader"],[13,"SendBlockInfo"],[13,"AskForBlocks"],[13,"NodeSignMessage"],[13,"SendOperations"],[13,"GetStats"],[13,"AskForOperations"],[13,"ReceivedEndorsements"],[13,"ReceivedBlockHeader"],[13,"ReceivedBlockInfo"],[13,"AskedForBlocks"],[13,"ReceivedOperations"],[13,"ReceivedOperationAnnouncements"],[13,"ReceiveAskForOperations"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_network_worker":{"doc":"Manages a connection with a node","t":"WHHHHHHHHHHHHHHHHAAAAAAAAFWWHHDDLLLLMMLLLLLLMMMMMMLLLMLLLLLLLLLMWHHGDHHLLLLLMMLMLMLLLMLMNNRNNRNNRNNRENNRRRNNRNNRNRNREDDENRNNNNNRRRNNRNNRREEEDDDDDDNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLMMMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMWWWWWWWWWWWWWWWWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFFFFFFFFFFFFFFFFFFFFFFFWWHHHDHHHLLLMLALLLLMLMLLLLLWWWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHOFFFFFFFFFWWWWWWWRHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDMMLLLLMLMMMMMMMLLMMLLLLMMLLLLLMMLLMLMMLLLLLLLMLLWWWWRHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDLLMLLLLMMMMFFLFMMLLLLWWWWWRHHHHHHHHHHHHDLLLLLLFLLLFLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLMMLLLLLLLLLML","n":["","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","binders","handshake_worker","messages","network_cmd_impl","network_event","network_worker","node_worker","peer_info_database","start_network_controller","","","CALLSITE","META","ReadBinder","WriteBinder","borrow","borrow","borrow_mut","borrow_mut","buf","cursor","from","from","into","into","into_request","into_request","max_message_size","max_message_size","message_deserializer","message_index","message_index","msg_size","new","new","next","read_half","send","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_half","","CALLSITE","CALLSITE","HandshakeReturnType","HandshakeWorker","META","META","borrow","borrow_mut","from","into","into_request","keypair","reader","run","self_node_id","spawn","timeout_duration","try_from","try_into","type_id","version","vzip","writer","AskForBlocks","AskForBlocks","AskForBlocks__num_enum_0__","AskForOperations","AskForOperations","AskForOperations__num_enum_0__","AskPeerList","AskPeerList","AskPeerList__num_enum_0__","BlockHeader","BlockHeader","BlockHeader__num_enum_0__","BlockInfoType","Endorsements","Endorsements","Endorsements__num_enum_0__","FIELDS","FIELDS","HandshakeInitiation","HandshakeInitiation","HandshakeInitiation__num_enum_0__","HandshakeReply","HandshakeReply","HandshakeReply__num_enum_0__","Header","Header__num_enum_0__","Info","Info__num_enum_0__","Message","MessageDeserializer","MessageSerializer","MessageTypeId","NotFound","NotFound__num_enum_0__","Operations","Operations","Operations","OperationsAnnouncement","OperationsAnnouncement","OperationsAnnouncement__num_enum_0__","Operations__num_enum_0__","Operations__num_enum_0__","PeerList","PeerList","PeerList__num_enum_0__","ReplyForBlocks","ReplyForBlocks","ReplyForBlocks__num_enum_0__","VARIANTS","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field1","__field1","__field10","__field2","__field2","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","__ignore","ask_block_number_deserializer","block_header_deserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deserialize","deserialize","deserialize","deserialize","deserialize","endorsement_deserializer","endorsements_length_deserializer","eq","eq","equivalent","equivalent","expecting","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash_deserializer","id_deserializer","infos_deserializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ip_addr_deserializer","ip_addr_serializer","lifetime","lifetime","lifetime","marker","marker","marker","new","new","operation_prefix_ids_deserializer","operation_prefix_ids_serializer","operation_replies_deserializer","operations_deserializer","operations_ids_serializer","operations_serializer","peer_list_length_deserializer","public_key_deserializer","secure_serializer","serialize","serialize","signature_deserializer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_serializer","version_deserializer","version_serializer","visit_bytes","visit_bytes","visit_bytes","visit_enum","visit_map","visit_map","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","public_key","random_bytes","signature","version","","","","","","","","","","","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","ban_connection_ids","get_connection_ids","get_ip","get_peers","node_ban_by_ids","node_ban_by_ips","on_ask_for_block_cmd","on_ask_for_operations_cmd","on_get_bootstrap_peers_cmd","on_get_peers_cmd","on_get_stats_cmd","on_node_ban_by_ids_cmd","on_node_ban_by_ips_cmd","on_node_sign_message_cmd","on_node_unban_by_ids_cmd","on_node_unban_by_ips_cmd","on_remove_from_whitelist_cmd","on_send_block_header_cmd","on_send_block_info_cmd","on_send_endorsements_cmd","on_send_operation_batches_cmd","on_send_operations_cmd","on_whitelist_cmd","","","CALLSITE","CALLSITE","CALLSITE","EventSender","META","META","META","borrow","borrow_mut","clone_node_sender","controller_event_tx","drop","event_impl","forward","from","into","into_request","max_send_wait","new","node_event_tx","send","try_from","try_into","type_id","vzip","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","evt_failed","on_asked_peer_list","on_received_ask_for_blocks","on_received_ask_for_operations","on_received_block_header","on_received_block_info","on_received_endorsements","on_received_operations","on_received_operations_annoncement","on_received_peer_list","","","","","","","","BRANCHES","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NetworkWorker","NetworkWorkerChannels","active_connections","active_nodes","borrow","borrow","borrow_mut","borrow_mut","cfg","connection_closed","controller_command_rx","controller_command_rx","controller_event_tx","controller_manager_rx","controller_manager_rx","establisher","event","from","from","handshake_futures","handshake_peer_list_futures","into","into","into_request","into_request","keypair","listener","manage_in_connections","manage_network_command","manage_out_connections","manage_successful_connection","new","node_event_rx","node_worker_handles","on_handshake_finished","on_node_event","peer_info_db","run_loop","running_handshakes","self_node_id","try_from","try_from","try_into","try_into","try_send_peer_list_in_handshake","type_id","type_id","version","vzip","vzip","","","","","BRANCHES","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NodeWorker","borrow","borrow_mut","cfg","from","into","into_request","new","node_command_rx","node_command_tx","node_event_tx","node_id","node_reader_handle","node_writer_handle","run_loop","send_node_event","socket_reader","socket_writer_opt","try_from","try_into","type_id","vzip","","","","","","BRANCHES","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","PeerInfoDatabase","borrow","borrow_mut","can_decrease_global_active_in_connection_count","can_remove_active_out_connection_count","can_remove_new_out_connection_attempt","can_try_new_out_connection","cleanup_peers","decrease_global_active_in_connection_count","decrease_global_active_out_connection_attempt_count","decrease_global_active_out_connection_count","dump_peers","from","get_advertisable_peer_ips","get_available_out_connection_attempts_for_peer_type","get_global_active_in_connection_count","get_global_active_out_connection_attempt_count","get_global_active_out_connection_count","get_in_connection_count","get_out_connection_candidate_ips","get_out_connection_candidate_ips_for_type","get_out_connection_count","get_peer_type","get_peers","in_connection_closed","increase_global_active_in_connection_count","increase_global_active_out_connection_attempt_count","increase_global_active_out_connection_count","into","into_request","is_max_in_connection_count_reached","is_target_out_connection_count_reached","merge_candidate_peers","network_settings","new","new_out_connection_attempt","out_connection_attempt_failed","out_connection_closed","peer_alive","peer_banned","peer_failed","peer_types_connection_count","peers","remove_from_whitelist","request_dump","saver_join_handle","saver_watch_tx","stop","try_from","try_into","try_new_in_connection","try_out_connection_attempt_success","type_id","unban","update","vzip","wakeup_interval","whitelist"],"q":["massa_network_worker","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::binders","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::handshake_worker","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::messages::Message","","","","massa_network_worker::network_cmd_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::network_event","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::network_event::event_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::network_worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::node_worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_network_worker::peer_info_database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","<code>Flexbuffer</code> layer between raw data and our objects.","Here are happening handshakes.","","On <code>NetworkWorker</code> receive a command behaviors implementation","","The network worker actually does the job of managing …","","","Starts a new <code>NetworkWorker</code> in a spawned task","","","","","Used to receive and deserialize data.","Used to serialize and send data.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>WriteBinder</code> with a bandwidth <code>limit</code> in bytes …","Creates a new <code>ReadBinder</code> with a bandwidth <code>limit</code> in bytes …","Awaits the next incoming message and deserializes it. …","","Sends a serialized message.","","","","","","","","","","","","","Type alias for more readability","Manages handshakes.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Our keypair.","Listens incoming data.","Manages one on going handshake. Consumes self. Returns a …","Our node id.","Creates a new handshake worker.","After <code>timeout_duration</code> milliseconds, the handshake attempt …","","","","","","Sends out data.","Message asking the peer for info on a list of blocks.","","","Someone ask for operations.","","","Message asking the peer for its advertisable peers list.","","","Block header","","","","Endorsements","","","","","Initiates handshake.","","","Reply to a handshake initiation message.","","","","","","","All messages that can be sent or received.","Basic deserializer for <code>Message</code>.","Basic serializer for <code>Message</code>.","","","","A list of operations","","","Batch of operation ids","","","","","Reply to a <code>AskPeerList</code> message Peers are ordered from most …","","","Message replying with info on a list of blocks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>MessageSerializer</code>.","Creates a new <code>MessageDeserializer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Our <code>public_key</code>, so the peer can decode our reply.","Random data we expect the peer to sign with its <code>keypair</code>. …","Signature of the received random bytes with our <code>keypair</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove the <code>ids</code> from the <code>worker</code>","","","For each peer get all node id associated to this peer ip.","Ban the connections corresponding to node <code>ids</code> from the …","Ban the connections corresponding to <code>ips</code> from the <code>worker</code> …","","Network worker received the command …","","","","","","","","","","","","","On the command …","Network worker received the command …","","","","","","","","","","","","","","Sender for network events","","","Forward a message to a node worker. If it fails, notify …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Max time spend to wait","","Channel for sending node events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The node worker signal that he received a list of …","","","","The node worker signal that he received some full …","The node worker signal that he received a batch of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Real job is done by network worker","","Map of connection to ip, <code>is_outgoing</code>.","Ids of active nodes mapped to Connection id, node command …","","","","","Network configuration.","","Receiver for network commands","","","Receiver for network management commands","","The connection establisher.","Event sender","Returns the argument unchanged.","Returns the argument unchanged.","Running handshakes futures.","Running handshakes that send a list of peers.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Our keypair.","Listener part of the establisher.","Manages in connection Only used inside worker’s <code>run_loop</code>","Manages network commands Only used inside worker’s …","Manages out connection Only used inside worker’s <code>run_loop</code>","Manage a successful incoming and outgoing connection, …","Creates a new <code>NetworkWorker</code>","Receiving channel for node events.","Node worker handles","Manages finished handshakes. Only used by the worker.","Manages node events. Only used by the worker.","Database with peer information.","Runs the main loop of the network worker There is a …","Set of connection id of node with running handshake.","Our node id.","","","","","Start to mock a handshake and try to send a message with a …","","","Node version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages connections One worker per node.","","","Protocol configuration.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Creates a new node worker","Channel to receive node commands.","Channel to send node commands.","Channel to send node events.","Node id associated to that worker.","Handle socket read function until a message is received …","Handle incoming node command, convert to message(s) and …","node event loop. Consumes self.","Send a node event","Reader for incoming data.","Optional writer to send data.","","","","","","","","","","","","","","","","","","","","","","","Contains all information about every peers we know about.","","","","","","","Cleans up the peer database using max values provided by …","","","","Saves advertised and non standard peers to a file.","Returns the argument unchanged.","Returns a vector of advertisable <code>IpAddr</code> sorted by …","","similar to <code>get_global_active_out_connection_count</code> and …","similar to <code>get_global_active_out_connection_count</code> and …","similar to <code>get_global_active_out_connection_attempt_count</code> …","total in connection count, considering all peer types …","Sorts peers by <code>( last_failure, rev(last_success) )</code> and …","Get ips we want to connect to for a given peer type","total out connections count, considering all peer types …","","returns Hashmap of <code>IpAddrs</code> -&gt; <code>PeerInfo</code>","Notifies that an inbound connection is closed.","","","","Calls <code>U::from(self)</code>.","","","","Merges <code>new_peers</code> with our peers using the <code>cleanup_peers</code> …","Network configuration.","Creates new <code>PeerInfoDatabase</code> from <code>NetworkConfig</code>. will only …","Acknowledges a new out connection attempt to ip.","Oh no an out connection attempt failed.","Notifies of a closed outgoing connection.","Sets the peer status as alive. Requests a subsequent dump.","Sets that the peer is banned now. If the peer is not …","Sets the peer status as failed. Requests a dump.","Connections count for each <code>PeerType</code>","Maps an ip address to peer’s info","","Request peers dump to file","Handle on the task managing the dump","Monitor changed peers.","Cleanly closes <code>peerInfoDatabase</code>, performing one last peer …","","","An ip has successfully connected to us. returns true if …","An out connection attempt succeeded. returns false if …","","Unban a list of ip","Refreshes the peer list. Should be called at regular …","","Every <code>wakeup_interval</code> we try to establish a connection …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,15,12,15,15,15,12,15,12,15,12,15,12,15,15,12,15,15,12,15,15,15,12,12,15,12,15,12,15,12,15,12,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,16,32,0,16,32,0,16,32,0,16,32,0,0,16,32,0,0,0,16,32,0,16,32,0,34,0,34,0,0,0,0,0,34,0,16,32,34,16,32,0,0,0,16,32,0,16,32,0,0,0,0,0,0,0,0,0,0,0,29,30,31,29,30,29,29,30,29,29,29,29,29,29,29,30,31,14,14,25,14,16,29,35,38,30,39,40,31,41,42,32,34,25,14,16,29,35,38,30,39,40,31,41,42,32,34,25,14,16,29,30,31,14,14,32,34,32,34,35,38,39,40,41,42,16,35,38,39,40,41,42,32,34,25,14,16,29,35,38,30,39,40,31,41,42,32,34,14,14,14,25,14,16,29,35,38,30,39,40,31,41,42,32,34,25,14,16,29,35,38,30,39,40,31,41,42,32,34,14,25,38,40,42,38,40,42,25,14,14,25,14,14,25,25,14,14,25,25,16,14,25,14,16,29,35,38,30,39,40,31,41,42,32,32,34,34,32,34,25,14,16,29,35,38,30,39,40,31,41,42,32,34,25,14,16,29,35,38,30,39,40,31,41,42,32,34,25,14,25,35,39,41,38,40,42,40,42,35,39,41,35,39,41,25,14,16,29,35,38,30,39,40,31,41,42,32,34,82,82,83,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,0,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,50,50,73,50,73,50,50,50,73,73,50,73,50,50,50,73,50,50,50,73,50,73,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,73,50,73,50,50,73,50,50,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,76,76,76,76,76,76,76,0,0,76,0,76,76,76,76,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,72,72,72,72,0,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]],5],[[7,[6]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],8],[[],8],0,0,0,0,0,0,[[9,10,11],12],[[13,10,11,14],15],[15,[[7,[4,6]]]],0,[[12,16],[[7,[17,6]]]],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],8],0,0,[19,[[7,[6]]]],0,[[13,9,20,21,22,5,23,10,10,17],24],0,[[],7],[[],7],[[],18],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[14,[[28,[16,[0,[26,27]]]]]],[[],[[7,[16]]]],[[],[[7,[29]]]],[[],[[7,[30]]]],[[],[[7,[31]]]],0,0,[[32,32],33],[[34,34],33],[[],33],[[],33],[[35,36],37],[[38,36],37],[[39,36],37],[[40,36],37],[[41,36],37],[[42,36],37],[[16,36],37],[36,[[7,[43]]]],[36,[[7,[43]]]],[36,[[7,[43]]]],[36,[[7,[43]]]],[36,[[7,[43]]]],[36,[[7,[43]]]],[[32,36],37],[[34,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,[[],25],[[44,11,11,11,11,11,11,17,45,11,17,44,17,11,[4,[17]]],14],0,0,0,0,0,0,0,0,0,[[25,16,46],[[7,[47]]]],[16,7],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[11,[[7,[32,[48,[32]]]]]],[[],7],[[],7],[11,[[7,[34,[48,[34]]]]]],[[],[[7,[32,[48,[32]]]]]],[[],[[7,[34,[48,[34]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,[35,7],[39,7],[41,7],[38,7],[40,7],[42,7],[40,7],[42,7],[[35,49],7],[[39,49],7],[[41,49],7],[[35,17],7],[[39,17],7],[[41,17],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[50,[51,[23]]]],[[50,20],[[7,[[51,[23]],6]]]],[[50,20],[[4,[52]]]],[[50,[54,[53]]]],[[50,[46,[20]]],[[7,[6]]]],[[50,[46,[52]]],[[7,[6]]]],[[50,[55,[20,46]]]],[[50,20,56]],[[50,[54,[3]]]],[[50,[54,[53]]]],[[50,[54,[57]]]],[[50,[46,[20]]],[[7,[6]]]],[[50,[46,[52]]],[[7,[6]]]],[[50,[46,[44]],[54,[58]]],[[7,[6]]]],[[50,[46,[20]]],[[7,[6]]]],[[50,[46,[52]]],[[7,[6]]]],[[50,[46,[52]]],[[7,[6]]]],[[50,20,59],[[7,[6]]]],[[50,20,46],[[7,[6]]]],[[50,20,[46,[60]]]],[[50,20,56]],[[50,20,[46,[61]]]],[[50,[46,[52]]],[[7,[6]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[62,[[64,[63]]]],0,[62],0,[[62,20,4,65]],[[]],[[]],[[],8],0,[[[64,[66]],[64,[63]],67],62],0,[[62,66],[[7,[6]]]],[[],7],[[],7],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[50,20],[[7,[6]]]],[[50,20,46]],[[50,20,56]],[[50,20,59],[[7,[6]]]],[[50,20,46],[[7,[6]]]],[[50,20,[46,[60]]]],[[50,20,[46,[61]]]],[[50,20,56]],[[50,20],[[7,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[50,23,68],[[7,[6]]]],0,0,0,0,0,0,0,[[]],[[]],0,0,[[]],[[]],[[],8],[[],8],0,0,[[50,69,23],[[7,[6]]]],[[50,70],[[7,[6]]]],[[50,69,52,23],[[7,[6]]]],[[50,23,13,9],[[7,[6]]]],[[1,21,71,2,72,73,5],50],0,0,[[50,23,[7,[6]]],[[7,[6]]]],[[50,63],[[7,[6]]]],0,[50,[[7,[6]]]],0,0,[[],7],[[],7],[[],7],[[],7],[[50,13,9,74]],[[],18],[[],18],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[],8],[[1,20,15,12,[64,[65]],[75,[65]],[64,[63]]],76],0,0,0,0,[[15,64,20,22],68],[[12,75,22,20,11,11,11],68],[76,[[7,[68,6]]]],[[64,63,22]],0,0,[[],7],[[],7],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[72,77],33],[[72,77],33],[[72,77],33],[[72,77],33],[[1,55,[4,[46]],22],[[7,[6]]]],[[72,77,52],[[7,[6]]]],[[72,77,52],[[7,[6]]]],[[72,77,52],[[7,[6]]]],[[55,78],[[7,[6]]]],[[]],[72,[[46,[52]]]],[[72,77],79],[[72,77],79],[[72,77],79],[[72,77],79],[72,17],[72,[[7,[[46,[52]],6]]]],[[72,77,80,81],[[7,[[46,[52]],6]]]],[72,17],[[72,52],[[4,[77]]]],[72,55],[[72,52],[[7,[6]]]],[[72,77],[[7,[6]]]],[[72,77,52],[[7,[6]]]],[[72,77],[[7,[6]]]],[[]],[[],8],[[72,77],33],[[72,77],33],[72,[[7,[6]]]],0,[1,[[7,[72,6]]]],[[72,52],[[7,[6]]]],[[72,52],[[7,[6]]]],[[72,52],[[7,[6]]]],[[72,52],[[7,[6]]]],[[72,52],[[7,[6]]]],[[72,52],[[7,[6]]]],0,0,[[72,[46,[52]]],[[7,[6]]]],[72,[[7,[6]]]],0,0,[72,[[7,[6]]]],[[],7],[[],7],[[72,52],[[7,[6]]]],[[72,52],[[7,[33,6]]]],[[],18],[[72,[46,[52]]],[[7,[6]]]],[72,[[7,[6]]]],[[]],0,[[72,[46,[52]]],[[7,[6]]]]],"p":[[3,"NetworkConfig"],[6,"Establisher"],[3,"BootstrapPeers"],[4,"Option"],[3,"Version"],[4,"NetworkError"],[4,"Result"],[3,"Request"],[6,"WriteHalf"],[15,"f64"],[15,"u32"],[3,"WriteBinder"],[6,"ReadHalf"],[3,"MessageDeserializer"],[3,"ReadBinder"],[4,"Message"],[15,"u64"],[3,"TypeId"],[3,"HandshakeWorker"],[3,"NodeId"],[3,"KeyPair"],[3,"MassaTime"],[3,"ConnectionId"],[3,"JoinHandle"],[3,"MessageSerializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"MessageTypeId"],[15,"bool"],[4,"BlockInfoType"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[15,"u8"],[15,"u16"],[3,"Vec"],[4,"SerializeError"],[3,"TryFromPrimitiveError"],[15,"str"],[3,"NetworkWorker"],[3,"HashSet"],[4,"IpAddr"],[3,"Peers"],[3,"Sender"],[3,"HashMap"],[6,"OperationPrefixIds"],[3,"NetworkStats"],[3,"PubkeySig"],[6,"SecuredHeader"],[6,"SecureShareEndorsement"],[6,"SecureShareOperation"],[3,"EventSender"],[3,"NodeEvent"],[3,"Sender"],[4,"NodeCommand"],[4,"NetworkEvent"],[3,"Duration"],[4,"ConnectionClosureReason"],[6,"Result"],[4,"NetworkCommand"],[6,"Listener"],[3,"PeerInfoDatabase"],[3,"NetworkWorkerChannels"],[4,"SocketAddr"],[3,"Receiver"],[3,"NodeWorker"],[4,"PeerType"],[3,"Path"],[15,"usize"],[3,"ConnectionCount"],[3,"PeerTypeConnectionConfig"],[13,"HandshakeInitiation"],[13,"HandshakeReply"]]},\
"massa_node":{"doc":"Massa: The Decentralized and Scaled Blockchain","t":"WWWHDRHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDMLLLLLMLLLLLLLLMMLLLLLLLLLMFFFMLMLLMMMFMAFLLLLLLLLLLLDDDDRRRRRRRRRRRRRDDHDDDDDDDDEEEEEEEEEEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMFFMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMM","n":["","","","ATOMIC_ID","Args","BRANCHES","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Managers","bootstrap_manager","borrow","borrow","borrow_mut","borrow_mut","clap","consensus_manager","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","execution_manager","factory_manager","from","from","from_clap","init","init","into","into","into_request","into_request","keep_ledger","launch","load_wallet","main","network_manager","parse_args","password","pointer_metadata","pointer_metadata","pool_manager","protocol_manager","restart_from_snapshot_at_period","run","selector_manager","settings","stop","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","vzip","APISettings","BootstrapSettings","ConsensusSettings","ExecutionSettings","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FIELDS","FactorySettings","GrpcSettings","LAZY","LedgerSettings","LoggingSettings","NetworkSettings","PoolSettings","ProtocolSettings","SETTINGS","SelectionSettings","Settings","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__Field","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__FieldVisitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__Visitor","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field0","__field1","__field1","__field1","__field1","__field1","__field1","__field1","__field1","__field1","__field1","__field1","__field1","__field10","__field10","__field10","__field10","__field10","__field10","__field10","__field10","__field11","__field11","__field11","__field11","__field11","__field11","__field11","__field11","__field12","__field12","__field12","__field12","__field12","__field13","__field13","__field13","__field13","__field13","__field14","__field14","__field14","__field14","__field14","__field15","__field15","__field15","__field15","__field15","__field16","__field16","__field16","__field16","__field16","__field17","__field17","__field17","__field17","__field18","__field18","__field18","__field19","__field19","__field2","__field2","__field2","__field2","__field2","__field2","__field2","__field2","__field2","__field2","__field20","__field20","__field21","__field21","__field22","__field3","__field3","__field3","__field3","__field3","__field3","__field3","__field3","__field3","__field4","__field4","__field4","__field4","__field4","__field4","__field4","__field4","__field4","__field5","__field5","__field5","__field5","__field5","__field5","__field5","__field5","__field5","__field6","__field6","__field6","__field6","__field6","__field6","__field6","__field6","__field7","__field7","__field7","__field7","__field7","__field7","__field7","__field7","__field8","__field8","__field8","__field8","__field8","__field8","__field8","__field8","__field9","__field9","__field9","__field9","__field9","__field9","__field9","__field9","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__ignore","__private_field","__stability","__static_ref_initialize","abi_gas_costs_file","accept_compressed","accept_http1","allow_hosts","api","ask_block_timeout","ask_peer_list_interval","asked_operations_pruning_period","ban_timeout","batch_requests_supported","bind","bind","bind","bind_api","bind_private","bind_public","block_db_prune_interval","bootstrap","bootstrap_blacklist_path","bootstrap_list","bootstrap_protocol","bootstrap_timeout","bootstrap_whitelist_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_blocks_channel_capacity","broadcast_blocks_headers_channel_capacity","broadcast_endorsements_channel_capacity","broadcast_filled_blocks_channel_capacity","broadcast_operations_channel_capacity","cache_duration","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","concurrency_limit_per_connection","connect_timeout","connect_timeout","consensus","cursor_delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disk_ledger_path","draw_lookahead_period_count","draw_lookahead_period_count","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_broadcast","enable_cors","enable_http","enable_reflection","enable_ws","enabled","execution","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","expecting","factory","final_history_length","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_keep_final_periods","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future_block_processing_max_periods","grpc","hd_cache_path","hd_cache_size","http2_adaptive_window","http2_keepalive_interval","http2_keepalive_timeout","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_connection_window_size","initial_delay","initial_ledger_path","initial_peers_file","initial_rolls_path","initial_stream_window_size","initial_vesting_path","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ip_list_max_size","keypair_file","ledger","level","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","logging","lru_cache_size","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","marker","max_arguments","max_banned_peers","max_bytes_read","max_bytes_read_write","max_bytes_write","max_channel_size","max_clock_delta","max_concurrent_streams","max_connections","max_decoding_message_size","max_dependency_blocks","max_discarded_blocks","max_draw_cache","max_encoding_message_size","max_endorsement_count","max_endorsements_propagation_time","max_final_events","max_frame_size","max_future_processing_blocks","max_idle_peers","max_in_connection_overflow","max_in_connections_per_ip","max_item_return_count","max_item_return_count","max_known_blocks_size","max_known_endorsements_size","max_known_ops_size","max_log_length","max_node_known_blocks_size","max_node_known_endorsements_size","max_node_known_ops_size","max_node_wanted_blocks_size","max_operation_future_validity_start_periods","max_operations_per_message","max_operations_per_message","max_operations_propagation_time","max_ping","max_pool_size_per_thread","max_read_only_gas","max_request_body_size","max_response_body_size","max_send_wait","max_send_wait","max_send_wait_network_event","max_send_wait_node_event","max_simultaneous_ask_blocks_per_node","max_simultaneous_bootstraps","max_subscriptions_per_connection","message_timeout","network","openrpc_spec_path","operation_announcement_buffer_capacity","operation_announcement_interval","operation_batch_buffer_capacity","operation_batch_proc_period","peer_list_send_timeout","peer_types_config","peers_file","peers_file_dump_interval","per_ip_min_interval","ping_interval","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pool","protocol","protocol_port","read_error_timeout","read_timeout","readonly_queue_length","retry_delay","routable_ip","selector","send_compressed","snip_amount","staking_wallet_path","stats_time_window_duration","stats_timespan","tcp_keepalive","tcp_nodelay","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_map","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_seq","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_str","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wakeup_interval","wasm_gas_costs_file","write_error_timeout","write_timeout"],"q":["massa_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_node::settingsd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Load wallet, asking for passwords if necessary","","","","Wallet password","","","","","restart_from_snapshot_at_period","","","Build here the default node settings from the …","","","","","","","","","","","","","API and server configuration, read from a file …","Bootstrap configuration.","Consensus configuration Assumes …","","","","","","","","","","","","","","","Factory settings","gRPC settings the gRPC settings","","","","","Pool configuration, read from a file configuration","Protocol Configuration, read from toml user configuration …which compression encodings does the server accept for …","whether to accept HTTP/1.1 requests","","","after <code>ask_block_timeout</code> milliseconds we try to ask a block …","","All operations asked are prune each …","","","","","bind for the Massa gRPC API","","","","old blocks are pruned every <code>block_db_prune_interval</code>","","","","","Allocated time with which to manage the bootstrap process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","blocks channel capacity","blocks headers channel capacity","endorsements channel capacity","filled blocks channel capacity","operations channel capacity","","","","","","","","","","","","","","","","","","","","","","","","","","","","set the concurrency limit applied to on requests inbound …when looking for next draw we want to look at max …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","whether to enable CORS. Works only if <code>accept_http1</code> is true","","whether to enable gRPC reflection","","whether to enable gRPC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","force keep at least this number of final periods in RAM …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","If a block is <code>future_block_processing_max_periods</code> periods …","","","","sets whether to use an adaptive flow control. Defaults to …","set whether HTTP2 Ping frames are enabled on accepted …","sets a timeout for receiving an acknowledgement of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sets the max connection-level flow control for HTTP2. …","Initial delay","","","","sets the SETTINGS_INITIAL_WINDOW_SIZE spec option for …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","limits the maximum size of streaming channel","","sets the SETTINGS_MAX_CONCURRENT_STREAMS spec option for …","","limits the maximum size of a decoded message. Defaults to …","Maximum number of blocks allowed in <code>DependencyWaitingBlocks</code>…","Maximum number of blocks allowed in discarded blocks.","","limits the maximum size of an encoded message. Defaults to …","","Time threshold after which operation are not propagated","","sets the maximum frame size to use for HTTP2(must be …","Maximum number of blocks allowed in <code>FutureIncomingBlocks</code>.","","","","","max number of items returned while querying","max known blocks of current nodes we keep in memory (by …","max known endorsements by our node that we kept in memory","max known operations current node kept in memory","","max known blocks of foreign nodes we keep in memory (by …","max known endorsements of foreign nodes we keep in memory …","max known operations of foreign nodes we keep in memory …","max wanted blocks per node kept in memory","","","Maximum of operations sent in one message.","Time threshold after which operation are not propagated","","","","","","max event send wait","Max wait time for sending a Network or Node event.","","","we ask for the same block …","","","","","","Maximum number of operations in the announcement buffer. …","Interval at which operations are announced in batches.","Maximum number of batches in the memory buffer. Dismiss …","Start processing batches in the buffer each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","which compression encodings might the server use for …","","Staking wallet file","","stats time span","set whether TCP keepalive messages are enabled on accepted …","set the value of <code>TCP_NODELAY</code> option for accepted …","set a timeout on for all request handlersi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,6,17,6,6,17,17,6,17,6,17,6,17,6,17,17,17,6,6,17,6,17,6,17,6,6,0,0,0,17,6,6,17,6,17,17,6,0,17,0,0,17,6,17,6,17,6,6,6,6,17,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,40,41,42,43,44,45,46,47,48,49,50,39,40,41,42,43,44,45,46,47,48,49,50,39,42,43,46,47,48,49,50,39,42,43,46,47,48,49,50,42,43,46,49,50,42,43,46,49,50,42,43,46,49,50,42,43,46,49,50,42,43,46,49,50,42,43,49,50,42,43,50,42,50,39,41,42,43,45,46,47,48,49,50,42,50,42,50,42,39,42,43,45,46,47,48,49,50,39,42,43,45,46,47,48,49,50,39,42,43,45,46,47,48,49,50,39,42,43,46,47,48,49,50,39,42,43,46,47,48,49,50,39,42,43,46,47,48,49,50,39,42,43,46,47,48,49,50,38,39,40,41,42,43,44,45,46,47,48,49,50,37,0,0,26,36,36,33,24,35,29,35,29,33,29,30,36,33,33,33,34,24,30,30,30,30,30,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,34,34,32,34,32,30,25,26,27,28,29,30,31,32,33,24,34,35,36,25,26,27,28,29,30,31,32,33,24,34,35,36,36,29,30,24,26,37,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,25,38,38,51,54,26,26,39,39,55,56,27,27,40,40,57,58,28,28,41,41,59,60,29,29,42,42,61,62,30,30,43,43,63,64,31,31,44,44,65,66,32,32,45,45,67,68,33,33,46,46,69,70,24,24,47,47,71,72,34,34,48,48,73,74,35,35,49,49,75,76,36,36,50,50,77,78,28,33,36,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,33,36,33,36,33,36,24,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,24,28,25,51,54,26,55,56,27,57,58,28,59,60,29,61,62,30,63,64,31,65,66,32,67,68,33,69,70,24,71,72,34,73,74,35,75,76,36,77,78,34,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,25,26,27,28,29,30,31,32,33,24,34,35,36,34,24,26,26,36,36,36,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,36,31,28,29,27,36,26,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,30,29,24,25,54,56,58,60,62,64,66,68,70,72,74,76,78,24,26,54,56,58,60,62,64,66,68,70,72,74,76,78,33,29,29,30,29,36,30,36,33,36,34,34,27,36,32,35,26,36,34,29,29,29,32,34,35,35,35,33,35,35,35,35,32,29,35,35,30,32,26,33,33,34,35,29,29,35,30,33,29,24,33,35,35,35,35,29,29,29,29,30,33,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,24,24,29,30,30,26,30,29,24,36,26,31,26,34,36,36,36,25,26,27,28,29,30,31,32,33,24,34,35,36,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,51,55,57,59,61,63,65,67,69,71,73,75,77,54,56,58,60,62,64,66,68,70,72,74,76,78,54,56,58,60,62,64,66,68,70,72,74,76,78,51,55,57,59,61,63,65,67,69,71,73,75,77,51,55,57,59,61,63,65,67,69,71,73,75,77,37,25,38,51,54,26,39,55,56,27,40,57,58,28,41,59,60,29,42,61,62,30,43,63,64,31,44,65,66,32,45,67,68,33,46,69,70,24,47,71,72,34,48,73,74,35,49,75,76,36,50,77,78,29,26,30,30],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],0,[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[3]]]],[2],[2],0,0,[[]],[[]],[5,6],[[],2],[[],2],[[]],[[]],[[],7],[[],7],0,[[6,[10,[[9,[8]]]]]],[[[12,[11]],13],[[14,[[10,[[9,[8]]]]]]]],[[],14],0,[[],[[4,[6]]]],0,[[]],[[]],0,0,0,[6,14],0,0,[[[16,[15]],17,18,18,18,[12,[19]]]],[[],4],[[],4],[[],4],[[],4],[[],20],[[],20],[[[22,[21]]],[[22,[23,21]]]],[[],23],[[],23],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[24,24],[34,34],[35,35],[36,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[37,24],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[25]]]],[[],[[4,[3]]]],[[],[[4,[38]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[26]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[39]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[27]]]],[[],[[4,[40]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[28]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[41]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[29]]]],[[],[[4,[42]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[30]]]],[[],[[4,[3]]]],[[],[[4,[43]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[31]]]],[[],[[4,[3]]]],[[],[[4,[44]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[32]]]],[[],[[4,[45]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[33]]]],[[],[[4,[3]]]],[[],[[4,[46]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[24]]]],[[],[[4,[3]]]],[[],[[4,[47]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[34]]]],[[],[[4,[48]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[35]]]],[[],[[4,[49]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[36]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[50]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],0,0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,0,0,0,0,0,[[51,52],53],[[54,52],53],[[55,52],53],[[56,52],53],[[57,52],53],[[58,52],53],[[59,52],53],[[60,52],53],[[61,52],53],[[62,52],53],[[63,52],53],[[64,52],53],[[65,52],53],[[66,52],53],[[67,52],53],[[68,52],53],[[69,52],53],[[70,52],53],[[71,52],53],[[72,52],53],[[73,52],53],[[74,52],53],[[75,52],53],[[76,52],53],[[77,52],53],[[78,52],53],0,0,[[25,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[26,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[27,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[28,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[29,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[30,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[31,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[32,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[33,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[24,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[34,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[35,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],[[36,52],53],[52,[[4,[79]]]],[52,[[4,[79]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[[22,[21]]],[[22,[23,21]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[51,4],[55,4],[57,4],[59,4],[61,4],[63,4],[65,4],[67,4],[69,4],[71,4],[73,4],[75,4],[77,4],[54,4],[56,4],[58,4],[60,4],[62,4],[64,4],[66,4],[68,4],[70,4],[72,4],[74,4],[76,4],[78,4],[54,4],[56,4],[58,4],[60,4],[62,4],[64,4],[66,4],[68,4],[70,4],[72,4],[74,4],[76,4],[78,4],[[51,80],4],[[55,80],4],[[57,80],4],[[59,80],4],[[61,80],4],[[63,80],4],[[65,80],4],[[67,80],4],[[69,80],4],[[71,80],4],[[73,80],4],[[75,80],4],[[77,80],4],[[51,81],4],[[55,81],4],[[57,81],4],[[59,81],4],[[61,81],4],[[63,81],4],[[65,81],4],[[67,81],4],[[69,81],4],[[71,81],4],[[73,81],4],[[75,81],4],[[77,81],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0],"p":[[3,"App"],[15,"usize"],[3,"With"],[4,"Result"],[3,"ArgMatches"],[3,"Args"],[3,"Request"],[3,"Wallet"],[6,"RwLock"],[3,"Arc"],[3,"String"],[4,"Option"],[3,"Path"],[6,"Result"],[4,"ConsensusEvent"],[3,"Receiver"],[3,"Managers"],[3,"StopHandle"],[3,"StopHandle"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Settings"],[3,"LoggingSettings"],[3,"ExecutionSettings"],[3,"SelectionSettings"],[3,"LedgerSettings"],[3,"NetworkSettings"],[3,"BootstrapSettings"],[3,"FactorySettings"],[3,"PoolSettings"],[3,"APISettings"],[3,"ConsensusSettings"],[3,"ProtocolSettings"],[3,"GrpcSettings"],[3,"SETTINGS"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[4,"__Field"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[15,"str"],[15,"u64"]]},\
"massa_pool_exports":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net Pool of …","t":"DDIIKKKMMMAMKAKKAMMMKKKKKKMMMMMMKMMMMMKMMDLLLLMLLLLMMLLLLLRDEDDNNNNNNNNNNNNNNNNNNLLLLLLLLMMMMLLMLLLLLLLLLLLLMLLLLLLLLMMMMMMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLIIKKKKKKKKKKKKKK","n":["PoolChannels","PoolConfig","PoolController","PoolManager","add_denunciation_precursor","add_endorsements","add_operations","broadcast_enabled","broadcast_endorsements_channel_capacity","broadcast_operations_channel_capacity","channels","channels_size","clone_box","config","contains_endorsements","contains_operations","controller_traits","denunciation_expire_periods","endorsement_sender","genesis_timestamp","get_block_endorsements","get_block_operations","get_denunciation_count","get_endorsement_count","get_final_cs_periods","get_operation_count","max_block_endorsement_count","max_block_gas","max_block_size","max_endorsements_pool_size_per_thread","max_operation_pool_size_per_thread","max_operations_per_block","notify_final_cs_periods","operation_sender","operation_validity_periods","periods_per_cycle","roll_price","selector","stop","t0","thread_count","PoolChannels","borrow","borrow_mut","clone","clone_into","endorsement_sender","from","from_ref","into","into_request","operation_sender","selector","to_owned","try_from","try_into","type_id","vzip","FIELDS","PoolConfig","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field10","__field11","__field12","__field13","__field14","__field15","__field16","__field2","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_enabled","broadcast_endorsements_channel_capacity","broadcast_operations_channel_capacity","channels_size","clone","clone_into","denunciation_expire_periods","deserialize","deserialize","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from_ref","genesis_timestamp","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","max_block_endorsement_count","max_block_gas","max_block_size","max_endorsements_pool_size_per_thread","max_operation_pool_size_per_thread","max_operations_per_block","operation_validity_periods","periods_per_cycle","roll_price","serialize","t0","thread_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","PoolController","PoolManager","add_denunciation_precursor","add_endorsements","add_operations","clone_box","contains_endorsements","contains_operations","get_block_endorsements","get_block_operations","get_denunciation_count","get_endorsement_count","get_final_cs_periods","get_operation_count","notify_final_cs_periods","stop"],"q":["massa_pool_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_exports::channels","","","","","","","","","","","","","","","","","massa_pool_exports::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_exports::controller_traits","","","","","","","","","","","","","","",""],"d":["channels used by the pool worker","Pool configuration","Trait defining a pool controller","Pool manager trait","Add denunciation precursor to pool","Asynchronously add endorsements to pool. Simply print a …","Asynchronously add operations to pool. Simply print a …","whether operations broadcast is enabled","endorsements channel capacity","operations channel capacity","","operations and endorsements communication channels size","Returns a boxed clone of self. Useful to allow cloning …","Copyright (c) 2022 MASSA LABS info@massa.net","Check if the pool contains a list of endorsements. Returns …","Check if the pool contains a list of operations. Returns …","","denunciation expiration (in periods)","Broadcast channel for new endorsements","genesis timestamp","Get endorsements for a block.","Get operations for block creation.","Get the number of denunciations in the pool","Get the number of endorsements in the pool","Get final cs periods (updated regularly from consensus)","Get the number of operations in the pool","max number of endorsements per block","maximal gas per block","maximal total block operations size","max endorsement pool size per thread (in number of …","max operation pool size per thread (in number of …","max operations per block","Asynchronously notify of new consensus final periods. …","Broadcast channel for new operations","operation validity periods","cycle duration in periods","cost (in coins) of a single roll","Selector to get draws","Stops the worker","period duration","thread count","channels used by the pool worker","","","","","Broadcast channel for new endorsements","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Broadcast channel for new operations","Selector to get draws","","","","","","","Pool configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","whether operations broadcast is enabled","endorsements channel capacity","operations channel capacity","operations and endorsements communication channels size","","","denunciation expiration (in periods)","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","genesis timestamp","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","max number of endorsements per block","maximal gas per block","maximal total block operations size","max endorsement pool size per thread (in number of …","max operation pool size per thread (in number of …","max operations per block","operation validity periods","cycle duration in periods","cost (in coins) of a single roll","","period duration","thread count","","","","","","","","","","","","","","","","","","","","","","","Trait defining a pool controller","Pool manager trait","Add denunciation precursor to pool","Asynchronously add endorsements to pool. Simply print a …","Asynchronously add operations to pool. Simply print a …","Returns a boxed clone of self. Useful to allow cloning …","Check if the pool contains a list of endorsements. Returns …","Check if the pool contains a list of operations. Returns …","Get endorsements for a block.","Get operations for block creation.","Get the number of denunciations in the pool","Get the number of endorsements in the pool","Get final cs periods (updated regularly from consensus)","Get the number of operations in the pool","Asynchronously notify of new consensus final periods. …","Stops the worker"],"i":[0,0,0,0,3,3,3,14,14,14,0,14,3,0,3,3,0,14,10,14,3,3,3,3,3,3,14,14,14,14,14,14,3,10,14,14,14,10,23,14,14,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,15,16,19,14,15,16,19,14,14,14,14,14,14,14,14,15,16,19,14,16,19,14,15,16,19,14,14,14,15,16,19,14,15,16,19,19,19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,16,19,14,15,16,19,14,15,16,19,16,19,19,16,16,14,15,16,19,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,23],"f":[0,0,0,0,[1],[2],[2],0,0,0,0,0,[[],[[4,[3]]]],0,[[],[[6,[5]]]],[[],[[6,[5]]]],0,0,0,0,[[7,8]],[8],[[],9],[[],9],[[],6],[[],9],0,0,0,0,0,0,[[]],0,0,0,0,0,[[]],0,0,0,[[]],[[]],[10,10],[[]],0,[[]],[[]],[[]],[[],11],0,0,[[]],[[],12],[[],12],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[14,14],[[]],0,[[],[[12,[14]]]],[[],[[12,[15]]]],[[16,17],18],[[19,17],18],[[14,17],18],[17,[[12,[20]]]],[17,[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,[14,12],0,0,[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[16,12],[19,12],[19,12],[[16,21],12],[[16,22],12],[[]],[[]],[[]],[[]],0,0,[1],[2],[2],[[],[[4,[3]]]],[[],[[6,[5]]]],[[],[[6,[5]]]],[[7,8]],[8],[[],9],[[],9],[[],6],[[],9],[[]],[[]]],"p":[[4,"DenunciationPrecursor"],[3,"Storage"],[8,"PoolController"],[3,"Box"],[15,"bool"],[3,"Vec"],[3,"BlockId"],[3,"Slot"],[15,"usize"],[3,"PoolChannels"],[3,"Request"],[4,"Result"],[3,"TypeId"],[3,"PoolConfig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[3,"Error"],[15,"str"],[15,"u64"],[8,"PoolManager"]]},\
"massa_pool_worker":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net Pool of …","t":"AAAAFAANNHHHHHHHHHHHHHHHHEHHHHHHHHHHHHHHHHNDDNMLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLNHHHHHHHNDEHHHHHHHLLLLLLLMMLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLHDHLLLMMLLLLLMMLLLLLLMLLLMLLLLLLLHHHHDLLLMMLLLLLMLLLLLLLMLLMMLMMLLLLLLLGDDLLLLFLLLLLMMLLLLLLLLLLLMLLLLLLLLMLLLLLLMMLLLLMMLLLLLLLLLLLLLLMLLHHDDHHDLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLMLLLMMMLLLLLLFLLLLLLLLLLLL","n":["controller_impl","denunciation_pool","endorsement_pool","operation_pool","start_pool_controller","types","worker","AddDenunciationPrecursor","AddItems","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Command","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NotifyFinalCsPeriods","PoolControllerImpl","PoolManagerImpl","Stop","_config","add_denunciation_precursor","add_endorsements","add_operations","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_box","clone_into","contains_endorsements","contains_operations","denunciation_pool","denunciations_input_sender","denunciations_input_sender","denunciations_thread_handle","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","endorsement_pool","endorsements_input_sender","endorsements_input_sender","endorsements_thread_handle","from","from","from","from_ref","get_block_endorsements","get_block_operations","get_denunciation_count","get_endorsement_count","get_final_cs_periods","get_operation_count","init","init","init","into","into","into","into_request","into_request","into_request","last_cs_final_periods","notify_final_cs_periods","operation_pool","operations_input_sender","operations_input_sender","operations_thread_handle","pointer_metadata","pointer_metadata","pointer_metadata","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","Accumulating","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DenunciationEmitted","DenunciationPool","DenunciationStatus","META","META","META","META","META","META","META","add_denunciation_precursor","add_endorsements","borrow","borrow","borrow_mut","borrow_mut","cleanup_caches","config","denunciations_cache","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","from","from","init","init","init","into","into","into_request","into_request","last_cs_final_periods","len","notify_final_cs_periods","pointer_metadata","pointer_metadata","selector","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","CALLSITE","EndorsementPool","META","add_endorsements","borrow","borrow_mut","channels","config","contains","deref","deref_mut","deserialize","drop","endorsements_indexed","endorsements_sorted","from","get_block_endorsements","init","init","into","into_request","last_cs_final_periods","len","notify_final_cs_periods","pointer_metadata","storage","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","CALLSITE","CALLSITE","META","META","OperationPool","add_operations","borrow","borrow_mut","channels","config","contains","deref","deref_mut","deserialize","drop","execution_controller","from","get_block_operations","init","init","into","into_request","is_operation_relevant","last_cs_final_periods","len","notify_final_cs_periods","operations","ops_per_expiration","pointer_metadata","sorted_ops_per_thread","storage","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","OperationCursorInner","OperationInfo","PoolOperationCursor","borrow","borrow","borrow_mut","borrow_mut","build_operation_cursor","clone","clone","clone_into","clone_into","cmp","creator_address","cursor","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","fee","fmt","fmt","from","from","from_op","from_ref","from_ref","get_id","id","init","init","into","into","into_request","into_request","max_gas","max_spending","new","partial_cmp","pointer_metadata","pointer_metadata","size","thread","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","validity_period_range","vzip","vzip","CALLSITE","CALLSITE","DenunciationPoolThread","EndorsementPoolThread","META","META","OperationPoolThread","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","denunciation_pool","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","endorsement_pool","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","operation_pool","pointer_metadata","pointer_metadata","pointer_metadata","receiver","receiver","receiver","run","run","run","spawn","spawn","spawn","start_pool_controller","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["massa_pool_worker","","","","","","","massa_pool_worker::controller_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_worker::denunciation_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_worker::endorsement_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_worker::operation_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_worker::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pool_worker::worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Pool controller implementation","Copyright (c) 2022 MASSA LABS info@massa.net","Copyright (c) 2022 MASSA LABS info@massa.net","Copyright (c) 2022 MASSA LABS info@massa.net","Start pool manager and controller","","Copyright (c) 2022 MASSA LABS info@massa.net Write worker …","Add denunciation precursor to the pool","Add items to the pool","","","","","","","","","","","","","","","","","A generic command to send commands to a pool","","","","","","","","","","","","","","","","","Notify of new final consensus periods","Pool controller","Implementation of the pool manager.","Stop the worker","Config","Add denunciation precursor to pool","Asynchronously add endorsements to pool. Simply print a …","Asynchronously add operations to pool. Simply print a …","","","","","","","","Returns a boxed clone of self. Allows cloning …","","Check if the pool contains a list of endorsements. Returns …","Check if the pool contains a list of operations. Returns …","Shared reference to the denunciation pool","Denunciations input data mpsc (used to stop the pool …","Denunciation write worker command sender","Handle used to join the denunciation thread","","","","","","","","","","","","","Shared reference to the endorsement pool","Endorsements input data mpsc (used to stop the pool thread)","Endorsement write worker command sender","Handle used to join the endorsement thread","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get endorsements for a block","get operations for block creation","Get the number of denunciations in the pool","Get the number of endorsements in the pool","Get final consensus periods","Get the number of operations in the pool","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Last final periods from Consensus","Asynchronously notify of new final consensus periods. …","Shared reference to the operation pool","Operations input data mpsc (used to stop the pool thread)","Operation write worker command sender","Handle used to join the operation thread","","","","Stops the worker","","","","","","","","","","","","","","","","","","","","","","","Only 1 DenunciationPrecursor received for this key","","","","","","","","2 DenunciationPrecursor received, a Denunciation was then …","","A Value (as in Key/Value) for denunciation pool internal …","","","","","","","","Add a denunciation precursor to the pool - can lead to a …","Add endorsements, turn them in DenunciationPrecursor then …","","","","","cleanup internal cache, removing too old denunciation","pool configuration","Internal cache for denunciations","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","last consensus final periods, per thread","Get the number of stored elements","Notify of final periods","","","selector controller to get draws","","","","","","","","","","","","","","","","","","Add a list of endorsements to the pool","","","channels used by the pool worker","configuration","Checks whether an element is stored in the pool.","","","","","endorsements indexed by slot, index and block ID","endorsements sorted by increasing inclusion slot for …","Returns the argument unchanged.","get endorsements for block creation","","","Calls <code>U::from(self)</code>.","","last consensus final periods, per thread","Get the number of stored elements","notify of new final CS periods","","storage","","","","","","","","","","","","","Add a list of operations to the pool","","","channels used by the pool worker","configuration","Checks whether an element is stored in the pool.","","","","","execution controller","Returns the argument unchanged.","get operations for block creation","","","Calls <code>U::from(self)</code>.","","Checks if an operation is relevant according to its thread …","last consensus final periods, per thread","Get the number of stored elements","notify of new final slot","operations map","operations sorted by increasing expiration slot","","operations sorted by decreasing quality, per thread","storage instance","","","","","","","","","","A cursor for pool operations, sorted by increasing quality","","","","","build a cursor from an operation","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get the ID of the operation","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","max amount that the op might spend from the sender’s …","Create a new pool operation cursor based on inner data","","","","","","","","","","","","","","","","","","","","","","","","","Denunciation pool writer thread.","Endorsement pool write thread instance","","","Operation pool writer thread.","","","","","","","Shared reference to the denunciation pool","","","","","","","","","","","","","Shared reference to the pool","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Shared reference to the operation pool","","","","Command reception channel","Command reception channel","Command reception channel","Runs the thread","Run the thread.","Run the thread.","Spawns a pool writer thread, returning a join handle.","Spawns a pool writer thread, returning a join handle.","Spawns a pool writer thread, returning a join handle.","Start pool manager and controller","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0,40,6,6,6,6,40,17,6,40,17,6,6,6,6,6,6,6,17,6,17,40,17,6,40,17,6,40,17,6,40,17,6,6,17,6,17,40,17,6,6,6,6,6,6,6,6,40,17,6,40,17,6,40,17,6,6,6,6,17,6,17,40,17,6,17,6,40,17,6,40,17,6,40,17,6,40,17,6,40,17,6,40,17,6,40,17,6,45,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,0,0,21,21,21,45,21,45,21,21,21,21,45,21,45,21,45,21,45,21,45,21,21,45,21,45,21,45,21,21,21,21,45,21,21,45,21,45,21,45,21,45,21,45,21,45,21,45,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,29,27,29,27,0,29,27,29,27,29,27,27,29,27,29,27,29,27,29,27,29,29,29,27,29,27,29,27,27,29,27,29,27,29,27,29,27,29,27,27,27,29,29,29,27,27,27,29,27,29,27,29,27,29,27,29,27,29,27,29,27,27,29,27,0,0,0,0,0,0,0,37,38,39,37,38,39,39,37,38,39,37,38,39,37,38,39,37,38,39,37,37,38,39,37,38,39,37,38,39,37,38,39,38,37,38,39,37,38,39,37,38,39,37,38,39,0,37,38,39,37,38,39,37,38,39,37,38,39],"f":[0,0,0,0,[[1,2,[4,[3]],5]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,7]],[[6,2]],[[6,2]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[6,[[4,[8]]]],[[]],[6,[[10,[9]]]],[6,[[10,[9]]]],0,0,0,0,[11],[11],[11],[11],[11],[11],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[11],[11],[11],0,0,0,0,[[]],[[]],[[]],[[]],[[6,14,15]],[[6,15]],[6,11],[6,11],[6,10],[6,11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[6],0,0,0,0,[[]],[[]],[[]],[17],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],18],[[],18],[[],18],[[[4,[19]]],[[4,[20,19]]]],[[[4,[19]]],[[4,[20,19]]]],[[[4,[19]]],[[4,[20,19]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[21,7]],[[21,2]],[[]],[[]],[[]],[[]],[21],0,0,[11],[11],[11],[11],[[],[[13,[12]]]],[[],[[13,[12]]]],[11],[11],[[]],[[]],[[],11],[[1,[4,[22]]],21],[[],11],[[]],[[]],[[],16],[[],16],0,[21,11],[21],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],18],[[],18],[[[4,[19]]],[[4,[20,19]]]],[[[4,[19]]],[[4,[20,19]]]],[[],20],[[],20],[[],20],[[],20],[[]],[[]],0,0,0,[[23,2]],[[]],[[]],0,0,[[23,24],9],[11],[11],[[],[[13,[12]]]],[11],0,0,[[]],[[23,15,14]],[[1,2,5],23],[[],11],[[]],[[],16],0,[23,11],[23],[[]],0,[[],13],[[],13],[[],18],[[[4,[19]]],[[4,[20,19]]]],[[],20],[[],20],[[]],0,0,0,0,0,[[25,2]],[[]],[[]],0,0,[[25,26],9],[11],[11],[[],[[13,[12]]]],[11],0,[[]],[[25,15]],[[1,2,[4,[3]],5],25],[[],11],[[]],[[],16],[[25,27],9],0,[25,11],[25],0,0,[[]],0,0,[[],13],[[],13],[[],18],[[[4,[19]]],[[4,[20,19]]]],[[],20],[[],20],[[]],0,0,0,[[]],[[]],[[]],[[]],[28,29],[29,29],[27,27],[[]],[[]],[[29,29],30],0,0,[11],[11],[11],[11],[[],[[13,[12]]]],[[],[[13,[12]]]],[11],[11],[[29,29],9],[[],9],[[],9],0,[[29,31],32],[[27,31],32],[[]],[[]],[[28,33,34,35],27],[[]],[[]],[29,26],0,[[],11],[[],11],[[]],[[]],[[],16],[[],16],0,0,[[],29],[[29,29],[[36,[30]]]],[[]],[[]],0,0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],18],[[],18],[[[4,[19]]],[[4,[20,19]]]],[[[4,[19]]],[[4,[20,19]]]],[[],20],[[],20],[[],20],[[],20],0,[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[11],[11],[11],[11],[11],[11],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[11],[11],[11],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],0,0,0,[37],[38],[39],[[[41,[40]],[43,[[42,[23]]]]],44],[[[41,[40]],[43,[[42,[25]]]]],44],[[[41,[40]],[43,[[42,[21]]]]],44],[[1,2,[4,[3]],5]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],18],[[],18],[[],18],[[]],[[]],[[]]],"p":[[3,"PoolConfig"],[3,"Storage"],[8,"ExecutionController"],[3,"Box"],[3,"PoolChannels"],[3,"PoolControllerImpl"],[4,"DenunciationPrecursor"],[8,"PoolController"],[15,"bool"],[3,"Vec"],[15,"usize"],[3,"With"],[4,"Result"],[3,"BlockId"],[3,"Slot"],[3,"Request"],[3,"PoolManagerImpl"],[3,"TypeId"],[3,"Global"],[8,"Any"],[3,"DenunciationPool"],[8,"SelectorController"],[3,"EndorsementPool"],[3,"EndorsementId"],[3,"OperationPool"],[3,"OperationId"],[3,"OperationInfo"],[6,"SecureShareOperation"],[3,"PoolOperationCursor"],[4,"Ordering"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Amount"],[15,"u8"],[4,"Option"],[3,"EndorsementPoolThread"],[3,"OperationPoolThread"],[3,"DenunciationPoolThread"],[4,"Command"],[3,"Receiver"],[6,"RwLock"],[3,"Arc"],[3,"JoinHandle"],[4,"DenunciationStatus"]]},\
"massa_pos_exports":{"doc":"Definition and exports of the PoS types and errors.","t":"NNDDDDDDNNDDDNNDDDDDEGDDDDNDDIIMMMMMMMMMMMMMMKMAMAMMMMMMMMAMMAMMMMMMMAKMMKKKMMMMMMMMMMMAAMMMMMMMMMMMMMMMMAMMKMMMMMMMMMMMMMKDLLLLMMLLLLLMMLLLLLDIILLLKLMLLKLLLKKKLLMKLLLLLKRDDDDDDRDDDDEDDNNNMMMMMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLDDRDDDDREDDNNMMMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLNNNNINNIEGNRKKLLLLLLLLLLLLLLLLLRDDDEDDNNNNNMMMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLHHDLLLLLLMLLMMLLLLLLLLLLLLMMMLLLLMLLLLLLLRDEDDNNNNNNNLLLLLLLLMLLLLMLLLLLLLLLLMLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLL","n":["ChannelDown","ContainerInconsistency","CreditsSerializer","CycleHistoryDeserializer","CycleHistorySerializer","CycleInfo","CycleInfoDeserializer","CycleInfoSerializer","CycleUnavailable","CycleUnfinished","DeferredCredits","DeferredCreditsDeserializer","DeferredCreditsSerializer","InvalidRollDistribution","OverflowError","PoSChanges","PoSChangesDeserializer","PoSChangesSerializer","PoSConfig","PoSFinalState","PosError","PosResult","ProductionStats","ProductionStatsDeserializer","ProductionStatsSerializer","RollsDeserializer","RollsFileLoadingError","Selection","SelectorConfig","SelectorController","SelectorManager","address_deserializer","address_deserializer","address_ser","address_ser","address_ser","address_serializer","amount_ser","bit_vec_deserializer","bit_vec_serializer","bitvec_deser","bitvec_ser","block_failure_count","block_success_count","channel_size","clone_box","complete","config","config","controller_traits","credit_deserializer","credits","credits_bootstrap_part_size","credits_ser","cycle","cycle_global_hash","cycle_history","cycle_history_length","cycle_info","cycle_info_deserializer","cycle_info_serializer","deferred_credits","deferred_credits","deferred_credits","deferred_credits_deserializer","deferred_credits_serializer","enable_hash","endorsement_count","endorsements","error","feed_cycle","final_state_hash_snapshot","genesis_address","get_address_selections","get_producer","get_selection","hash_tracker","initial_ledger_hash","initial_rolls","initial_seeds","length_deserializer","length_deserializer","max_draw_cache","opt_hash_deser","opt_hash_ser","periods_per_cycle","periods_per_cycle","pos_changes","pos_final_state","producer","production_stats","production_stats","production_stats_deser","production_stats_deserializer","production_stats_hash","production_stats_ser","production_stats_serializer","rng_seed","roll_changes","roll_counts","roll_counts_hash","rolls_deser","rolls_deserializer","seed_bits","selector","settings","slot_deserializer","slot_ser","stop","thread_count","thread_count","u64_deser","u64_deserializer","u64_deserializer","u64_deserializer","u64_deserializer","u64_ser","u64_ser","u64_ser","u64_ser","u64_serializer","u64_serializer","wait_for_draws","PoSConfig","borrow","borrow_mut","clone","clone_into","credits_bootstrap_part_size","cycle_history_length","fmt","from","from_ref","into","into_request","periods_per_cycle","thread_count","to_owned","try_from","try_into","type_id","vzip","Selection","SelectorController","SelectorManager","borrow","borrow_mut","clone","clone_box","clone_into","endorsements","eq","equivalent","feed_cycle","fmt","from","from_ref","get_address_selections","get_producer","get_selection","into","into_request","producer","stop","to_owned","try_from","try_into","type_id","vzip","wait_for_draws","CYCLE_INFO_HASH_INITIAL_BYTES","CycleHistoryDeserializer","CycleHistorySerializer","CycleInfo","CycleInfoDeserializer","CycleInfoHashComputer","CycleInfoSerializer","FIELDS","ProductionStats","ProductionStatsDeserializer","ProductionStatsSerializer","RollsDeserializer","__Field","__FieldVisitor","__Visitor","__field0","__field1","__ignore","address_deserializer","address_deserializer","address_ser","address_ser","address_ser","apply_changes","bitvec_deser","bitvec_ser","bitvec_ser","block_failure_count","block_success_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complete","compute_complete_hash","compute_cycle_hash","compute_prod_stats_entry_hash","compute_roll_entry_hash","compute_seed_hash","cycle","cycle_global_hash","cycle_info_deserializer","cycle_info_serializer","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","expecting","expecting","extend","final_state_hash_snapshot","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_satisfying","length_deserializer","length_deserializer","lifetime","marker","new","new","new","new","new","new","new","new","new_with_hash","opt_hash_deser","opt_hash_ser","production_stats","production_stats_deser","production_stats_hash","production_stats_ser","rng_seed","roll_counts","roll_counts_hash","rolls_deser","serialize","serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64_deser","u64_deserializer","u64_deserializer","u64_deserializer","u64_ser","u64_ser","u64_ser","u64_serializer","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CreditsDeserializer","CreditsSerializer","DEFERRED_CREDITS_HASH_INITIAL_BYTES","DeferredCredits","DeferredCreditsDeserializer","DeferredCreditsHashTracker","DeferredCreditsSerializer","FIELDS","__Field","__FieldVisitor","__Visitor","__field0","__ignore","address_deserializer","address_ser","address_ser","amount_deserializer","amount_ser","amount_ser","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_hash","credit_deserializer","credits","credits_ser","default","default","deserialize","deserialize","deserialize","deserialize","disable_hash_tracker","enable_hash","enable_hash_tracker_and_compute_hash","expecting","expecting","extend","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get_address_credits_for_slot","get_hash","get_hash","get_slot_range","hash","hash_tracker","insert","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","lifetime","marker","new","new","new","new","new","new_with_hash","new_without_hash","remove_zeros","serialize","serialize","serialize","slot_deserializer","slot_ser","slot_ser","to_owned","to_owned","toggle_entry","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64_deserializer","u64_deserializer","u64_ser","u64_ser","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChannelDown","ContainerInconsistency","CycleUnavailable","CycleUnfinished","DisplayToDisplayDoc","InvalidRollDistribution","OverflowError","PathToDisplayDoc","PosError","PosResult","RollsFileLoadingError","_DERIVE_Display_FOR_PosError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","from_ref","into","into_request","provide","to_owned","to_string","try_from","try_into","type_id","vzip","FIELDS","PoSChanges","PoSChangesDeserializer","PoSChangesSerializer","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__ignore","address_serializer","bit_vec_deserializer","bit_vec_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","deferred_credits","deferred_credits_deserializer","deferred_credits_serializer","deserialize","deserialize","deserialize","expecting","expecting","extend","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","lifetime","marker","new","new","production_stats","production_stats_deserializer","production_stats_serializer","roll_changes","rolls_deserializer","seed_bits","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","u64_serializer","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","CALLSITE","META","PoSFinalState","apply_changes","borrow","borrow_mut","clone","clone_into","compute_initial_draws","config","create_initial_cycle","create_new_cycle_from_last","cycle_history","deferred_credits","feed_cycle_state_hash","feed_selector","from","from_ref","from_snapshot","get_address_active_rolls","get_all_production_stats","get_cycle_history_part","get_cycle_index","get_deferred_credits_part","get_deferred_credits_range","get_rolls_for","initial_ledger_hash","initial_rolls","initial_seeds","into","into_request","new","reset","selector","set_cycle_history_part","set_deferred_credits_part","to_owned","try_from","try_into","type_id","vzip","FIELDS","SelectorConfig","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__field3","__field4","__field5","__ignore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_size","clone","clone_into","deserialize","deserialize","endorsement_count","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from_ref","genesis_address","into","into","into","into","into_request","into_request","into_request","into_request","lifetime","marker","max_draw_cache","periods_per_cycle","serialize","thread_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip"],"q":["massa_pos_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_exports::config","","","","","","","","","","","","","","","","","","","massa_pos_exports::controller_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_exports::cycle_infomassa_pos_exports::deferred_credits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_exports::pos_changes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_exports::pos_final_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_exports::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Communication channel was down: {0}","Container inconsistency: {0}","Serializer for <code>Credits</code>","Deserializer for cycle history, useful when restarting …","Serializer for cycle history","State of a cycle for all threads","Deserializer for <code>CycleInfo</code>","Serializer for <code>CycleInfo</code>","<code>CycleUnavailable</code>: PoS cycle {0} is needed but is absent …","<code>CycleUnfinished</code>: PoS cycle {0} is needed but is not …","Structure containing all the PoS deferred credits …","Deserializer for <code>DeferredCredits</code>","Serializer for <code>DeferredCredits</code>","Invalid roll distribution: {0}","Overflow error: {0}","Recap of all PoS changes","<code>PoSChanges</code> Deserializer","<code>PoSChanges</code> Serializer","proof-of-stake final state configuration","Final state of PoS","Proof-of-Stake error","Proof-of-Stake result","Block production statistics","Deserializer for <code>ProductionStats</code>","Serializer for <code>ProductionStats</code>","Deserializer for rolls","Error while loading initial rolls file: {0}","Selections of endorsements and producer","Configuration of selector thread","interface that communicates with the selector worker thread","Selector manager used to stop the selector thread","","","","","","","","","","","","Number of blocks missed","Number of successfully created blocks","communication channel length","Returns a boxed clone of self. Useful to allow cloning …","whether the cycle is complete (all slots final)","","proof-of-stake configuration","This module exports generic traits representing interfaces …","","Deferred credits","maximum size of a deferred credits bootstrap part","","cycle number","Hash of the cycle state","contiguous cycle history, back = newest","number of saved cycle","","","","","set deferred credits indexed by target slot (can be set to …","coins to be credited at the end of the slot","","","","Number of endorsement","Chosen endorsements","","Feed cycle to the selector","Snapshot of the final state hash Used for PoS selections","genesis address to force draw genesis creators","Return a list of slots where <code>address</code> has been chosen to …","Get Address of the selected block producer for a given slot","Get Selection computed for a slot:","Hash tracker, optional. Indeed, computing the hash is …","initial ledger hash, used for seed computation","initial rolls, used for negative cycle look back","initial seeds, used for negative cycle look back (cycles …","","","Maximum number of computed cycle’s draws we keep in cache","","","periods per cycle","Number of periods per cycle","","","Chosen block producer","Per-address production statistics","updated production statistics","","","Hash of the production statistics","","","random seed bits of all slots in the cycle so far","new roll counts for addresses (can be 0 to remove the …","number of rolls each staking address has","Hash of the roll counts","","","extra block seed bits added","selector controller","","","","Stop the selector thread Note that we do not take self by …","thread count","Number of running threads","","","","","","","","","","","","Waits for draws to reach at least a given cycle number. …","proof-of-stake final state configuration","","","","","maximum size of a deferred credits bootstrap part","number of saved cycle","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","periods per cycle","thread count","","","","","","Selections of endorsements and producer","interface that communicates with the selector worker thread","Selector manager used to stop the selector thread","","","","Returns a boxed clone of self. Useful to allow cloning …","","Chosen endorsements","","","Feed cycle to the selector","","Returns the argument unchanged.","","Return a list of slots where <code>address</code> has been chosen to …","Get Address of the selected block producer for a given slot","Get Selection computed for a slot:","Calls <code>U::from(self)</code>.","","Chosen block producer","Stop the selector thread Note that we do not take self by …","","","","","","Waits for draws to reach at least a given cycle number. …","","Deserializer for cycle history, useful when restarting …","Serializer for cycle history","State of a cycle for all threads","Deserializer for <code>CycleInfo</code>","","Serializer for <code>CycleInfo</code>","","Block production statistics","Deserializer for <code>ProductionStats</code>","Serializer for <code>ProductionStats</code>","Deserializer for rolls","","","","","","","","","","","","Apply every part of a <code>PoSChanges</code> to a cycle info, except …","","","","Number of blocks missed","Number of successfully created blocks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","whether the cycle is complete (all slots final)","","","","","","cycle number","Hash of the cycle state","","","","","","","","","","","","","","","","","","","Increment a production stat structure with another","Snapshot of the final state hash Used for PoS selections","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Check if the production stats are above the required …","","","","","","Creates a new <code>CycleInfo</code> serializer","Creates a new <code>CycleInfo</code> deserializer","Creates a new <code>ProductionStats</code> serializer","Creates a new <code>ProductionStats</code> deserializer","Creates a new rolls deserializer","Creates a new <code>CycleHistory</code> serializer","Creates a new <code>CycleHistory</code> deserializer","Create a new <code>CycleInfo</code> and compute its hash","","","Per-address production statistics","","Hash of the production statistics","","random seed bits of all slots in the cycle so far","number of rolls each staking address has","Hash of the roll counts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializer for a single credit","Serializer for <code>Credits</code>","","Structure containing all the PoS deferred credits …","Deserializer for <code>DeferredCredits</code>","","Serializer for <code>DeferredCredits</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the hash for a specific entry","","Deferred credits","","","","","","","","Disable the hash tracker, loses hash","","Enables the hash tracker (and compute the hash if absent)","","","Extends the current <code>DeferredCredits</code> with another and …","","","","Apply a function to each element","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the deferred credits for a given address that will be …","Get hash from tracker, if any","Get resulting hash from the tracker","Get all deferred credits within a slot range. If …","","Hash tracker, optional. Indeed, computing the hash is …","Insert an element","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Check if the credits list is empty","","","Creates a new <code>DeferredCredits</code> serializer","Creates a new <code>DeferredCredits</code> deserializer","Creates a new <code>Credits</code> serializer","Creates a new single credit deserializer","Initialize hash tracker","Create a new DeferredCredits with hash tracking","Create a new DeferredCredits without hash tracking","Remove credits set to zero, use only on finality","","","","","","","","","Apply adding an element (must not be an overwrite) or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Communication channel was down: {0}","Container inconsistency: {0}","<code>CycleUnavailable</code>: PoS cycle {0} is needed but is absent …","<code>CycleUnfinished</code>: PoS cycle {0} is needed but is not …","","Invalid roll distribution: {0}","Overflow error: {0}","","Proof-of-Stake error","Proof-of-Stake result","Error while loading initial rolls file: {0}","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Recap of all PoS changes","<code>PoSChanges</code> Deserializer","<code>PoSChanges</code> Serializer","","","","","","","","","","","","","","","","","","","","","","","","","","","","set deferred credits indexed by target slot (can be set to …","","","","","","","","Extends the current <code>PosChanges</code> with another one","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Check if changes are empty","","","Create a new <code>PoSChanges</code> Serializer","Create a new <code>PoSChanges</code> Deserializer","updated production statistics","","","new roll counts for addresses (can be 0 to remove the …","","extra block seed bits added","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Final state of PoS","Technical specification of <code>apply_changes</code>:","","","","","Sends the current draw inputs (initial or bootstrapped) to …","proof-of-stake configuration","Create the initial cycle based off the initial rolls.","Create the a cycle based off of another cycle_info. Used …","contiguous cycle history, back = newest","coins to be credited at the end of the slot","Feeds the selector targeting a given draw cycle","Feeds the selector targeting a given draw cycle","Returns the argument unchanged.","","create a <code>PoSFinalState</code> from an existing snapshot","Retrieves the amount of rolls a given address has at a …","Retrieves the productions statistics for all addresses on …","Gets a cycle of the Proof of Stake <code>cycle_history</code>. Used …","Gets the index of a cycle in history","Gets a part of the Proof of Stake <code>deferred_credits</code>. Used …","Retrieves every deferred credit in a slot range","Retrieves the amount of rolls a given address has at the …","initial ledger hash, used for seed computation","initial rolls, used for negative cycle look back","initial seeds, used for negative cycle look back (cycles …","Calls <code>U::from(self)</code>.","","create a new <code>PoSFinalState</code>","Reset the state of the PoS final state","selector controller","Sets a part of the Proof of Stake <code>cycle_history</code>. Used only …","Sets a part of the Proof of Stake <code>deferred_credits</code>. Used …","","","","","","","Configuration of selector thread","","","","","","","","","","","","","","","","","","","communication channel length","","","","","Number of endorsement","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","genesis address to force draw genesis creators","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Maximum number of computed cycle’s draws we keep in cache","Number of periods per cycle","","Number of running threads","","","","","","","","","","","","","","","","","","","","","",""],"i":[55,55,0,0,0,0,0,0,55,55,0,0,0,55,55,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,30,32,23,24,47,58,47,59,58,26,23,20,20,68,1,17,0,63,0,48,43,10,46,17,17,63,10,0,34,25,0,18,63,59,58,48,68,9,0,1,17,68,1,1,1,43,63,63,63,30,32,68,26,23,10,68,0,0,9,17,18,26,59,17,23,58,17,18,17,17,26,59,18,63,0,48,46,72,10,68,26,30,32,34,48,23,24,46,47,25,58,1,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,9,9,9,1,9,9,9,9,1,9,9,9,1,1,1,9,9,9,72,9,9,9,9,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,30,32,21,23,24,17,26,21,23,20,20,21,23,26,24,30,32,25,34,17,20,35,36,37,21,23,26,24,30,32,25,34,17,20,35,36,37,17,20,17,20,17,21,21,21,21,21,17,17,34,25,23,24,25,20,26,30,32,34,20,35,17,20,17,20,36,37,20,17,17,20,36,37,21,23,26,24,30,32,25,34,17,20,35,36,37,17,20,21,23,26,24,30,32,25,34,17,20,35,36,37,21,23,26,24,30,32,25,34,17,20,35,36,37,20,30,32,37,37,21,23,26,24,30,32,25,34,17,26,23,17,26,17,23,17,17,17,26,23,24,25,20,17,20,21,23,26,24,30,32,25,34,17,20,35,36,37,21,23,26,24,30,32,25,34,17,20,35,36,37,21,23,26,24,30,32,25,34,17,20,35,36,37,26,30,32,34,21,23,24,25,36,37,37,36,36,21,23,26,24,30,32,25,34,17,20,35,36,37,0,0,0,0,0,0,0,0,0,0,0,50,50,49,47,44,49,47,44,46,48,47,49,43,50,51,52,44,46,48,47,49,43,50,51,52,44,43,44,43,44,44,48,43,46,46,47,48,49,43,50,43,48,43,51,52,43,43,51,52,43,46,48,47,49,43,50,51,52,44,43,44,43,43,44,43,44,43,43,46,48,47,49,43,50,51,52,44,46,48,47,49,43,50,51,52,44,43,52,52,46,48,47,49,44,43,43,43,46,47,43,48,46,44,43,44,44,46,48,47,49,43,50,51,52,44,46,48,47,49,43,50,51,52,44,46,48,47,49,43,50,51,52,44,48,49,46,47,51,52,52,51,51,46,48,47,49,43,50,51,52,44,55,55,55,55,0,55,55,0,0,0,55,0,73,74,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,0,0,0,60,60,60,60,60,58,59,58,58,59,18,60,61,62,58,59,18,60,61,62,18,18,58,18,18,59,58,59,18,60,61,62,18,18,61,62,58,59,18,60,61,62,18,58,59,18,60,61,62,58,59,18,60,61,62,18,62,62,58,59,18,59,58,18,59,18,58,18,18,58,59,18,60,61,62,58,59,18,60,61,62,58,59,18,60,61,62,58,61,62,62,61,61,58,59,18,60,61,62,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,69,69,69,69,69,69,69,68,69,70,71,68,69,70,71,68,68,68,68,69,68,70,71,68,70,71,68,69,70,71,68,68,68,69,70,71,68,69,70,71,71,71,68,68,68,68,68,68,69,70,71,68,69,70,71,68,69,70,71,70,71,71,70,70,68,69,70,71],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,[5,[4,3]],6],7],0,0,[[4,8,8],7],[8,[[7,[4]]]],[8,[[7,[9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[3,[[7,[3]]]],0,[[]],[[]],[10,10],[[]],0,0,[[10,11],12],[[]],[[]],[[]],[[],13],0,0,[[]],[[],14],[[],14],[[],15],[[]],0,0,0,[[]],[[]],[9,9],[[],[[2,[1]]]],[[]],0,[[9,9],16],[[],16],[[3,[5,[4,3]],6],7],[[9,11],12],[[]],[[]],[[4,8,8],7],[8,[[7,[4]]]],[8,[[7,[9]]]],[[]],[[],13],0,[[]],[[]],[[],14],[[],14],[[],15],[[]],[3,[[7,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,18,8,3,19],16],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[20,20],[[]],[[]],0,[[21,16],6],[[21,3],6],[[21,4,20],6],[[21,4,3],6],[[21,22],6],0,0,0,0,[[],23],[[],24],[[],25],[[],20],[26,[[29,[17,[0,[27,28]]]]]],[30,[[29,[[31,[4,20]],[0,[27,28]]]]]],[32,[[29,[33,[0,[27,28]]]]]],[34,[[29,[[33,[17]],[0,[27,28]]]]]],[[],[[14,[20]]]],[[],[[14,[35]]]],[[17,17],16],[[20,20],16],[[],16],[[],16],[[36,11],12],[[37,11],12],[[20,20]],0,[[17,11],12],[[20,11],12],[11,[[14,[38]]]],[11,[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[20,39],16],0,0,0,0,[[],21],[[],23],[[3,3],26],[[],24],[3,30],[3,32],[[],25],[[3,3,3],34],[[3,16,[5,[4,3]],[22,[19]],[31,[4,20]]],17],0,0,0,0,0,0,0,0,0,0,[[23,17,33],[[14,[40]]]],[[24,31,33],[[14,[40]]]],[[25,41,33],[[14,[40]]]],[20,14],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,0,[36,14],[37,14],[37,14],[[36,42],14],[[36,3],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[44,44],[[]],[[]],[[44,8,4,45],6],0,0,0,[[],46],[[],47],[48,[[29,[43,[0,[27,28]]]]]],[49,[[29,[[31,[4,45]],[0,[27,28]]]]]],[[],[[14,[43]]]],[[],[[14,[50]]]],[43],0,[43,6],[[51,11],12],[[52,11],12],[[43,43]],[[43,11],12],[11,[[14,[38]]]],[11,[[14,[38]]]],[43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,4,8],[[53,[45]]]],[43,[[53,[6]]]],[44,6],[[43,16],43],0,0,[[43,8,4,45],[[53,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[43,16],0,0,[[],46],[[19,3,16],48],[[],47],[3,49],[[],44],[[],43],[[],43],[43],[[46,43,33],[[14,[40]]]],[[47,31,33],[[14,[40]]]],[43,14],0,0,0,[[]],[[]],[[44,8,4,45]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,[51,14],[52,14],[52,14],[[51,42],14],[[51,3],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],54],[[]],[[]],[55,55],[[]],[[55,11],12],[[55,11],12],[[]],[[]],[[]],[[],13],[56],[[]],[[],57],[[],14],[[],14],[[],15],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[[]],[[],58],[[],18],0,0,0,[59,[[29,[18,[0,[27,28]]]]]],[[],[[14,[18]]]],[[],[[14,[60]]]],[[61,11],12],[[62,11],12],[[18,18]],[[18,11],12],[11,[[14,[38]]]],[11,[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[18,16],0,0,[[],58],[[19,3,3,3],59],0,0,0,0,0,0,[[58,18,33],[[14,[40]]]],[18,14],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[61,14],[62,14],[62,14],[[61,42],14],[[61,3],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[63,18,8,16],7],[[]],[[]],[63,63],[[]],[63,7],0,[63],[[63,17,8,8],[[14,[55]]]],0,0,[[63,3,6]],[[63,3],7],[[]],[[]],[[10,[41,[17]],43,42,64,[2,[1]],6],[[14,[63,55]]]],[[63,4,3],[[53,[3]]]],[[63,3],[[53,[31]]]],[[63,[65,[3]]],[[14,[66]]]],[[63,3],[[53,[67]]]],[[63,[65,[8]]]],[63,43],[[63,4],3],0,0,0,[[]],[[],13],[[10,42,64,[2,[1]],6],[[14,[63,55]]]],[63],0,[[63,[53,[17]]],[[65,[3]]]],[[63,43],[[65,[8]]]],[[]],[[],14],[[],14],[[],15],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[68,68],[[]],[[],[[14,[68]]]],[[],[[14,[69]]]],0,[[70,11],12],[[71,11],12],[[68,11],12],[11,[[14,[38]]]],[11,[[14,[38]]]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],0,0,0,0,[68,14],0,[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[70,14],[71,14],[71,14],[[70,42],14],[[70,3],14],[[]],[[]],[[]],[[]]],"p":[[8,"SelectorController"],[3,"Box"],[15,"u64"],[4,"Address"],[3,"BTreeMap"],[3,"Hash"],[6,"PosResult"],[3,"Slot"],[3,"Selection"],[3,"PoSConfig"],[3,"Formatter"],[6,"Result"],[3,"Request"],[4,"Result"],[3,"TypeId"],[15,"bool"],[3,"CycleInfo"],[3,"PoSChanges"],[15,"u8"],[3,"ProductionStats"],[3,"CycleInfoHashComputer"],[3,"BitVec"],[3,"CycleInfoSerializer"],[3,"ProductionStatsSerializer"],[3,"CycleHistorySerializer"],[3,"CycleInfoDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[3,"ProductionStatsDeserializer"],[6,"PreHashMap"],[3,"RollsDeserializer"],[3,"Vec"],[3,"CycleHistoryDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[3,"Ratio"],[4,"SerializeError"],[3,"VecDeque"],[15,"str"],[3,"DeferredCredits"],[3,"DeferredCreditsHashTracker"],[3,"Amount"],[3,"DeferredCreditsSerializer"],[3,"CreditsSerializer"],[3,"DeferredCreditsDeserializer"],[3,"CreditsDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[4,"Option"],[3,"Display"],[4,"PosError"],[3,"Demand"],[3,"String"],[3,"PoSChangesSerializer"],[3,"PoSChangesDeserializer"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"PoSFinalState"],[3,"PathBuf"],[4,"StreamingStep"],[4,"ModelsError"],[15,"usize"],[3,"SelectorConfig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[8,"SelectorManager"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_pos_worker":{"doc":"","t":"EDDGNDNLLLLLLLLMAMLAMLLLLLLLLLLLLLLLLMLFLLLLLLLLLLLLLLLLLAMMMHHHHHHDDLLLLMLLLLLLLLLLMMLLLLMLMMLLLLLLLLLLHHFDLLMMLMLLLLLFLLLL","n":["Command","CycleDraws","DrawCache","DrawCachePtr","DrawInput","RwLockCondvar","Stop","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","condvar","controller","cycle","default","draw","draws","fmt","fmt","from","from","from","from","get","get_cycle_index","into","into","into","into","into_request","into_request","into_request","into_request","mutex","notify_all","start_selector_worker","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wait","worker","cycle","lookback_rolls","lookback_seed","CALLSITE","CALLSITE","CALLSITE","META","META","META","SelectorControllerImpl","SelectorManagerImpl","borrow","borrow","borrow_mut","borrow_mut","cache","clone","clone_box","clone_into","feed_cycle","from","from","from_ref","get_address_selections","get_producer","get_selection","input_mpsc","input_mpsc","into","into","into_request","into_request","periods_per_cycle","stop","thread_count","thread_handle","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_for_draws","CALLSITE","META","perform_draws","SelectorThread","borrow","borrow_mut","cache","cfg","from","input_mpsc","into","into_request","process_draws_result","run","spawn","start_selector_worker","try_from","try_into","type_id","vzip"],"q":["massa_pos_worker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_worker::Command","","","massa_pos_worker::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_pos_worker::draw","","","massa_pos_worker::worker","","","","","","","","","","","","","","","",""],"d":["Enumeration of internal commands sent to the selector …","Draws for a cycle, used in selector cache","Draw cache (lowest index = oldest)","Structure of the shared pointer to the computed draws, or …","Input requirements for the draw","","Stop the thread (usually sent by the manager and pushed at …","","","","","","","","","","This module implements a selector controller. See …","cycle number","","","cache of draws","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","get a reference to the draws of a given cycle","get the index of a cycle in the cache","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Start thread selector Launches a selector worker thread …","","","","","","","","","","","","","","","","","","","","","","","","","","","","implementation of the selector controller","Implementation of the Selector manager Allows stopping the …","","","","","Cache storing the computed selections for each cycle.","","Returns a boxed clone of self. Allows cloning …","","Feed cycle to the selector","Returns the argument unchanged.","Returns the argument unchanged.","","Return a list of slots where <code>address</code> has been chosen to …","Get Address of the selected block producer for a given slot","Get Selection computed for a slot:","Input data mpsc (used to stop the selector thread)","MPSC to send commands to the selector thread","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","todo: use a configuration structure","stops the worker","thread count","handle used to join the worker thread","","","","","","","","","","Waits for draws to reach at least a given cycle number. …","","","Draws block and creators for a given cycle.","Structure gathering all elements needed by the selector …","","","Cache of computed endorsements","Configuration","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","process the result of a draw","Thread loop.","Creates the <code>SelectorThread</code> structure to gather all data …","Launches a selector worker thread and returns a pair to …","","","",""],"i":[0,0,0,0,25,0,25,25,2,5,1,25,2,5,1,1,0,5,1,0,5,2,5,25,2,5,1,2,2,25,2,5,1,25,2,5,1,1,1,0,25,2,5,1,25,2,5,1,25,2,5,1,25,2,5,1,1,0,29,29,29,0,0,0,0,0,0,0,0,23,15,23,15,15,15,15,15,15,23,15,15,15,15,15,23,15,23,15,23,15,15,23,15,23,15,23,15,23,15,23,15,23,15,15,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],0,0,[[2,3],4],[[5,3],4],[[]],[[]],[[]],[[]],[[2,6],[[7,[5]]]],[[2,6],[[7,[8]]]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],0,[1],[10,11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[1,14]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[15,15],[15,[[17,[16]]]],[[]],[[15,6,[19,[18,6]],20],11],[[]],[[]],[[]],[[15,18,21,21],11],[[15,21],[[11,[18]]]],[[15,21],[[11,[22]]]],0,0,[[]],[[]],[[],9],[[],9],0,[23],0,0,[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[]],[[]],[[15,6],[[11,[6]]]],0,0,[[10,6,[19,[18,6]],20],[[11,[5]]]],0,[[]],[[]],0,0,[[]],0,[[]],[[],9],[[24,6,[11,[5]]],11],[24,11],[[[26,[25]],27,10],[[28,[11]]]],[10,11],[[],12],[[],12],[[],13],[[]]],"p":[[3,"RwLockCondvar"],[3,"DrawCache"],[3,"Formatter"],[6,"Result"],[3,"CycleDraws"],[15,"u64"],[4,"Option"],[15,"usize"],[3,"Request"],[3,"SelectorConfig"],[6,"PosResult"],[4,"Result"],[3,"TypeId"],[6,"RwLockReadGuard"],[3,"SelectorControllerImpl"],[8,"SelectorController"],[3,"Box"],[4,"Address"],[3,"BTreeMap"],[3,"Hash"],[3,"Slot"],[3,"Selection"],[3,"SelectorManagerImpl"],[3,"SelectorThread"],[4,"Command"],[3,"Receiver"],[3,"Arc"],[3,"JoinHandle"],[13,"DrawInput"]]},\
"massa_proto":{"doc":"<strong>Overview</strong>","t":"AAAADDDDRRRFFFFFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLNNNDNENNFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLRFFDLLLLLMLMLLLLLLLMLLLLLAADDDDDDNDDDDDDNRDDDDDDDDDDDDDDDDDDFFFFFFFDDDDDDDDDDDDDDDDEDDDDNDNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDDDDDDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDDDDDDDDDDDDDDDDNDDNMMMMMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAAMMMLMMMMLMMMMMMMMMMMMMMMMLMMLMMMMMMMMMMMAAAMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWWDLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLDDDDDDDIDQDQDQDQDQDQDQDQDQDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLKKKKKLLKLMKKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENLLLLLLLLLLLLLLLLLLNENLLLLLLLLLLLLLLLLLLNENLLLLLLLLLLLLLLLLLL","n":["google","massa","api","rpc","CustomHttpPattern","Http","HttpRule","HttpRuleComment","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","additional_bindings","body","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","fully_decode_reserved_expansion","http_rule","into","into","into","into","into_request","into_request","into_request","into_request","kind","path","pattern","response_body","rules","selector","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Custom","Delete","Get","HttpRuleComment","Patch","Pattern","Post","Put","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from","from_ref","into","into","into_request","into_request","merge","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","STRUCT_NAME","ScalarWrapper","ScalarWrapper","Status","borrow","borrow_mut","clear","clone","clone_into","code","default","details","encoded_len","eq","fmt","from","from_ref","into","into_request","message","to_owned","try_from","try_into","type_id","vzip","api","v1","Block","BlockHeader","BlockParent","BlockResult","BytesMapFieldEntry","CallSc","CallSc","DatastoreEntriesQuery","DatastoreEntry","DatastoreEntryFilter","Endorsement","EndorsementResult","ExecuteSc","ExecuteSc","FILE_DESCRIPTOR_SET","FilledBlock","FilledOperationTuple","GetBlocksBySlotsRequest","GetBlocksBySlotsResponse","GetDatastoreEntriesRequest","GetDatastoreEntriesResponse","GetLargestStakersRequest","GetLargestStakersResponse","GetNextBlockBestParentsRequest","GetNextBlockBestParentsResponse","GetSelectorDrawsRequest","GetSelectorDrawsResponse","GetTransactionsThroughputRequest","GetTransactionsThroughputResponse","GetVersionRequest","GetVersionResponse","IndexedSlot","Inner","Inner","Inner","Inner","Inner","Inner","Inner","Inner","LargestStakerEntry","LargestStakersContext","LargestStakersFilter","LargestStakersQuery","NewBlocksHeadersRequest","NewBlocksHeadersResponse","NewBlocksRequest","NewBlocksResponse","NewEndorsementsRequest","NewEndorsementsResponse","NewFilledBlocksRequest","NewFilledBlocksResponse","NewOperationsFilter","NewOperationsQuery","NewOperationsRequest","NewOperationsResponse","OpType","Operation","OperationResult","OperationType","RollBuy","RollBuy","RollSell","RollSellcalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","SecureShare","SelectorDraws","SelectorDrawsFilter","SelectorDrawsQuery","SendBlocksRequest","SendBlocksResponse","SendEndorsementsRequest","SendEndorsementsResponse","SendOperationsRequest","SendOperationsResponse","SignedBlock","SignedBlockHeader","SignedEndorsement","SignedOperation","Slot","Transaction","Transaction","TransactionsThroughputRequest","TransactionsThroughputResponse","Unspecified","address","address","address","address","amount","as_str_name","block","block","block_header","block_id","block_id","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_sc","candidate_value","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","coins","content","content","content","content","content_creator_address","content_creator_address","content_creator_address","content_creator_address","content_creator_address","content_creator_pub_key","content_creator_pub_key","content_creator_pub_key","content_creator_pub_key","content_creator_pub_key","context","data","datastore","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","endorsed_block","endorsement","endorsements","endorsements","endorsements_ids","entries","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","execut_sc","expire_period","fee","filled_block","filter","filter","filter","filter","final_value","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str_name","get_hash","hash","header","header","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","index","index","interval","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_valid","key","key","limit","massa_service_client","massa_service_server","max_coins","max_gas","max_gas","max_rolls","max_rolls","message","message","message","min_rolls","min_rolls","next_block_draws","next_endorsement_draws","offset","op","operation","operation","operation_id","operation_merkle_root","operations","operations","operations","operations_ids","param","parents","parents","partial_cmp","period","period","push_types","queries","queries","query","query","recipient_address","roll_buy","roll_count","roll_count","roll_sell","rolls","selector_draws","send_blocks_response","send_endorsements_response","send_operations_response","serialized_data","signature","signature","signature","signature","signature","slot","slot","slot","slot","slots","stakers","target_addr","target_func","thread","throughput","throughput","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","value","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","","","","","","","","","","","","","","","MassaServiceClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","get_blocks_by_slots","get_datastore_entries","get_largest_stakers","get_next_block_best_parents","get_selector_draws","get_transactions_throughput","get_version","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","new_blocks","new_blocks_headers","new_endorsements","new_filled_blocks","new_operations","send_blocks","send_compressed","send_endorsements","send_operations","to_owned","transactions_throughput","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GetBlocksBySlotsSvc","GetDatastoreEntriesSvc","GetLargestStakersSvc","GetNextBlockBestParentsSvc","GetSelectorDrawsSvc","GetTransactionsThroughputSvc","GetVersionSvc","MassaService","MassaServiceServer","NewBlocksHeadersStream","NewBlocksHeadersSvc","NewBlocksStream","NewBlocksSvc","NewEndorsementsStream","NewEndorsementsSvc","NewFilledBlocksStream","NewFilledBlocksSvc","NewOperationsStream","NewOperationsSvc","SendBlocksStream","SendBlocksSvc","SendEndorsementsStream","SendEndorsementsSvc","SendOperationsStream","SendOperationsSvc","TransactionsThroughputStream","TransactionsThroughputSvc","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arc","from_ref","from_ref","get_blocks_by_slots","get_datastore_entries","get_largest_stakers","get_next_block_best_parents","get_selector_draws","get_transactions_throughput","get_version","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_make_service","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","new_blocks","new_blocks_headers","new_endorsements","new_filled_blocks","new_operations","poll_ready","poll_ready","send_blocks","send_compressed","send_compression_encodings","send_endorsements","send_operations","to_owned","to_owned","transactions_throughput","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_interceptor","Error","Message","Result","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","Error","Message","Result","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","Error","Message","Result","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip"],"q":["massa_proto","","massa_proto::google","","massa_proto::google::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_proto::google::api::http_rule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_proto::google::rpc","","","","","","","","","","","","","","","","","","","","","","","","","massa_proto::massa","massa_proto::massa::api","massa_proto::massa::api::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_proto::massa::api::v1::massa_service_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_proto::massa::api::v1::massa_service_servermassa_proto::massa::api::v1::send_blocks_response","","","","","","","","","","","","","","","","","","","","","massa_proto::massa::api::v1::send_endorsements_response","","","","","","","","","","","","","","","","","","","","","massa_proto::massa::api::v1::send_operations_response","","","","","","","","","","","","","","","","","","","",""],"d":["Google protos Module","Massa protos Module","Google API Module","Google RPC Module","A custom pattern is used for defining custom HTTP verb.","Defines the HTTP configuration for an API service. It …","HACK: see docs in <code>HttpRuleComment</code> ignored in doctest pass","gRPC Transcoding","","","","","","","","","","Additional HTTP bindings for the selector. Nested bindings …","The name of the request field whose value is mapped to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","When set to true, URL path parameters will be fully …","Nested message and enum types in <code>HttpRule</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The name of this custom HTTP verb.","The path matched by this custom verb.","Determines the URL pattern is matched by this rules. This …","Optional. The name of the response field whose value is …","A list of HTTP configuration rules that apply to …","Selects a method to which this rule applies.","","","","","","","","","","","","","","","","","","","","The custom pattern is used for specifying an HTTP method …","Maps to HTTP DELETE. Used for deleting a resource.","Maps to HTTP GET. Used for listing and getting information …","Determines the URL pattern is matched by this rules. This …","Maps to HTTP PATCH. Used for updating a resource.","HACK: see docs in <code>HttpRuleComment</code> ignored in doctest pass","Maps to HTTP POST. Used for creating a resource or …","Maps to HTTP PUT. Used for replacing a resource.","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","The <code>Status</code> type defines a logical error model that is …","","","","","","The status code, which should be an enum value of …","","A list of messages that carry the error details.  There is …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","A developer-facing error message, which should be in …","","","","","","Massa API Module","Version 1 of the Massa protos","Block","Block header","Block parent tuple","Holds Block response","BytesMapFieldEntry","Calls an exported function from a stored smart contract","Call smart contract","DatastoreEntries Query","DatastoreEntry","","An endorsement, as sent in the network","Holds Endorsement response","Execute a smart contract","Execute smart contract","Compiled file descriptor set for the Massa protos","Filled block","Filled Operation Tuple","GetBlocksBySlotsRequest holds request for GetBlocksBySlots","GetBlocksBySlotsResponse holds response from …","GetDatastoreEntriesRequest holds request from …","GetDatastoreEntriesResponse holds response from …","GetLargestStakersRequest holds request from …","GetLargestStakersResponse holds response from …","GetNextBlockBestParentsRequest holds request for …","GetNextBlockBestParentsResponse holds response from …","GetSelectorDrawsRequest holds request from GetSelectorDraws","GetSelectorDrawsResponse holds response from …","GetTransactionsThroughputRequest holds request for …","GetTransactionsThroughputResponse holds response from …","GetVersionRequest holds request from GetVersion","GetVersionResponse holds response from GetVersion","When an address is drawn to create an endorsement it is …","","","","","","","","","LargestStakerEntry","LargestStakers context","LargestStakers Filter","LargestStakers Query","NewBlocksHeadersRequest holds request for NewBlocksHeaders","NewBlocksHeadersResponse holds response from …","NewBlocksRequest holds request for NewBlocks","NewBlocksResponse holds response from NewBlocks","NewEndorsementsRequest holds request for NewEndorsements","NewEndorsementsResponse holds response from NewEndorsements","NewFilledBlocksRequest holds request for NewFilledBlocks","NewFilledBlocksResponse holds response from NewFilledBlocks","NewOperations Filter","NewOperations Query","NewOperationsRequest holds request for NewOperations","NewOperationsResponse holds response from NewOperations","Operation type enum","The operation as sent in the network","Holds Operation response","Type specific operation content","The sender buys <code>roll_count</code> rolls. Roll price is defined in …","Roll buy","The sender sells <code>roll_count</code> rolls. Roll price is defined …","Roll sellackages a type such that it can be securely sent and …","Selector draws","SelectorDraws Filter","SelectorDraws Query","SendBlocksRequest holds parameters to SendBlocks","SendBlocksResponse holds response from SendBlocks","SendEndorsementsRequest holds parameters to …","SendEndorsementsResponse holds response from …","SendOperationsRequest holds parameters to SendOperations","SendOperationsResponse holds response from SendOperations","Signed block","Signed block header","Signed endorsement","Signed operation","A point in time where a block is expected","Transfer coins from sender to recipient","Transaction","TransactionsThroughputRequest holds request for …","TransactionsThroughputResponse holds response from …","Defaut enum value","/ Associated address of the entry","Address","Address","Address","Amount","String value of the enum field names used in the ProtoBuf …","Signed block","Secure shared block","Signed block header","Block id","Block id","Blocks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls an exported function from a stored smart contract","candidate_value datastore entry valuextra coins that are spent from the caller’s balance and …","Endorsement","Operation","Block","BlockHeader","Derived from the same public key used to generate the …","Derived from the same public key used to generate the …","Derived from the same public key used to generate the …","Derived from the same public key used to generate the …","Derived from the same public key used to generate the …","The public-key component used in the generation of the …","The public-key component used in the generation of the …","The public-key component used in the generation of the …","The public-key component used in the generation of the …","The public-key component used in the generation of the …","Context","Smart contract bytecode.","A key-value store associating a hash to arbitrary bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of endorsed block This is the parent in thread …","Signed endorsement","Signed endorsements","Secure shared endorsements","Endorsements ids","Datastore entries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute a smart contract","After <code>expire_period</code> slot the operation won’t be included …","The fee they have decided for this operation","Block with operations content","Filter","Filter","Filter","Filter","final datastore entry value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>OpType</code>, or <code>None</code> if <code>value</code> is not a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an enum from field names used in the ProtoBuf …","","","Signed header","Signed header","A secure hash of the data. See also [massa_hash::Hash]","A secure hash of the data. See also [massa_hash::Hash]","A secure hash of the data. See also [massa_hash::Hash]","A secure hash of the data. See also [massa_hash::Hash]","A secure hash of the data. See also [massa_hash::Hash]","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Request id","Endorsement index in the slot","Endorsement index inside the including block","Returns the value of <code>interval</code>, or the default value if …","Timer interval in seconds (Optional). Defaults to 10s","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OpType</code>.","bytes key","Datastore key","Limits the number of stakers to return. Defaults to 50","Generated client implementations.","Generated server implementations.","The maximum of coins that could be spent by the operation …","The maximum amount of gas that the execution of the …","The maximum amount of gas that the execution of the …","Returns the value of <code>max_rolls</code>, or the default value if …","Maximum rolls (Optional)","Block result or a gRPC status","Endorsement result or gRPC status","Operation result or gRPC status","Returns the value of <code>min_rolls</code>, or the default value if …","Minimum rolls (Optional)","Next block draws","Next endorsements draws","Starting offset for the list of stakers. Defaults to 1","The type specific operation part","Signed operation","Signed operation","Operation id","All operations hash","Operations ids","Operations","Secured shared operations","Operations ids","Parameter to pass to the target function","parents","Best parents","","Period","Period","Appends the provided enum value to <code>types</code>.","Queries","Queries","Query","Query","Recipient address","The sender buys <code>roll_count</code> rolls. Roll price is defined in …","Roll count","Roll count","The sender sells <code>roll_count</code> rolls. Roll price is defined …","Rolls","Selector draws","Nested message and enum types in <code>SendBlocksResponse</code>.","Nested message and enum types in <code>SendEndorsementsResponse</code>.","Nested message and enum types in <code>SendOperationsResponse</code>.","Content in sharable, deserializable form. Is used in the …","A cryptographically generated value using <code>serialized_data</code> …","A cryptographically generated value using <code>serialized_data</code> …","A cryptographically generated value using <code>serialized_data</code> …","A cryptographically generated value using <code>serialized_data</code> …","A cryptographically generated value using <code>serialized_data</code> …","Slot","Slot in which the endorsement can be included","Slot","Slot","Slots","Largest stakers","Target smart contract address","Target function name. No function is called if empty","Thread","Transactions throughput","Transactions throughput","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transfer coins from sender to recipienteturns an iterator which yields the valid enum values …","Operation type enum","bytes key","Version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Massa gRPC service","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Get blocks by slots","Get datastore entries","Get largest stakers","Get next block best parents","Get selector draws","Get transactions throughput","Get node version","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","New received and produced blocks","New received and produced blocks headers","New received and produced endorsements","New received and produced blocks with operations","New received and produced perations","Send blocks","Compress requests with the given encoding.","Send endorsements","Send operations","","Transactions throughput per second","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","Massa gRPC service","Server streaming response type for the NewBlocksHeaders …","","Server streaming response type for the NewBlocks method.","","Server streaming response type for the NewEndorsements …","","Server streaming response type for the NewFilledBlocks …","","Server streaming response type for the NewOperations …","","Server streaming response type for the SendBlocks method.","","Server streaming response type for the SendEndorsements …","","Server streaming response type for the SendOperations …","","Server streaming response type for the …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get blocks by slots","Get datastore entries","Get largest stakers","Get next block best parents","Get selector draws","Get transactions throughput","Get node version","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","New received and produced blocks","New received and produced blocks headers","New received and produced endorsements","New received and produced blocks with operations","New received and produced perations","","","Send blocks","Compress responses with the given encoding, if the client …","","Send endorsements","Send operations","","","Transactions throughput per second","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gRPC error(status)","Block result or a gRPC status","Block result","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","gRPC error(status)","Endorsement result or gRPC status","Endorsement result","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","gRPC error(status)","Operation result or gRPC status","Operation result","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,146,1,2,3,146,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,146,1,2,3,1,2,3,1,0,146,1,2,3,146,1,2,3,3,3,2,2,1,2,1,2,3,146,1,2,3,146,1,2,3,146,1,2,3,146,1,2,3,11,11,11,0,11,0,11,11,0,0,0,0,0,147,11,147,11,11,11,11,11,11,11,147,11,11,147,11,147,11,11,11,147,11,147,11,147,11,147,11,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,18,44,52,58,60,28,18,66,77,68,55,79,41,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,27,46,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,18,32,23,33,38,39,23,25,33,38,39,23,25,33,38,39,50,31,31,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,22,70,36,80,82,45,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,18,27,26,26,72,43,48,57,74,46,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,18,18,18,34,35,23,25,33,38,39,40,41,42,45,47,50,53,54,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,80,81,83,84,86,87,20,22,86,86,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,18,24,44,48,0,0,31,31,32,49,49,78,81,84,49,49,60,60,48,26,37,76,37,36,34,35,83,85,32,36,54,18,21,55,75,42,56,47,73,28,27,29,30,27,52,59,0,0,0,25,23,25,33,38,39,20,22,36,51,40,50,32,32,21,62,87,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,27,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,75,75,24,64,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,89,35,36,90,37,38,39,40,41,42,43,44,45,46,47,48,49,91,92,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,93,94,76,77,78,79,80,81,82,95,83,84,85,96,86,97,87,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,0,0,0,0,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,0,117,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,117,135,117,135,117,135,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,117,135,117,116,116,116,116,116,116,116,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,117,117,117,117,117,116,116,116,116,116,117,117,116,117,117,116,116,135,117,116,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,135,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,117,117,143,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,144,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,145,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[3],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[],1],[[],2],[[],3],[1,4],[2,4],[3,4],[[1,1],5],[[2,2],5],[[3,3],5],[[1,6],7],[[2,6],7],[[3,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[[]],[11],[11,4],[[11,11],5],[[11,6],7],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[12,13,14,15],[[9,[16]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[]],[[]],0,[[]],[[]],0,[[]],[[]],[17],[17,17],[[]],0,[[],17],0,[17,4],[[17,17],5],[[17,6],7],[[]],[[]],[[]],[[],8],0,[[]],[[],9],[[],9],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,19],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[52],[53],[54],[55],[56],[57],[58],[59],[60],[61],[62],[63],[64],[65],[66],[67],[68],[69],[70],[71],[72],[73],[74],[75],[76],[77],[78],[79],[80],[81],[82],[83],[84],[85],[86],[87],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,18],88],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],30],[[],31],[[],32],[[],33],[[],34],[[],35],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],[[],48],[[],49],[[],50],[[],51],[[],52],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],62],[[],63],[[],64],[[],65],[[],66],[[],67],[[],68],[[],69],[[],70],[[],71],[[],72],[[],73],[[],74],[[],75],[[],76],[[],77],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[],84],[[],85],[[],86],[[],87],[[],18],[20,4],[21,4],[22,4],[23,4],[24,4],[25,4],[26,4],[27,4],[28,4],[29,4],[30,4],[31,4],[32,4],[33,4],[34,4],[35,4],[36,4],[37,4],[38,4],[39,4],[40,4],[41,4],[42,4],[43,4],[44,4],[45,4],[46,4],[47,4],[48,4],[49,4],[50,4],[51,4],[52,4],[53,4],[54,4],[55,4],[56,4],[57,4],[58,4],[59,4],[60,4],[61,4],[62,4],[63,4],[64,4],[65,4],[66,4],[67,4],[68,4],[69,4],[70,4],[71,4],[72,4],[73,4],[74,4],[75,4],[76,4],[77,4],[78,4],[79,4],[80,4],[81,4],[82,4],[83,4],[84,4],[85,4],[86,4],[87,4],0,0,0,0,0,0,[[20,20],5],[[21,21],5],[[22,22],5],[[23,23],5],[[24,24],5],[[25,25],5],[[26,26],5],[[27,27],5],[[28,28],5],[[29,29],5],[[30,30],5],[[31,31],5],[[32,32],5],[[33,33],5],[[34,34],5],[[35,35],5],[[36,36],5],[[37,37],5],[[38,38],5],[[39,39],5],[[40,40],5],[[41,41],5],[[42,42],5],[[43,43],5],[[44,44],5],[[45,45],5],[[46,46],5],[[47,47],5],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[[55,55],5],[[56,56],5],[[57,57],5],[[58,58],5],[[59,59],5],[[60,60],5],[[61,61],5],[[62,62],5],[[63,63],5],[[64,64],5],[[65,65],5],[[66,66],5],[[67,67],5],[[68,68],5],[[69,69],5],[[70,70],5],[[71,71],5],[[72,72],5],[[73,73],5],[[74,74],5],[[75,75],5],[[76,76],5],[[77,77],5],[[78,78],5],[[79,79],5],[[80,80],5],[[81,81],5],[[82,82],5],[[83,83],5],[[84,84],5],[[85,85],5],[[86,86],5],[[87,87],5],[[18,18],5],[[],5],0,0,0,0,0,0,0,0,0,[[20,6],7],[[21,6],7],[[22,6],7],[[23,6],7],[[24,6],7],[[25,6],7],[[26,6],7],[[27,6],7],[[28,6],7],[[29,6],7],[[30,6],7],[[31,6],7],[[32,6],7],[[33,6],7],[[34,6],7],[[89,6],7],[[35,6],7],[[36,6],7],[[90,6],7],[[37,6],7],[[38,6],7],[[39,6],7],[[40,6],7],[[41,6],7],[[42,6],7],[[43,6],7],[[44,6],7],[[45,6],7],[[46,6],7],[[47,6],7],[[48,6],7],[[49,6],7],[[91,6],7],[[92,6],7],[[50,6],7],[[51,6],7],[[52,6],7],[[53,6],7],[[54,6],7],[[55,6],7],[[56,6],7],[[57,6],7],[[58,6],7],[[59,6],7],[[60,6],7],[[61,6],7],[[62,6],7],[[63,6],7],[[64,6],7],[[65,6],7],[[66,6],7],[[67,6],7],[[68,6],7],[[69,6],7],[[70,6],7],[[71,6],7],[[72,6],7],[[73,6],7],[[74,6],7],[[75,6],7],[[93,6],7],[[94,6],7],[[76,6],7],[[77,6],7],[[78,6],7],[[79,6],7],[[80,6],7],[[81,6],7],[[82,6],7],[[95,6],7],[[83,6],7],[[84,6],7],[[85,6],7],[[96,6],7],[[86,6],7],[[97,6],7],[[87,6],7],[[18,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,[[12,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,[[12,[18]]]],[[],99],[18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,99],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[98,5],0,0,0,0,0,0,0,0,[49,99],0,0,0,0,[49,99],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,18],[[12,[88]]]],0,0,[[75,18]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[75,[[102,[[101,[[100,[98]]]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[103,104],103],[[]],[[]],[[[103,[105]]],[[103,[105]]]],[[]],[[],[[9,[[103,[106]],107]]]],[[[103,[108]],6],7],[[]],[[]],[[103,[109,[40]]],[[9,[[110,[41]],111]]]],[[103,[109,[42]]],[[9,[[110,[45]],111]]]],[[103,[109,[47]]],[[9,[[110,[50]],111]]]],[[103,[109,[53]]],[[9,[[110,[54]],111]]]],[[103,[109,[56]]],[[9,[[110,[59]],111]]]],[[103,[109,[61]]],[[9,[[110,[62]],111]]]],[[103,[109,[63]]],[[9,[[110,[64]],111]]]],0,[[]],[[],8],[[103,4],103],[[103,4],103],[[],103],[[103,112],[[9,[[110,[[113,[66]]]],111]]]],[[103,112],[[9,[[110,[[113,[68]]]],111]]]],[[103,112],[[9,[[110,[[113,[70]]]],111]]]],[[103,112],[[9,[[110,[[113,[72]]]],111]]]],[[103,112],[[9,[[110,[[113,[76]]]],111]]]],[[103,112],[[9,[[110,[[113,[78]]]],111]]]],[[103,104],103],[[103,112],[[9,[[110,[[113,[81]]]],111]]]],[[103,112],[[9,[[110,[[113,[84]]]],111]]]],[[]],[[103,112],[[9,[[110,[[113,[87]]]],111]]]],[[],9],[[],9],[[],10],[[]],[[],[[103,[114]]]],[115,103],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[117,[116]],104],[[117,[116]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[118,[116]],[8,[40]]]],[[[119,[116]],[8,[42]]]],[[[120,[116]],[8,[47]]]],[[[121,[116]],[8,[53]]]],[[[122,[116]],[8,[56]]]],[[[123,[116]],[8,[61]]]],[[[124,[116]],[8,[63]]]],[[[125,[116]],[8,[[113,[65]]]]]],[[[126,[116]],[8,[[113,[67]]]]]],[[[127,[116]],[8,[[113,[69]]]]]],[[[128,[116]],[8,[[113,[71]]]]]],[[[129,[116]],[8,[[113,[73]]]]]],[[[130,[116]],[8,[[113,[77]]]]]],[[[131,[116]],[8,[[113,[80]]]]]],[[[132,[116]],[8,[[113,[83]]]]]],[[[133,[116]],[8,[[113,[86]]]]]],[134],[[117,134]],[[[135,[116]]],[[135,[116]]]],[[[117,[116]]],[[117,[116]]]],[[]],[[]],[[[135,[108]],6],7],[[[117,[[0,[108,116]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[136,[116]]],[[117,[116]]]],[[]],[[]],[[[8,[40]]],[[139,[[138,[137]]]]]],[[[8,[42]]],[[139,[[138,[137]]]]]],[[[8,[47]]],[[139,[[138,[137]]]]]],[[[8,[53]]],[[139,[[138,[137]]]]]],[[[8,[56]]],[[139,[[138,[137]]]]]],[[[8,[61]]],[[139,[[138,[137]]]]]],[[[8,[63]]],[[139,[[138,[137]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],140],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[117,[116]],4],[[117,[116]]]],0,[[[117,[116]],4],[[117,[116]]]],0,[116,[[117,[116]]]],[[[8,[[113,[65]]]]],[[139,[[138,[137]]]]]],[[[8,[[113,[67]]]]],[[139,[[138,[137]]]]]],[[[8,[[113,[69]]]]],[[139,[[138,[137]]]]]],[[[8,[[113,[71]]]]],[[139,[[138,[137]]]]]],[[[8,[[113,[73]]]]],[[139,[[138,[137]]]]]],[[117,141],[[142,[9]]]],[141,[[142,[9]]]],[[[8,[[113,[77]]]]],[[139,[[138,[137]]]]]],[[[117,[116]],104],[[117,[116]]]],0,[[[8,[[113,[80]]]]],[[139,[[138,[137]]]]]],[[[8,[[113,[83]]]]],[[139,[[138,[137]]]]]],[[]],[[]],[[[8,[[113,[86]]]]],[[139,[[138,[137]]]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,[[114,[[117,[116]]]]]],0,0,0,[[]],[[]],[143,143],[[]],[143],[143,4],[[143,143],5],[[143,6],7],[[]],[[]],[[]],[[],8],[[12,13,14,15],[[9,[16]]]],[[]],[[],9],[[],9],[[],10],[[]],0,0,0,[[]],[[]],[144,144],[[]],[144],[144,4],[[144,144],5],[[144,6],7],[[]],[[]],[[]],[[],8],[[12,13,14,15],[[9,[16]]]],[[]],[[],9],[[],9],[[],10],[[]],0,0,0,[[]],[[]],[145,145],[[]],[145],[145,4],[[145,145],5],[[145,6],7],[[]],[[]],[[]],[[],8],[[12,13,14,15],[[9,[16]]]],[[]],[[],9],[[],9],[[],10],[[]]],"p":[[3,"Http"],[3,"HttpRule"],[3,"CustomHttpPattern"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Request"],[4,"Result"],[3,"TypeId"],[4,"Pattern"],[4,"Option"],[15,"u32"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[3,"Status"],[4,"OpType"],[15,"str"],[3,"IndexedSlot"],[3,"Slot"],[3,"Endorsement"],[3,"SignedEndorsement"],[3,"BytesMapFieldEntry"],[3,"SecureShare"],[3,"Operation"],[3,"OperationType"],[3,"Transaction"],[3,"RollBuy"],[3,"RollSell"],[3,"ExecuteSc"],[3,"CallSc"],[3,"SignedOperation"],[3,"Block"],[3,"FilledBlock"],[3,"BlockHeader"],[3,"FilledOperationTuple"],[3,"SignedBlock"],[3,"SignedBlockHeader"],[3,"GetBlocksBySlotsRequest"],[3,"GetBlocksBySlotsResponse"],[3,"GetDatastoreEntriesRequest"],[3,"DatastoreEntriesQuery"],[3,"DatastoreEntryFilter"],[3,"GetDatastoreEntriesResponse"],[3,"DatastoreEntry"],[3,"GetLargestStakersRequest"],[3,"LargestStakersQuery"],[3,"LargestStakersFilter"],[3,"GetLargestStakersResponse"],[3,"LargestStakersContext"],[3,"LargestStakerEntry"],[3,"GetNextBlockBestParentsRequest"],[3,"GetNextBlockBestParentsResponse"],[3,"BlockParent"],[3,"GetSelectorDrawsRequest"],[3,"SelectorDrawsQuery"],[3,"SelectorDrawsFilter"],[3,"GetSelectorDrawsResponse"],[3,"SelectorDraws"],[3,"GetTransactionsThroughputRequest"],[3,"GetTransactionsThroughputResponse"],[3,"GetVersionRequest"],[3,"GetVersionResponse"],[3,"NewBlocksRequest"],[3,"NewBlocksResponse"],[3,"NewBlocksHeadersRequest"],[3,"NewBlocksHeadersResponse"],[3,"NewEndorsementsRequest"],[3,"NewEndorsementsResponse"],[3,"NewFilledBlocksRequest"],[3,"NewFilledBlocksResponse"],[3,"NewOperationsRequest"],[3,"NewOperationsQuery"],[3,"NewOperationsFilter"],[3,"NewOperationsResponse"],[3,"SendBlocksRequest"],[3,"SendBlocksResponse"],[3,"BlockResult"],[3,"SendEndorsementsRequest"],[3,"SendEndorsementsResponse"],[3,"EndorsementResult"],[3,"SendOperationsRequest"],[3,"SendOperationsResponse"],[3,"OperationResult"],[3,"TransactionsThroughputRequest"],[3,"TransactionsThroughputResponse"],[4,"Ordering"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"Inner"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[15,"i32"],[15,"u64"],[3,"Iter"],[3,"Cloned"],[3,"FilterMap"],[3,"MassaServiceClient"],[4,"CompressionEncoding"],[8,"Clone"],[3,"Channel"],[3,"Error"],[8,"Debug"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[8,"IntoStreamingRequest"],[3,"Streaming"],[3,"InterceptedService"],[3,"Uri"],[8,"MassaService"],[3,"MassaServiceServer"],[3,"GetBlocksBySlotsSvc"],[3,"GetDatastoreEntriesSvc"],[3,"GetLargestStakersSvc"],[3,"GetNextBlockBestParentsSvc"],[3,"GetSelectorDrawsSvc"],[3,"GetTransactionsThroughputSvc"],[3,"GetVersionSvc"],[3,"NewBlocksSvc"],[3,"NewBlocksHeadersSvc"],[3,"NewEndorsementsSvc"],[3,"NewFilledBlocksSvc"],[3,"NewOperationsSvc"],[3,"SendBlocksSvc"],[3,"SendEndorsementsSvc"],[3,"SendOperationsSvc"],[3,"TransactionsThroughputSvc"],[3,"Request"],[3,"_Inner"],[3,"Arc"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"IntoMakeService"],[3,"Context"],[4,"Poll"],[4,"Message"],[4,"Message"],[4,"Message"],[3,"HttpRuleComment"],[3,"HttpRuleComment"]]},\
"massa_protocol_exports":{"doc":"protocol component exports","t":"NNGNNNNNNNNNNNNNNEDDEEDDDNNNNNNNNMMAMAMMMMMMMMMMMMMMMMMMMMMMMMMMAAMAMMMMMDDLLLLLLLLLLLLLMMMLLLLLLLLLNNNNINNNNNNNENINNENNNNNNNNNRKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWNGHHHHHHHNHHHHHHHNNEDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMRDEDDNNNNNNNNNNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLMLLMLLLLLLLLLLMLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLAAWWWWWWWWWWRDLLLLLLMMLLLLLLLLLLLLLLWWWWRHDDMFFFFFLLLLLLFFFFFFFFLLLLLMLLLLMLLLLLLLLL","n":["ActiveConnectionMissing","AttackBlockDetected","BlocksResults","ChannelError","ContainerInconsistencyError","GeneralProtocolError","IOError","IntegratedBlock","InvalidIpError","InvalidOperationError","MassaHashError","MissingPeersError","ModelsError","NetworkError","PeerConnectionError","PropagateEndorsements","PropagateOperations","ProtocolCommand","ProtocolCommandSender","ProtocolConfig","ProtocolError","ProtocolManagementCommand","ProtocolManager","ProtocolReceivers","ProtocolSenders","SerdeError","TimeError","TokioRecvError","TokioTaskJoinError","UnexpectedNodeCommandChannelClosure","UnexpectedWriterClosure","WishlistDelta","WrongSignature","ask_block_timeout","asked_operations_pruning_period","channels","controller_channel_size","error","event_channel_size","genesis_timestamp","join_handle","last_start_period","manager_tx","max_endorsements_propagation_time","max_known_blocks_size","max_known_endorsements_size","max_known_ops_size","max_node_known_blocks_size","max_node_known_endorsements_size","max_node_known_ops_size","max_node_wanted_blocks_size","max_operations_per_block","max_operations_per_message","max_operations_propagation_time","max_send_wait","max_serialized_operations_size_per_block","max_simultaneous_ask_blocks_per_node","network_command_sender","network_event_receiver","operation_announcement_buffer_capacity","operation_announcement_interval","operation_batch_buffer_capacity","operation_batch_proc_period","protocol_command_receiver","protocol_controller","settings","t0","tests","thread_count","block_id","new","remove","storage","ProtocolReceivers","ProtocolSenders","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","from_ref","into","into","into_request","into_request","network_command_sender","network_event_receiver","protocol_command_receiver","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ActiveConnectionMissing","ChannelError","CloseConnectionWithNoConnectionToClose","ContainerInconsistencyError","DisplayToDisplayDoc","GeneralProtocolError","IOError","InvalidIpError","InvalidOperationError","MassaHashError","MissingPeersError","ModelsError","NetworkConnectionErrorType","NetworkError","PathToDisplayDoc","PeerConnectionError","PeerInfoNotFoundError","ProtocolError","SerdeError","TimeError","ToManyConnectionAttempt","ToManyConnectionFailure","TokioRecvError","TokioTaskJoinError","UnexpectedNodeCommandChannelClosure","UnexpectedWriterClosure","WrongSignature","_DERIVE_Display_FOR_ProtocolError","__displaydoc_display","__displaydoc_display","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into_request","into_request","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","AttackBlockDetected","BlocksResults","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","IntegratedBlock","META","META","META","META","META","META","META","PropagateEndorsements","PropagateOperations","ProtocolCommand","ProtocolCommandSender","ProtocolManagementCommand","ProtocolManager","WishlistDelta","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","from","from","from_ref","integrated_block","into","into","into","into","into_request","into_request","into_request","into_request","join_handle","manager_tx","new","notify_block_attack","propagate_endorsements","propagate_operations","send_wishlist_delta","serialize","stop","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","block_id","new","remove","storage","FIELDS","ProtocolConfig","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field10","__field11","__field12","__field13","__field14","__field15","__field16","__field17","__field18","__field19","__field2","__field20","__field21","__field22","__field23","__field24","__field25","__field3","__field4","__field5","__field6","__field7","__field8","__field9","__ignore","ask_block_timeout","asked_operations_pruning_period","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controller_channel_size","deserialize","deserialize","event_channel_size","expecting","expecting","fmt","fmt","fmt","from","from","from","from","from_ref","genesis_timestamp","into","into","into","into","into_request","into_request","into_request","into_request","last_start_period","lifetime","marker","max_endorsements_propagation_time","max_known_blocks_size","max_known_endorsements_size","max_known_ops_size","max_node_known_blocks_size","max_node_known_endorsements_size","max_node_known_ops_size","max_node_wanted_blocks_size","max_operations_per_block","max_operations_per_message","max_operations_propagation_time","max_send_wait","max_serialized_operations_size_per_block","max_simultaneous_ask_blocks_per_node","operation_announcement_buffer_capacity","operation_announcement_interval","operation_batch_buffer_capacity","operation_batch_proc_period","t0","thread_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","mock_network_controller","tools","","","","","","","","","","","BRANCHES","MockNetworkController","borrow","borrow_mut","close_connection","from","into","into_request","network_command_rx","network_event_tx","new","new_connection","send_ask_for_block","send_ask_for_operation","send_block_info","send_endorsements","send_header","send_operation_batch","send_operations","try_from","try_into","type_id","vzip","wait_command","","","","","BRANCHES","LAZY","NodeInfo","PROTOCOL_CONFIG","__private_field","__stability","__static_ref_initialize","asked_list","assert_banned_nodes","assert_hash_asked_to_node","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_and_connect_nodes","create_block","create_block_with_endorsements","create_block_with_operations","create_endorsement","create_node","create_operation_with_expire_period","create_protocol_config","deref","fmt","from","from","from_ref","id","into","into","into_request","into_request","keypair","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["massa_protocol_exports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::ProtocolCommand","","","","massa_protocol_exports::channels","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::protocol_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::protocol_controller::ProtocolCommand","","","","massa_protocol_exports::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::tests","","massa_protocol_exports::tests::mock_network_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_exports::tests::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Active connection missing: <code>{0}</code>","A block, or it’s header, amounted to an attempted attack.","block result: map block id to","An error occurred during channel communication: {0}","Container inconsistency error: {0}","Protocol error: {0}","IO error: {0}","Notify block integration of a given block.","The ip: <code>{0}</code> address is not valid","Invalid operation error: {0}","<code>massa_hash</code> error: {0}","Missing peers","Models error: {0}","Network error: {0}","Error during network connection: <code>{0:?}</code>","Propagate endorsements","Propagate operations (send batches) note: <code>Set&lt;OperationId&gt;</code> …","Commands that protocol worker can process","protocol command sender","Dynamic protocol configuration mix in static settings and …","protocol error","protocol management commands","protocol manager used to stop the protocol","Contains channels(receivers) used by the protocol worker","Contains channels (senders) used by the protocol worker …","Serde error: {0}","Time error: {0}","Error receiving one shot response: {0}","A tokio task has crashed err: {0}","The network controller should not drop a node command …","The writer of a node should not drop its event sender …","Wish list delta","Wrong signature","after <code>ask_block_timeout</code> milliseconds we try to ask a block …","All operations asked are prune each …","","Controller channel size","","Event channel size","Genesis timestamp","","last start period, used to discard genesis blocks","","max time we propagate endorsements","max known blocks of current nodes we keep in memory (by …","max known endorsements by our node that we kept in memory","max known operations current node kept in memory","max known blocks of foreign nodes we keep in memory (by …","max known endorsements of foreign nodes we keep in memory …","max known operations of foreign nodes we keep in memory …","max wanted blocks per node kept in memory","Maximum operations in a block","Maximum of operations sent in one message.","max time we propagate operations","Max wait time for sending a Network or Node event.","Maximum size in bytes of all serialized operations size in …","we ask for the same block …","network command sender","network event receiver","Maximum number of operations in the announcement buffer. …","Interval at which operations are announced in batches.","Maximum number of batches in the memory buffer. Dismiss …","Start processing batches in the buffer each …","protocol command receiver","","","t0","TODO: Add only if test. Removed the configuration test …","running threads count","block id","add to wish list","remove from wish list","block storage","Contains channels(receivers) used by the protocol worker","Contains channels (senders) used by the protocol worker …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","network command sender","network event receiver","protocol command receiver","","","","","","","","","","Active connection missing: <code>{0}</code>","An error occurred during channel communication: {0}","","Container inconsistency error: {0}","","Protocol error: {0}","IO error: {0}","The ip: <code>{0}</code> address is not valid","Invalid operation error: {0}","<code>massa_hash</code> error: {0}","Missing peers","Models error: {0}","","Network error: {0}","","Error during network connection: <code>{0:?}</code>","","protocol error","Serde error: {0}","Time error: {0}","","","Error receiving one shot response: {0}","A tokio task has crashed err: {0}","The network controller should not drop a node command …","The writer of a node should not drop its event sender …","Wrong signature","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A block, or it’s header, amounted to an attempted attack.","block result: map block id to","","","","","","","","Notify block integration of a given block.","","","","","","","","Propagate endorsements","Propagate operations (send batches) note: <code>Set&lt;OperationId&gt;</code> …","Commands that protocol worker can process","protocol command sender","protocol management commands","protocol manager used to stop the protocol","Wish list delta","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Sends the order to propagate the header of a block","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","new protocol manager","Notify to protocol an attack attempt.","propagate endorsements to connected node","Propagate a batch of operation ids (from pool).","update the block wish list","","Stop the protocol controller","","","","","","","","","","","","","","","","","","block id","add to wish list","remove from wish list","block storage","","Dynamic protocol configuration mix in static settings and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","after <code>ask_block_timeout</code> milliseconds we try to ask a block …","All operations asked are prune each …","","","","","","","","","","","Controller channel size","","","Event channel size","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Genesis timestamp","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","last start period, used to discard genesis blocks","","","max time we propagate endorsements","max known blocks of current nodes we keep in memory (by …","max known endorsements by our node that we kept in memory","max known operations current node kept in memory","max known blocks of foreign nodes we keep in memory (by …","max known endorsements of foreign nodes we keep in memory …","max known operations of foreign nodes we keep in memory …","max wanted blocks per node kept in memory","Maximum operations in a block","Maximum of operations sent in one message.","max time we propagate operations","Max wait time for sending a Network or Node event.","Maximum size in bytes of all serialized operations size in …","we ask for the same block …","Maximum number of operations in the announcement buffer. …","Interval at which operations are announced in batches.","Maximum number of batches in the memory buffer. Dismiss …","Start processing batches in the buffer each …","t0","running threads count","","","","","","","","","","","","","","","","","","","","","","","mock network controller","test utilities","","","","","","","","","","","","mock network controller","","","close connection","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","new mock network controller","new connection","ask for block","received ask for operation from node todo inconsistency …","Send info about block","send endorsements todo inconsistency with names","send header todo inconsistency with names","send operation ids todo inconsistency with names","send operations todo inconsistency with names","","","","","wait command","","","","","","","test utility structures keeps keypair and associated node …","protocol settings","","","","retrieve what blocks where asked to which nodes","assert a list of node(s) has been banned","assert block id has been asked to node","","","","","","","create number of nodes and connect them with protocol","Creates a block for use in protocol, without paying …","create a block with no operation","create a block with no endorsement","Creates an endorsement for use in protocol tests, without …","create node info","Create an operation, from a specific sender, and with a …","create a <code>ProtocolConfig</code> with typical values","","","Returns the argument unchanged.","Returns the argument unchanged.","","node id","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","key pair of the node","","","","","","","","",""],"i":[6,23,0,6,6,6,6,23,6,6,6,6,6,6,6,23,23,0,0,0,0,0,0,0,0,6,6,6,6,6,6,23,6,34,34,0,34,0,34,34,30,34,30,34,34,34,34,34,34,34,34,34,34,34,34,34,34,1,55,34,34,34,34,55,0,0,34,0,34,56,57,57,56,0,0,55,1,55,1,1,1,55,1,1,55,1,55,1,1,55,55,1,55,1,55,1,55,1,55,1,6,6,9,6,0,6,6,6,6,6,6,6,0,6,0,6,9,0,6,6,9,9,6,6,6,6,6,0,58,59,6,9,6,9,6,6,9,6,6,6,6,6,6,6,6,6,9,6,9,6,9,6,6,6,6,9,6,9,6,9,6,9,0,23,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,23,23,0,0,0,0,23,30,23,24,22,30,23,24,22,22,22,23,24,30,23,24,22,22,22,30,23,24,22,30,23,24,22,30,30,30,22,22,22,22,24,30,22,30,23,24,22,30,23,24,22,30,23,24,22,30,23,24,22,56,57,57,56,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,34,34,34,35,36,37,34,35,36,37,34,34,34,34,35,34,36,37,34,36,37,34,35,36,37,34,34,34,35,36,37,34,35,36,37,34,37,37,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,36,37,34,35,36,37,34,35,36,37,36,37,37,36,36,34,35,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,54,0,0,0,0,0,49,54,49,54,49,49,0,0,0,0,0,0,0,0,54,49,49,54,49,49,49,54,49,54,49,49,49,54,49,54,49,54,49,54],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],0,0,0,[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],5],[[]],[[]],[[]],[[]],[[6,7],8],[[6,7],8],[[9,7],8],[10,6],[11,6],[12,6],[13,6],[[]],[14,6],[15,6],[16,6],[17,6],[[]],[[]],[[]],[[],2],[[],2],[18],[6,[[20,[19]]]],[[],21],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,22],[[]],[[23,7],8],[[24,7],8],[[]],[[]],[[]],[[]],[[]],[[22,25,26],[[3,[6]]]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],0,0,[[[28,[[3,[27,6]]]],[29,[24]]],30],[[22,25],[[3,[6]]]],[[22,26],[[3,[6]]]],[[22,26],[[3,[6]]]],[[22,[32,[25,[20,[31]]]],[33,[25]]],[[3,[6]]]],[24,3],[30,[[3,[27,6]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[[]],0,[[],[[3,[34]]]],[[],[[3,[35]]]],0,[[36,7],8],[[37,7],8],[[34,7],8],[7,[[3,[38]]]],[7,[[3,[38]]]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[],4],[[],4],[36,3],[37,3],[37,3],[[36,39],3],[[36,40],3],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[41,42]],[[]],[[]],[[],2],0,0,[[]],[[41,42]],[[41,42,43]],[[41,42,[43,[44]]]],[[41,42,43]],[[41,42,[43,[45]]]],[[41,42,31]],[[41,42,[43,[44]]]],[[41,42,[43,[46]]]],[[],3],[[],3],[[],4],[[]],[[41,47],20],0,0,0,0,0,0,0,0,0,[[],34],[[],34],[41,[[48,[42,43]]]],[[[43,[42]],41]],[[25,42,41]],[[]],[[]],[[]],[[]],[49,49],[[]],[[50,41],[[43,[49]]]],[51,52],[[51,53,[43,[45]]],52],[[51,53,[43,[46]]],52],[[],45],[[],49],[[51,40],46],[[],34],[54,34],[[49,7],8],[[]],[[]],[[]],0,[[]],[[]],[[],2],[[],2],0,[[]],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4],[[]],[[]]],"p":[[3,"ProtocolSenders"],[3,"Request"],[4,"Result"],[3,"TypeId"],[3,"Display"],[4,"ProtocolError"],[3,"Formatter"],[6,"Result"],[4,"NetworkConnectionErrorType"],[3,"Error"],[3,"RecvError"],[4,"TimeError"],[3,"JoinError"],[4,"NetworkError"],[4,"MassaHashError"],[3,"Error"],[4,"ModelsError"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"ProtocolCommandSender"],[4,"ProtocolCommand"],[4,"ProtocolManagementCommand"],[3,"BlockId"],[3,"Storage"],[3,"NetworkEventReceiver"],[3,"JoinHandle"],[3,"Sender"],[3,"ProtocolManager"],[6,"SecuredHeader"],[6,"PreHashMap"],[6,"PreHashSet"],[3,"ProtocolConfig"],[4,"__Field"],[3,"__FieldVisitor"],[3,"__Visitor"],[3,"Error"],[15,"str"],[15,"u64"],[3,"MockNetworkController"],[3,"NodeId"],[3,"Vec"],[3,"OperationId"],[6,"SecureShareEndorsement"],[6,"SecureShareOperation"],[3,"MassaTime"],[3,"HashMap"],[3,"NodeInfo"],[15,"usize"],[3,"KeyPair"],[6,"SecureShareBlock"],[3,"Slot"],[3,"PROTOCOL_CONFIG"],[3,"ProtocolReceivers"],[13,"IntegratedBlock"],[13,"WishlistDelta"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_protocol_worker":{"doc":"Protocol component High level management of communications …","t":"AAAAAACADDDDLLLLLLLLMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLDMLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHWWWWWWWWWWWRDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDMLMLMLLLLLLMMMLLMMMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMLLLLLLLLLLLLLLLMMMMLLLMLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLRFWWWWHHHHGDLLLLLLLLMLLMMLLLLLLLL","n":["cache","checked_operations","node_info","protocol_network","protocol_worker","sig_verifier","start_protocol_controller","worker_operations_impl","HashCacheMap","HashCacheSet","LinearHashCacheMap","LinearHashCacheSet","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","container","container","container","container","contains","contains","contains_key","contains_key","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","extend","extend","extend","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get","get","get_mut","get_mut","init","init","init","init","insert","insert","insert","into","into","into","into","into_request","into_request","into_request","into_request","new","new","new","new","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","queue","queue","remove","remove","to_owned","to_owned","to_owned","to_owned","try_extend","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","vzip","CheckedOperations","borrow","borrow_mut","clone","clone_into","contains_id","contains_prefix","deref","deref_mut","deserialize","drop","extend","fmt","from","from_ref","init","insert","into","into_request","new","op_ids","op_prefixes","pointer_metadata","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","NodeInfo","asked_blocks","borrow","borrow_mut","clone","clone_into","connection_instant","deref","deref_mut","deserialize","drop","fmt","from","from_ref","get_known_block","init","insert_known_blocks","insert_known_endorsements","insert_known_ops","into","into_request","known_blocks","known_endorsements","known_operations","knows_endorsement","knows_op","new","pointer_metadata","remove_excess_known_blocks","to_owned","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip","","","","","","","ASKED_BLOCKS","ASKED_OPS","BLOCKS_INFO","BLOCK_HEADER","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CONN_CLOSED","ENDORSEMENTS","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NEW_CONN","OPS","OPS_BATCH","","","","","","","","","","","","BRANCHES","BlockInforotocolWorker","ProtocolWorkerChannels","active_nodes","announce_ops","asked_operations","ban_node","block_wishlist","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checked_endorsements","checked_headers","checked_operations","clone","clone_into","config","consensus_controller","controller_command_rx","controller_command_rx","controller_manager_rx","controller_manager_rx","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","from","from","from","from_ref","get_total_operations_size","header","init","init","init","into","into","into","into_request","into_request","into_request","network_command_sender","network_command_sender","network_event_receiver","network_event_receiver","new","new","note_endorsements_from_node","note_header_from_node","note_operations_from_node","note_operations_to_announce","on_asked_for_blocks_received","on_asked_operations_received","on_block_full_operations_received","on_block_header_received","on_block_info_received","on_block_operation_list_received","on_network_event","on_operations_announcements_received","on_operations_received","op_batch_buffer","operation_ids","operations_size","operations_to_announce","pointer_metadata","pointer_metadata","pointer_metadata","pool_controller","process_command","propagate_endorsements","prune_asked_operations","remove_asked_blocks_of_node","run_loop","start_protocol_controller","storage","storage","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","update_ask_block","update_ask_operation","vzip","vzip","vzip","SMALL_BATCH_LIMIT","verify_sigs_batch","","","","","CALLSITE","CALLSITE","META","META","OperationBatchBuffer","OperationBatchItem","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","instant","into","into_request","node_id","operations_prefix_ids","pointer_metadata","try_from","try_into","type_id","upcast_any_box","upcast_any_mut","upcast_any_ref","vzip"],"q":["massa_protocol_worker","","","","","","","","massa_protocol_worker::cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_worker::checked_operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_worker::node_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_worker::protocol_network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_protocol_worker::protocol_workermassa_protocol_worker::sig_verifier","","massa_protocol_worker::worker_operations_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Simple unreliable, but fast cache implementations","Cache of previously successfully checked operations and …","Only public for the protocol worker. Contains all what we …","Worker implementation for the network events","protocol worker Copyright (c) 2022 MASSA LABS …","Optimized batch signature verifier","","Contains the implementation of the life cycle of operations","Structure holding a finite capacity cache map that is …","Structure holding a finite capacity cache set that is …","Structure holding a finite capacity cache map that deletes …","Structure holding a finite capacity cache set that deletes …","","","","","","","","","Cache capacity","Cache capacity","Cache capacity","Cache capacity","Clear the cache","Clear the cache","Clear the cache","Clear the cache","","","","","","","","","Container","Container","Container","Container","Check if a key is present in the cache","Check if a key is present in the cache","Check if a key is present in the cache","Check if a key is present in the cache","","","","","","","","","","","","","","","","","Extend with new elements","Extend with new elements","Extend with new elements","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get an immutable reference to an element, <code>None</code> if not found","Get an immutable reference to an element, <code>None</code> if not found","Get a mutable reference to an element, <code>None</code> if not found","Get a mutable reference to an element, <code>None</code> if not found","","","","","Insert a new key. Returns <code>true</code> if the element was not in …","Insert a new item. Returns the previous value if any.","Tries to insert a new item. Does nothing and returns <code>false</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new cache instance","Create a new cache instance","Create a new cache instance","Create a new cache instance","","","","","Queue","Queue","Remove an element from cache. Returns <code>true</code> if the element …","Remove an element from cache. Returns the removed value if …","","","","","Extend with new elements. Items that are already in cache …","","","","","Tries to insert a new key, does not do anything (and …","","","","","","","","","","","","","","","","","","","","","","","","","Checked operations cache. Note: prefix and ID caches are …","","","","","Check if the cache contains a given operation ID","Check if the cache contains a given operation ID prefix","","","","","Extend with new IDs","","Returns the argument unchanged.","","","Insert an operation ID and its deduced prefix","Calls <code>U::from(self)</code>.","","Create a new checked operations cache","Linear cache of operation IDs","Linear cache and counter of operation ID prefixes","","","","","","","","","","Information about a node we are connected to, essentially …","Blocks we asked that node for","","","","","Instant when the node was added","","","","","","Returns the argument unchanged.","","Get boolean if block knows about the block and when this …","","Insert knowledge of a list of blocks in <code>NodeInfo</code>","","","Calls <code>U::from(self)</code>.","","The blocks the node “knows about”, defined as the one …","all known endorsements","all known operations (prefix-based)","","","Creates empty node info","","Remove the oldest items from <code>known_blocks</code> to ensure it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Info about a block we’ve seen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","protocol worker","channels used by the protocol worker","Ids of active nodes mapped to node info.","Announce a set of operations to active nodes who do not …","List of ids of operations that we asked to the nodes","Ban a node.","List of wanted blocks, with the info representing their …","","","","","","","List of processed endorsements","List of processed headers","Cache of processed operations","","","Protocol configuration.","Consensus controller","Channel receiving commands from the controller.","protocol command receiver","Channel to send management commands to the controller.","protocol management command receiver","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return the sum of all operation’s serialized sizes in …","The header of the block.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Associated network command sender.","network command sender","Associated network event receiver.","network event receiver","Creates a new protocol worker.","","Note endorsements coming from a given node, and propagate …","Perform checks on a header, and if valid update the node’…","Checks operations, caching knowledge of valid ones.","Add an list of operations to a buffer for announcement at …","Network ask the local node for blocks","Process the reception of a batch of asked operations, that …","Checks full block operations that we asked. (Because their …","On block header received from a node. If the header is …","","On block information received, manage when we get a list …","Manages network event Only used by the worker.","On receive a batch of operation ids <code>op_batch</code> from another …","On full operations are received from the network,","Buffer for operations that we want later","Operations ids. None if not received yet","Full operations size in bytes","Operations to announce at the next interval.","","","","Channel to send protocol pool events to the controller.","","","Clear the <code>asked_operations</code> data structure and reset …","Remove the given blocks from the local wishlist","Main protocol worker loop. Consumes self. It is mostly a …","start a new <code>ProtocolController</code> from a <code>ProtocolConfig</code>","Shared storage.","Operations and endorsements contained in the block, if we…","","","","","","","","","","","","","","","","","","","","","","","","","Limit for small batch optimization","Efficiently verifies a batch of signatures in parallel. …","","","","","","","","","Queue containing every <code>[OperationsBatchItem]</code> we want to …","Structure containing a Batch of <code>operation_ids</code> we would …","","","","","","","Returns the argument unchanged.","","last updated at instant","Calls <code>U::from(self)</code>.","","node id","operation prefix ids","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,9,8,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,10,7,8,9,10,7,8,9,10,7,8,9,10,8,10,8,10,7,8,9,10,7,8,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,9,10,7,8,7,8,9,10,9,7,8,9,10,9,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,40,37,33,40,37,33,33,33,37,37,33,33,33,40,33,40,33,40,37,33,40,37,33,40,37,33,40,37,37,33,40,37,37,33,37,33,40,37,33,40,37,33,40,37,33,40,33,40,33,37,33,33,33,33,33,33,33,33,33,33,33,33,33,33,37,37,33,33,40,37,33,33,33,33,33,33,0,33,37,37,33,40,37,33,40,37,33,40,37,33,40,37,33,40,37,33,40,37,33,33,33,40,37,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[7,[[0,[1,2,3,4,5,6]]]]]],[[[8,[[0,[1,2,3,4,5,6]]]]]],[[[9,[[0,[1,2,3,4,5,6]]]]]],[[[10,[[0,[1,2,3,4,5,6]]]]]],[[[7,[[0,[3,1,2,3,4,5,6]]]]],[[7,[[0,[3,1,2,3,4,5,6]]]]]],[[[8,[[0,[3,1,2,3,4,5,6]],3]]],[[8,[[0,[3,1,2,3,4,5,6]],3]]]],[[[9,[[0,[3,1,2,3,4,5,6]]]]],[[9,[[0,[3,1,2,3,4,5,6]]]]]],[[[10,[[0,[3,1,2,3,4,5,6]],3]]],[[10,[[0,[3,1,2,3,4,5,6]],3]]]],[[]],[[]],[[]],[[]],0,0,0,0,[[[7,[[0,[1,2,3,4,5,6]]]]],11],[[[9,[[0,[1,2,3,4,5,6]]]]],11],[[[8,[[0,[1,2,3,4,5,6]]]]],11],[[[10,[[0,[1,2,3,4,5,6]]]]],11],[12],[12],[12],[12],[12],[12],[12],[12],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[12],[12],[12],[12],[[[7,[[0,[1,2,3,4,5,6]]]],15]],[[[8,[[0,[1,2,3,4,5,6]]]],15]],[[[10,[[0,[1,2,3,4,5,6]]]],15]],[[[7,[[0,[16,1,2,3,4,5,6]]]],17],18],[[[8,[[0,[16,1,2,3,4,5,6]],16]],17],18],[[[9,[[0,[16,1,2,3,4,5,6]]]],17],18],[[[10,[[0,[16,1,2,3,4,5,6]],16]],17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[1,2,3,4,5,6]]]]],19],[[[10,[[0,[1,2,3,4,5,6]]]]],19],[[[8,[[0,[1,2,3,4,5,6]]]]],19],[[[10,[[0,[1,2,3,4,5,6]]]]],19],[[],12],[[],12],[[],12],[[],12],[[[7,[[0,[1,2,3,4,5,6]]]],[0,[1,2,3,4,5,6]]],11],[[[8,[[0,[1,2,3,4,5,6]]]],[0,[1,2,3,4,5,6]]],19],[[[10,[[0,[1,2,3,4,5,6]]]],[0,[1,2,3,4,5,6]]],11],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[12,[[7,[[0,[1,2,3,4,5,6]]]]]],[12,[[8,[[0,[1,2,3,4,5,6]]]]]],[12,[[9,[[0,[1,2,3,4,5,6]]]]]],[12,[[10,[[0,[1,2,3,4,5,6]]]]]],[[]],[[]],[[]],[[]],0,0,[[[7,[[0,[1,2,3,4,5,6]]]]],11],[[[8,[[0,[1,2,3,4,5,6]]]]],19],[[]],[[]],[[]],[[]],[[[9,[[0,[1,2,3,4,5,6]]]],15]],[[],14],[[],14],[[],14],[[],14],[[[9,[[0,[1,2,3,4,5,6]]]],[0,[1,2,3,4,5,6]]],11],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],[[],21],[[[23,[22]]],[[23,[24,22]]]],[[[23,[22]]],[[23,[24,22]]]],[[[23,[22]]],[[23,[24,22]]]],[[[23,[22]]],[[23,[24,22]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],0,[[]],[[]],[25,25],[[]],[[25,26],11],[[25,27],11],[12],[12],[[],[[14,[13]]]],[12],[[25,15]],[[25,17],18],[[]],[[]],[[],12],[[25,26]],[[]],[[],20],[12,25],0,0,[[]],[[]],[[],14],[[],14],[[],21],[[[23,[22]]],[[23,[24,22]]]],[[],24],[[],24],[[]],0,0,[[]],[[]],[28,28],[[]],0,[12],[12],[[],[[14,[13]]]],[12],[[28,17],18],[[]],[[]],[[28,29],19],[[],12],[[28,11,30,12]],[[28,15]],[[28,15]],[[]],[[],20],0,0,0,[[28,31],11],[[28,27],11],[32,28],[[]],[[28,12]],[[]],[[],14],[[],14],[[],21],[[[23,[22]]],[[23,[24,22]]]],[[],24],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,34]],0,[[33,35],[[14,[36]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[37,37],[[]],0,0,0,0,0,0,[12],[12],[12],[12],[12],[12],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[12],[12],[12],[[37,17],18],[[]],[[]],[[]],[[]],[[38,39],12],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[],20],[[],20],[[],20],0,0,0,0,[[32,40,[23,[41]],[23,[42]],38],33],[[[19,[43]],38],37],[[33,[45,[44]],35,11],[[14,[36]]]],[[33,43,35],[[14,[19,36]]]],[[33,[45,[46]],35,34],[[14,[36]]]],[[33,34]],[[33,35,45],[[14,[36]]]],[[33,35,47],[[14,[36]]]],[[33,35,29,[45,[46]],34],[[14,[36]]]],[[33,35,29,43],[[14,[36]]]],[[33,35,29,48,34],[[14,[36]]]],[[33,35,29,[45,[26]],34],[[14,[36]]]],[[33,49,34,34],[[14,[36]]]],[[33,47,35],[[14,[36]]]],[[33,35,[45,[46]],34]],0,0,0,0,[[]],[[]],[[]],0,[[33,50,34,34],[[14,[36]]]],[[33,38]],[[33,34],[[14,[36]]]],[[33,39],[[14,[36]]]],[33,[[14,[51,36]]]],[[32,52,53,[23,[41]],[23,[42]],38],[[14,[54,36]]]],0,0,[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],[[[23,[22]]],[[23,[24,22]]]],[[[23,[22]]],[[23,[24,22]]]],[[[23,[22]]],[[23,[24,22]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[33,34],[[14,[36]]]],[[33,34],[[14,[36]]]],[[]],[[]],[[]],0,[[],[[14,[36]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[12],[12],[[],[[14,[13]]]],[12],[[]],[[],12],0,[[]],[[],20],0,0,[[]],[[],14],[[],14],[[],21],[[[23,[22]]],[[23,[24,22]]]],[[],24],[[],24],[[]]],"p":[[8,"PreHashed"],[8,"Hash"],[8,"Clone"],[8,"Copy"],[8,"PartialEq"],[8,"Eq"],[3,"HashCacheSet"],[3,"HashCacheMap"],[3,"LinearHashCacheSet"],[3,"LinearHashCacheMap"],[15,"bool"],[15,"usize"],[3,"With"],[4,"Result"],[8,"IntoIterator"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"Request"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"CheckedOperations"],[3,"OperationId"],[3,"OperationPrefixId"],[3,"NodeInfo"],[3,"BlockId"],[3,"Instant"],[3,"EndorsementId"],[3,"ProtocolConfig"],[3,"ProtocolWorker"],[3,"Pin"],[3,"NodeId"],[4,"ProtocolError"],[3,"BlockInfo"],[3,"Storage"],[6,"PreHashSet"],[3,"ProtocolWorkerChannels"],[8,"ConsensusController"],[8,"PoolController"],[6,"SecuredHeader"],[6,"SecureShareEndorsement"],[3,"Vec"],[6,"SecureShareOperation"],[6,"OperationPrefixIds"],[4,"BlockInfoReply"],[4,"NetworkEvent"],[4,"ProtocolCommand"],[3,"NetworkEventReceiver"],[3,"ProtocolReceivers"],[3,"ProtocolSenders"],[3,"ProtocolManager"],[3,"OperationBatchItem"]]},\
"massa_sdk":{"doc":"Utilities for a massa client","t":"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWDDDDDDDLLLLMLLLLLLLLMMMALLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLFFLLLLLLMMMFMLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFDDDLLLLLLMMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLMMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLL","n":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client","ClientConfig","ClientV2","HttpConfig","RpcClient","RpcClientV2","WsConfig","_get_cliques","_get_graph_interval","_get_stakers","add_staking_secret_keys","api","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_store","client_config","client_config","config","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","enabled","enabled","execute_read_only_bytecode","execute_read_only_call","from","from","from","from","from_url","from_url","get_addresses","get_blocks","get_datastore_entries","get_endorsements","get_filtered_sc_output_event","get_headers","get_id_kind","get_largest_stakers","get_next_block_best_parents","get_operations","get_staking_addresses","get_status","get_version","headers","http_client","http_client","http_client_from_url","id_kind","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","max_concurrent_requests","max_log_length","max_notifs_per_subscription","max_redirections","max_request_body_size","new","new","node_add_to_bootstrap_blacklist","node_add_to_bootstrap_whitelist","node_add_to_peers_whitelist","node_ban_by_id","node_ban_by_ip","node_bootstrap_blacklist","node_bootstrap_whitelist","node_bootstrap_whitelist_allow_all","node_peers_whitelist","node_remove_from_bootstrap_blacklist","node_remove_from_bootstrap_whitelist","node_remove_from_peers_whitelist","node_sign_message","node_unban_by_id","node_unban_by_ip","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","private","public","remove_staking_addresses","request_timeout","send_operations","stop_node","subscribe_new_blocks","subscribe_new_blocks_headers","subscribe_new_filled_blocks","subscribe_new_operations","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","vzip","ws_client","ws_client_from_url","ClientConfig","HttpConfig","WsConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate_store","client_config","client_config","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","enabled","enabled","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","headers","id_kind","init","init","init","into","into","into","into_request","into_request","into_request","max_concurrent_requests","max_log_length","max_notifs_per_subscription","max_redirections","max_request_body_size","pointer_metadata","pointer_metadata","pointer_metadata","request_timeout","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip"],"q":["massa_sdk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_sdk::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client","Client common settings. the client common settings","Client V2","Http client settings. the Http client settings","Rpc client","Rpc V2 client","WebSocket client settings. the WebSocket client settings","","Get the block graph within the specified time interval. …","Returns the active stakers and their roll counts for the …","Add a vector of new secret keys for the node to use to …","API V2 component","","","","","","","","","certificate_store, <code>Native</code> or <code>WebPki</code>","common client configuration.","common client configuration.","","","","","","","","","","","","","","","","","","whether to enable HTTP.","whether to enable WS.","execute read only bytecode","execute read only SC call","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Default constructor","Default constructor","Get info by addresses","Returns block(s) information associated to a given list of …","Get datastore entries","Returns endorsement(s) information associated to a given …","Get events emitted by smart contracts with various filters","","","Get the active stakers and their active roll counts for …","Get the ids of best parents for the next block to be …","Returns operation(s) information associated to a given …","Return hash-set of staking addresses.","summary of the current state: time, last final blocks …","Get Massa node version","custom headers to pass with every request.","","","","JSON-RPC request object id data type, <code>Number</code> or <code>String</code>","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","maximum size in bytes of a response.","max length for logging for requests and responses. Logs …","Max notifications per subscription.","Max number of redirections.","maximum size in bytes of a request.","creates a new client","creates a new client","Add IP address(es) to node bootstrap blacklist.","Add IP address(es) to node bootstrap whitelist.","Add IP address(es) to node peers whitelist.","Bans given node id(s) No confirmation to expect.","Bans given ip address(es) No confirmation to expect.","Returns node bootstrap blacklist IP address(es).","Returns node bootstrap whitelist IP address(es).","Allow everyone to bootstrap from the node. remove …","Returns node peers whitelist IP address(es).","Remove IP address(es) to bootstrap blacklist.","Remove IP address(es) to bootstrap whitelist.","Remove IP address(es) to node peers whitelist.","Sign message with node’s key. Returns the public key …","Unban given node id(s) No confirmation to expect.","Unban given ip address(es) No confirmation to expect.","","","","","private component","public component","Remove a vector of addresses used to stake. No …","maximum size in bytes of a response.","Adds operations to pool. Returns operations that were ok …","Gracefully stop the node.","New produced blocks","New produced blocks headers","New produced blocks with operations content.","New produced operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client common settings. the client common settings","Http client settings. the Http client settings","WebSocket client settings. the WebSocket client settings","","","","","","","certificate_store, <code>Native</code> or <code>WebPki</code>","common client configuration.","common client configuration.","","","","","","","","","","","","","","","","","","","whether to enable HTTP.","whether to enable WS.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","custom headers to pass with every request.","JSON-RPC request object id data type, <code>Number</code> or <code>String</code>","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","maximum size in bytes of a response.","max length for logging for requests and responses. Logs …","Max notifications per subscription.","Max number of redirections.","maximum size in bytes of a request.","","","","maximum size in bytes of a response.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,47,46,1,47,21,46,1,47,21,63,18,20,0,46,1,47,21,46,1,47,21,46,1,47,21,46,1,47,21,18,20,1,1,46,1,47,21,1,21,1,1,1,1,1,0,0,21,21,1,1,1,21,63,1,21,0,63,46,1,47,21,46,1,47,21,46,1,47,21,63,63,20,20,63,46,47,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,46,1,47,21,46,46,1,63,1,1,21,21,21,21,46,1,47,21,46,1,47,21,46,1,47,21,46,1,47,21,46,1,47,21,46,1,47,21,46,1,47,21,21,0,0,0,0,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,18,20,63,18,20,63,18,20,63,18,20,63,63,63,18,20,63,18,20,63,18,20,63,63,20,20,63,63,18,20,63,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20,63,18,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[1,5],[[4,[[3,[6]]]]]],[1,[[4,[[9,[7,8]]]]]],[[1,[3,[10]]],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[11],[11],[11],[11],0,0,[[1,14],[[4,[15]]]],[[1,16],[[4,[15]]]],[[]],[[]],[[]],[[]],[[17,18],1],[[19,18,20],21],[[1,[3,[7]]],[[4,[[3,[22]]]]]],[[1,[3,[23]]],[[4,[[3,[24]]]]]],[[1,[3,[25]]],[[4,[[3,[26]]]]]],[[1,[3,[27]]],[[4,[[3,[28]]]]]],[[1,29],[[4,[[3,[30]]]]]],[[],31],[17,32],[[21,[34,[33]]],[[4,[35]]]],[21,[[4,[3]]]],[[1,[3,[36]]],[[4,[[3,[37]]]]]],[1,[[4,[[38,[7]]]]]],[1,[[4,[39]]]],[21,[[4,[40]]]],0,0,0,[[17,18],[[42,[41]]]],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],43],[[],43],[[],43],[[],43],0,0,0,0,0,[[44,45,45,18],46],[[44,45,18,20],47],[[1,[3,[44]]],4],[[1,[3,[44]]],4],[[1,[3,[44]]],4],[[1,[3,[48]]],4],[[1,[3,[44]]],4],[1,[[4,[[3,[44]]]]]],[1,[[4,[[3,[44]]]]]],[1,4],[1,[[4,[[3,[44]]]]]],[[1,[3,[44]]],4],[[1,[3,[44]]],4],[[1,[3,[44]]],4],[[1,[3,[49]]],[[4,[50]]]],[[1,[3,[48]]],4],[[1,[3,[44]]],4],[[]],[[]],[[]],[[]],0,0,[[1,[3,[7]]],4],0,[[1,[3,[51]]],[[4,[[3,[36]]]]]],[1,4],[21,[[13,[[52,[24]],53]]]],[21,[[13,[[52,[[55,[54,23]]]],53]]]],[21,[[13,[[52,[56]],53]]]],[21,[[13,[[52,[57]],53]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],58],[[],58],[[],58],[[],58],[[[60,[59]]],[[60,[61,59]]]],[[[60,[59]]],[[60,[61,59]]]],[[[60,[59]]],[[60,[61,59]]]],[[[60,[59]]],[[60,[61,59]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],0,[[17,20],62],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[63,63],[18,18],[20,20],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[],[[13,[12]]]],[[],[[13,[12]]]],[[],[[13,[12]]]],[11],[11],[11],0,0,[[63,64],65],[[18,64],65],[[20,64],65],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],43],[[],43],[[],43],0,0,0,0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],58],[[],58],[[],58],[[[60,[59]]],[[60,[61,59]]]],[[[60,[59]]],[[60,[61,59]]]],[[[60,[59]]],[[60,[61,59]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]]],"p":[[3,"RpcClient"],[3,"Clique"],[3,"Vec"],[6,"RpcResult"],[3,"TimeInterval"],[3,"BlockSummary"],[4,"Address"],[15,"u64"],[6,"PreHashMap"],[3,"String"],[15,"usize"],[3,"With"],[4,"Result"],[3,"ReadOnlyBytecodeExecution"],[3,"ExecuteReadOnlyResponse"],[3,"ReadOnlyCall"],[15,"str"],[3,"HttpConfig"],[4,"SocketAddr"],[3,"WsConfig"],[3,"RpcClientV2"],[3,"AddressInfo"],[3,"BlockId"],[3,"BlockInfo"],[3,"DatastoreEntryInput"],[3,"DatastoreEntryOutput"],[3,"EndorsementId"],[3,"EndorsementInfo"],[3,"EventFilter"],[3,"SCOutputEvent"],[3,"HeaderMap"],[4,"IdKind"],[3,"ApiRequest"],[4,"Option"],[3,"PagedVecV2"],[3,"OperationId"],[3,"OperationInfo"],[6,"PreHashSet"],[3,"NodeStatus"],[3,"Version"],[4,"HttpBackend"],[3,"HttpClient"],[3,"Request"],[4,"IpAddr"],[15,"u16"],[3,"Client"],[3,"ClientV2"],[3,"NodeId"],[15,"u8"],[3,"PubkeySig"],[3,"OperationInput"],[3,"Subscription"],[4,"Error"],[3,"BlockHeader"],[3,"SecureShare"],[3,"FilledBlock"],[3,"Operation"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"Client"],[3,"ClientConfig"],[3,"Formatter"],[6,"Result"]]},\
"massa_serialization":{"doc":"","t":"DDDIINNDDIEINDDDDDDRKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLKLLLLLMLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BoolDeserializer","BoolSerializer","DeserializeError","Deserializer","DisplayToDisplayDoc","GeneralError","NumberTooBig","OptionDeserializer","OptionSerializer","PathToDisplayDoc","SerializeError","Serializer","StringTooBig","U16VarIntDeserializer","U16VarIntSerializer","U32VarIntDeserializer","U32VarIntSerializer","U64VarIntDeserializer","U64VarIntSerializer","_DERIVE_Display_FOR_SerializeError","__displaydoc_display","__displaydoc_display","add_context","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_deserializer","data_serializer","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_char","from_error_kind","gen_varint","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","or","phantom_t","phantom_t","provide","provide","range","range","range","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["massa_serialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Deserializer for bool","Serializer for bool","","Trait that define the deserialize method that must be …","","General error {0}","Number {0} is too big to be serialized","","","","","This trait must be implemented to serializes all data in …","String too big {0},","Deserializer for  <code>u16</code> in a varint form.","Serializer for  <code>u16</code> in a varint form.","Deserializer for  <code>u32</code> in a varint form.","Serializer for  <code>u32</code> in a varint form.","Deserializer for  <code>u64</code> in a varint form.","Serializer for  <code>u64</code> in a varint form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize a value <code>T</code> from a buffer of <code>u8</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a basic serializer for  <code>u16</code> in a varint form.","Create a basic deserializer for  <code>u16</code> in a varint form.","Create a basic serializer for  <code>u32</code> in a varint form.","Create a basic deserializer for  <code>u32</code> in a varint form.","Create a basic serializer for  <code>u64</code> in a varint form.","Create a basic deserializer for  <code>u64</code> in a varint form.","","","ctor","ctor","","","","","","","","","Serialize a value <code>T</code> into a buffer of <code>u8</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,5,5,0,0,0,0,0,5,0,0,0,0,0,0,0,34,35,3,3,5,3,6,7,8,9,10,11,13,14,15,16,5,3,6,7,8,9,10,11,13,14,15,16,5,3,6,7,8,9,10,11,13,14,15,16,5,3,6,7,8,9,10,11,13,14,15,16,14,13,6,8,10,15,16,36,7,9,11,14,16,3,5,5,3,3,15,16,5,3,6,7,8,9,10,11,13,14,15,16,3,3,0,5,3,6,7,8,9,10,11,13,14,15,16,6,7,8,9,10,11,13,14,15,16,3,13,14,5,3,7,9,11,37,6,8,10,13,15,5,3,6,7,8,9,10,11,13,14,15,16,5,3,5,3,6,7,8,9,10,11,13,14,15,16,5,3,6,7,8,9,10,11,13,14,15,16,5,3,6,7,8,9,10,11,13,14,15,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],1],[[2,3],3],[[4,3],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[3,3],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[[[13,[12]]],[[13,[12]]]],[14,14],[15,15],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],8],[[],10],[[],15],[[],16],[[],[[19,[[0,[17,18]]]]]],[7,[[19,[20,[0,[17,18]]]]]],[9,[[19,[21,[0,[17,18]]]]]],[11,[[19,[22,[0,[17,18]]]]]],[14,[[19,[23,[0,[17,18]]]]]],[16,[[19,[24,[0,[17,18]]]]]],0,[[5,25],26],[[5,25],26],[[3,25],26],[[3,25],26],[[15,25],26],[[16,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,3],[4,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[[28,[20]],[28,[20]]],7],[[],8],[[[28,[21]],[28,[21]]],9],[[],10],[[[28,[22]],[28,[22]]],11],[[],13],[[],14],[[],15],[[],16],[[3,3],3],0,0,[29],[29],0,0,0,[30,[[31,[5]]]],[[6,20,30],[[31,[5]]]],[[8,21,30],[[31,[5]]]],[[10,22,30],[[31,[5]]]],[[13,23,30],[[31,[5]]]],[[15,24,30],[[31,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33]],"p":[[3,"Display"],[15,"str"],[3,"DeserializeError"],[4,"ErrorKind"],[4,"SerializeError"],[3,"U16VarIntSerializer"],[3,"U16VarIntDeserializer"],[3,"U32VarIntSerializer"],[3,"U32VarIntDeserializer"],[3,"U64VarIntSerializer"],[3,"U64VarIntDeserializer"],[8,"Clone"],[3,"OptionSerializer"],[3,"OptionDeserializer"],[3,"BoolSerializer"],[3,"BoolDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[15,"u16"],[15,"u32"],[15,"u64"],[4,"Option"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"char"],[4,"Bound"],[3,"Demand"],[3,"Vec"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"],[8,"Deserializer"],[8,"Serializer"]]},\
"massa_signature":{"doc":"Signature management","t":"DERNDDRRDDNNAAFIENINNRKKLLLLLLLLLLLLLLLDDDREDRDDRRDNDRRRNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLL","n":["KeyPair","MassaSignatureError","PUBLIC_KEY_SIZE_BYTES","ParsingError","PublicKey","PublicKeyDeserializer","SECRET_KEY_BYTES_SIZE","SIGNATURE_SIZE_BYTES","Signature","SignatureDeserializer","SignatureError","WrongPrefix","error","signature_impl","verify_signature_batch","DisplayToDisplayDoc","MassaSignatureError","ParsingError","PathToDisplayDoc","SignatureError","WrongPrefix","_DERIVE_Display_FOR_MassaSignatureError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","provide","to_owned","to_string","try_from","try_into","type_id","vzip","Base58CheckVisitor","Base58CheckVisitor","BytesVisitor","FIELDS","Field","FieldVisitor","KEYPAIR_VERSION","KeyPair","KeyPairVisitor","PUBLIC_KEY_SIZE_BYTES","PUBLIC_PREFIX","PublicKey","PublicKey","PublicKeyDeserializer","SECRET_KEY_BYTES_SIZE","SECRET_PREFIX","SIGNATURE_SIZE_BYTES","SecretKey","Signature","SignatureDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bs58_check","from_bytes","from_bytes","from_bytes","from_str","from_str","from_str","generate","get_public_key","hash","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_bytes","into_bytes","new","new","partial_cmp","serialize","serialize","serialize","sign","to_bs58_check","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_signature","verify_signature_batch","visit_bytes","visit_bytes","visit_bytes","visit_map","visit_seq","visit_str","visit_str","visit_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["massa_signature","","","","","","","","","","","","","","","massa_signature::error","","","","","","","","","","","","","","","","","","","","","","","","massa_signature::signature_impld":["<code>KeyPair</code> is used for signature and decryption","Error generated by massa-signature crate","Size of a public key","Parsing error: {0}","Public key used to check if a message was encoded by the …","Serializer for <code>Signature</code>","Size of a keypair","Size of a signature","Signature generated from a message and a <code>KeyPair</code>.","Serializer for <code>Signature</code>","Signature error : {0}","Wrong prefix for hash: expected {0}, got {1}","","","Verify a batch of signatures on a single core to gain …","","Error generated by massa-signature crate","Parsing error: {0}","","Signature error : {0}","Wrong prefix for hash: expected {0}, got {1}","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","<code>KeyPair</code> is used for signature and decryption","","Size of a public key","","Public key used to check if a message was encoded by the …","","Serializer for <code>Signature</code>","Size of a keypair","","Size of a signature","","Signature generated from a message and a <code>KeyPair</code>.","Serializer for <code>Signature</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>::serde::Deserialize</code> trait for <code>KeyPair</code> if the deserializer …","","<code>::serde::Deserialize</code> trait for <code>PublicKey</code> if the …","","<code>::serde::Deserialize</code> trait for <code>Signature</code> if the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a <code>Signature</code> using <code>bs58</code> encoding with checksum.","Convert a byte array of size <code>SECRET_KEY_BYTES_SIZE</code> to a …","Deserialize a <code>PublicKey</code> from bytes.","Deserialize a Signature from bytes.","","","","Generate a new <code>KeyPair</code>","Get the public key of the keypair","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the bytes representing the keypair","Serialize into bytes.","Serialize a Signature into bytes.","Creates a <code>SignatureDeserializer</code>","Creates a <code>SignatureDeserializer</code>","","<code>::serde::Serialize</code> trait for <code>KeyPair</code> if the serializer is …","<code>::serde::Serialize</code> trait for <code>PublicKey</code> if the serializer …","<code>::serde::Serialize</code> trait for <code>Signature</code> if the serializer …","Returns the Signature produced by signing data bytes with …","Serialize a <code>Signature</code> using <code>bs58</code> encoding with checksum.","Return the bytes representing the keypair (should be a …","Serialize a <code>PublicKey</code> as bytes.","Serialize a Signature as bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the <code>Signature</code> associated with data bytes was …","Verify a batch of signatures on a single core to gain …","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,31,32,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,16,0,0,9,16,21,22,23,24,25,10,13,11,14,9,16,21,22,23,24,25,10,13,11,14,9,10,11,9,10,11,10,13,14,9,16,10,13,11,14,10,11,21,22,23,24,25,9,9,21,22,23,24,25,10,10,11,11,9,16,21,22,23,24,25,10,13,11,14,11,9,10,11,9,10,11,9,9,10,9,16,21,22,23,24,25,10,13,11,14,9,10,11,13,14,10,9,10,11,9,11,9,10,11,9,10,11,9,10,11,9,16,21,22,23,24,25,10,13,11,14,9,16,21,22,23,24,25,10,13,11,14,9,16,21,22,23,24,25,10,13,11,14,10,0,23,24,25,22,22,21,23,24,9,16,21,22,23,24,25,10,13,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,[[]],[[],3],[[]],[[]],[1,1],[[]],[[1,4],5],[[1,4],5],[[]],[[]],[6],[[]],[[],7],[[],2],[[],2],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[10,10],12],[[],13],[[],14],[15,[[2,[9]]]],[[],[[2,[16]]]],[15,[[2,[10]]]],[13,[[19,[10,[0,[17,18]]]]]],[15,[[2,[11]]]],[14,[[19,[11,[0,[17,18]]]]]],[[10,10],20],[[11,11],20],[[21,4],5],[[22,4],5],[[23,4],5],[[24,4],5],[[25,4],5],[[9,4],5],[[9,4],5],[4,[[2,[26]]]],[4,[[2,[26]]]],[4,[[2,[26]]]],[4,[[2,[26]]]],[4,[[2,[26]]]],[[10,4],5],[[10,4],5],[[11,4],5],[[11,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[2,[11,1]]]],[[],[[2,[9,1]]]],[[],[[2,[10,1]]]],[[],[[2,[11,1]]]],[27,[[2,[9]]]],[27,[[2,[10]]]],[27,[[2,[11]]]],[[],9],[9,10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[10],[11],[[],13],[[],14],[[10,10],[[28,[12]]]],[[9,29],2],[[10,29],2],[[11,29],2],[[9,30],[[2,[11,1]]]],[11,7],[9],[10],[11],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[10,30,11],[[2,[1]]]],[[],[[2,[1]]]],[23,2],[24,2],[25,2],[22,[[2,[9]]]],[22,[[2,[9]]]],[[21,27],[[2,[16]]]],[[23,27],2],[[24,27],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"MassaSignatureError"],[4,"Result"],[3,"Display"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[3,"TypeId"],[3,"KeyPair"],[3,"PublicKey"],[3,"Signature"],[4,"Ordering"],[3,"PublicKeyDeserializer"],[3,"SignatureDeserializer"],[8,"Deserializer"],[4,"Field"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[15,"bool"],[3,"FieldVisitor"],[3,"KeyPairVisitor"],[3,"Base58CheckVisitor"],[3,"Base58CheckVisitor"],[3,"BytesVisitor"],[3,"Error"],[15,"str"],[4,"Option"],[8,"Serializer"],[3,"Hash"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_storage":{"doc":"Copyright (c) 2022 MASSA LABS info@massa.net","t":"DAMMLLLLLLLLLLLLLAMMLLLLLLLLLLMMMAMMLLLLLLLLLLLLDMLLLLLLLLLLMMMMLLLLLLLLDLLLLMLLLMLLLLLLLLDLLLLLLLLMMLLLMLLLLL","n":["Storage","block_indexes","block_owners","blocks","borrow","borrow_mut","claim_block_refs","claim_endorsement_refs","claim_operation_refs","clone","clone_into","clone_without_refs","create_root","drop","drop_block_refs","drop_endorsement_refs","drop_operation_refs","endorsement_indexes","endorsement_owners","endorsements","extend","fmt","from","from_ref","get_block_refs","get_endorsement_refs","get_op_refs","internal_claim_refs","into","into_request","local_used_blocks","local_used_endorsements","local_used_ops","operation_indexes","operation_owners","operations","read_blocks","read_endorsements","read_operations","split_off","store_block","store_endorsements","store_operations","to_owned","try_from","try_into","type_id","vzip","BlockIndexes","blocks","borrow","borrow_mut","contains","default","from","get","get_blocks_by_endorsement","get_blocks_by_operation","get_blocks_by_slot","get_blocks_created_by","index_by_creator","index_by_endorsement","index_by_op","index_by_slot","insert","into","into_request","remove","try_from","try_into","type_id","vzip","EndorsementIndexes","borrow","borrow_mut","contains","default","endorsements","from","get","get_endorsements_created_by","index_by_creator","insert","into","into_request","remove","try_from","try_into","type_id","vzip","OperationIndexes","borrow","borrow_mut","contains","default","from","get","get_operations_by_prefix","get_operations_created_by","index_by_creator","index_by_prefix","insert","into","into_request","operations","remove","try_from","try_into","type_id","vzip"],"q":["massa_storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_storage::block_indexes","","","","","","","","","","","","","","","","","","","","","","","","massa_storage::endorsement_indexes","","","","","","","","","","","","","","","","","","massa_storage::operation_indexes","","","","","","","","","","","","","","","","","","",""],"d":["A storage system for objects (blocks, operations…), …","","global block reference counter","global block storage","","","Claim block references. Returns the set of block refs that …","Claim endorsement references. Returns the set of operation …","Claim operation references. Returns the set of operation …","","","Clones the object to a new one that has no references","Creates a new <code>Storage</code> instance. Must be called only one …","cleanup on Storage instance drop","Drop block references","Drop local endorsement references. Ignores already-absent …","Drop local operation references. Ignores already-absent …","","global endorsement reference counter","global operation storage","Efficiently extends the current Storage by consuming the …","","Returns the argument unchanged.","","get the block reference ownership","get the endorsement reference ownership","get the operation reference ownership","internal helper to locally claim a reference to an object","Calls <code>U::from(self)</code>.","","locally used block references","locally used endorsement references","locally used operation references","","global operation reference counter","global operation storage","Gets a read reference to the blocks index","Gets a read reference to the endorsements index","Gets a read reference to the operations index","Efficiently splits off a subset of the reference ownership …","Store a block Note that this also claims a local reference …","Store endorsements Claims local references to the added …","Store operations Claims a local reference to the added …","","","","","","Container for all blocks and different indexes. Note: The …","Blocks structure container","","","Checks whether a block exists in global storage.","","Returns the argument unchanged.","Get a block reference by its ID Arguments:","Get the block ids of the blocks containing a given …","Get the block ids of the blocks containing a given …","Get the block ids of the blocks at a given slot. Arguments:","Get the block ids created by an address. Arguments:","Structure mapping creators with the created blocks","Structure mapping endorsement id with ids of blocks they …","Structure mapping operation id with ids of blocks they are …","Structure mapping slot with their block id","Insert a block and populate the indexes. Arguments:","Calls <code>U::from(self)</code>.","","Remove a block, remove from the indexes and do some …","","","","","Container for all endorsements and different indexes. …","","","Checks whether an endorsement exists in global storage.","","Endorsements structure container","Returns the argument unchanged.","Gets a reference to a stored endorsement, if any.","Get endorsements created by an address Arguments:","Structure mapping creators with the created endorsements","Insert an endorsement and populate the indexes. Arguments:","Calls <code>U::from(self)</code>.","","Remove a endorsement, remove from the indexes and made …","","","","","Container for all operations and different indexes. Note: …","","","Checks whether an operation exists in global storage.","","Returns the argument unchanged.","Gets a reference to a stored operation, if any.","Get operations by prefix Arguments:","Get operations created by an address Arguments:","Structure mapping creators with the created operations","Structure indexing operations by ID prefix","Insert an operation and populate the indexes. Arguments:","Calls <code>U::from(self)</code>.","","Operations structure container","Remove a operation, remove from the indexes and made some …","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[0,0,0,0,[[]],[[]],[[1,2],[[2,[3]]]],[[1,2],[[2,[4]]]],[[1,2],[[2,[5]]]],[1,1],[[]],[1,1],[[],1],[1],[[1,2]],[[1,2]],[[1,2]],0,0,0,[[1,1]],[[1,6],7],[[]],[[]],[1,2],[1,2],[1,2],[[2,8,2]],[[]],[[],9],0,0,0,0,0,0,[1,[[11,[10]]]],[1,[[11,[12]]]],[1,[[11,[13]]]],[[1,2,2,2],1],[[1,14]],[[1,[16,[15]]]],[[1,[16,[17]]]],[[]],[[],18],[[],18],[[],19],[[]],0,0,[[]],[[]],[[10,3],20],[[],10],[[]],[[10,3],[[21,[14]]]],[[10,4],[[21,[2]]]],[[10,5],[[21,[2]]]],[[10,22],[[21,[2]]]],[[10,23],[[21,[2]]]],0,0,0,0,[[10,14]],[[]],[[],9],[[10,3],[[21,[14]]]],[[],18],[[],18],[[],19],[[]],0,[[]],[[]],[[12,4],20],[[],12],0,[[]],[[12,4],[[21,[15]]]],[[12,23],[[21,[2]]]],0,[[12,15]],[[]],[[],9],[[12,4],[[21,[15]]]],[[],18],[[],18],[[],19],[[]],0,[[]],[[]],[[13,5],20],[[],13],[[]],[[13,5],[[21,[17]]]],[[13,24],[[21,[2]]]],[[13,23],[[21,[2]]]],0,0,[[13,17]],[[]],[[],9],0,[[13,5],[[21,[17]]]],[[],18],[[],18],[[],19],[[]]],"p":[[3,"Storage"],[6,"PreHashSet"],[3,"BlockId"],[3,"EndorsementId"],[3,"OperationId"],[3,"Formatter"],[6,"Result"],[6,"RwLockWriteGuard"],[3,"Request"],[3,"BlockIndexes"],[6,"RwLockReadGuard"],[3,"EndorsementIndexes"],[3,"OperationIndexes"],[6,"SecureShareBlock"],[6,"SecureShareEndorsement"],[3,"Vec"],[6,"SecureShareOperation"],[4,"Result"],[3,"TypeId"],[15,"bool"],[4,"Option"],[3,"Slot"],[4,"Address"],[3,"OperationPrefixId"]]},\
"massa_time":{"doc":"Unsigned time management","t":"NNSDDDENDLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLNNIIENRKKLLLLLLLLLLLLLL","n":["CheckedOperationError","ConversionError","EPSILON","MassaTime","MassaTimeDeserializer","MassaTimeSerializer","TimeError","TimeOverflowError","__Visitor","abs_diff","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div_time","checked_div_u64","checked_mul","checked_rem_time","checked_rem_u64","checked_sub","clone","clone_into","cmp","days_hours_mins_secs","default","deserialize","deserialize","eq","error","estimate_instant","expecting","fmt","fmt","fmt","from","from","from","from","from","from_millis","from_str","hash","into","into","into","into","lifetime","marker","max","new","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","serialize","serialize","to_duration","to_millis","to_owned","to_string","to_utc_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u64_deserializer","u64_serializer","visit_newtype_struct","visit_seq","CheckedOperationError","ConversionError","DisplayToDisplayDoc","PathToDisplayDoc","TimeError","TimeOverflowError","_DERIVE_Display_FOR_TimeError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","provide","to_owned","to_string","try_from","try_into","type_id"],"q":["massa_time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_time::error","","","","","","","","","","","","","","","","","","","","","",""],"d":["Checked operation error : {0}","Error converting","Smallest time interval","Time structure used everywhere. milliseconds since …","Deserializer for <code>MassaTime</code>","Serializer for <code>MassaTime</code>","Time related errors","Time overflow error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Conversion from <code>u64</code>, representing timestamp in …","Returns the argument unchanged.","Returns the argument unchanged.","Conversion from <code>u64</code>, representing timestamp in …","Conversion from <code>&amp;str</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Get max MassaTime value","Creates a <code>MassaTimeSerializer</code>","Creates a <code>MassaTimeDeserializer</code>","Gets current UNIX timestamp (resolution: milliseconds).","","","","","","","Conversion to <code>std::time::Duration</code>.","Conversion to <code>u64</code>, representing milliseconds.","","","","","","Conversion from <code>std::time::Duration</code>.","","","","","","","","","","","","","","","Checked operation error : {0}","Error converting","","","Time related errors","Time overflow error","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[2,2,1,0,0,0,0,2,0,1,6,7,1,13,6,7,1,13,1,1,1,1,1,1,1,1,1,1,1,6,7,1,1,0,1,13,1,1,13,6,7,1,1,13,1,1,1,6,7,1,13,13,13,1,6,7,1,1,1,1,1,6,1,1,1,1,1,1,6,7,1,1,13,6,7,1,13,6,7,1,13,7,6,13,13,2,2,0,0,0,2,0,26,27,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],[[3,[1,2]]]],[[1,1],[[3,[4,2]]]],[[1,4],[[3,[1,2]]]],[[1,4],[[3,[1,2]]]],[[1,1],[[3,[1,2]]]],[[1,4],[[3,[1,2]]]],[[1,1],[[3,[1,2]]]],[1,1],[[]],[[1,1],5],[1,[[3,[2]]]],[[],6],[7,[[10,[1,[0,[8,9]]]]]],[[],[[3,[1]]]],[[1,1],11],0,[1,[[3,[12,2]]]],[[13,14],15],[[1,14],15],[[1,14],15],[14,[[3,[16]]]],[[]],[[]],[4,1],[[]],[[]],[4,1],[17,[[3,[1]]]],[1],[[]],[[]],[[]],[[]],0,0,[[],1],[[],6],[[],7],[[],[[3,[1,2]]]],[[1,1],[[18,[5]]]],[[1,1],1],[[1,4],1],[[1,1],1],[[6,1,19],[[3,[20]]]],[1,3],[1,21],[1,4],[[]],[[],22],[1,22],[[],3],[[],3],[21,[[3,[1]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],23],[[],23],[[],23],[[],23],0,0,[13,3],[13,3],0,0,0,0,0,0,0,[[]],[[],24],[[]],[[]],[2,2],[[]],[[2,14],15],[[2,14],15],[[]],[[]],[25],[[]],[[],22],[[],3],[[],3],[[],23]],"p":[[3,"MassaTime"],[4,"TimeError"],[4,"Result"],[15,"u64"],[4,"Ordering"],[3,"MassaTimeSerializer"],[3,"MassaTimeDeserializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[15,"bool"],[3,"Instant"],[3,"__Visitor"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"str"],[4,"Option"],[3,"Vec"],[4,"SerializeError"],[3,"Duration"],[3,"String"],[3,"TypeId"],[3,"Display"],[3,"Demand"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]},\
"massa_versioning_worker":{"doc":"General description","t":"AAADNNRNRDNNNRHEEEDNNRNNNRDNNRDNNRHEDDDDDDDNNRENNRMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLMLLLLLLLLLLLMMLMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLQNQNEENNNQNNILLLLLLKLLLLLLLLLKLLKLLLLLLLLLLLLLLLDDRRDDRRRRDDDDDDDDMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLL","n":["versioning","versioning_factory","versioning_ser_der","Active","Active","Active","Active__num_enum_0__","Address","Address__num_enum_0__","Advance","Advance","BeforeInitialState","Block","Block__num_enum_0__","CALLSITE","ComponentState","ComponentStateMessages","ComponentStateTypeId","Defined","Defined","Defined","Defined__num_enum_0__","EmptyHistory","Error","Error","Error__num_enum_0__","Failed","Failed","Failed","Failed__num_enum_0__","LockedIn","LockedIn","LockedIn","LockedIn__num_enum_0__","META","MipComponent","MipInfo","MipState","MipStatsConfig","MipStore","MipStoreRaw","MipStoreStats","Started","Started","Started","Started__num_enum_0__","StateAtError","Unpredictable","VM","VM__num_enum_0__","activation_delay","activation_delay","active","advance_states_on_updated_stats","at","block_count_considered","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","components","config","counters_max","default","defined","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error","execute","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_network_version_current","get_network_version_to_announce","hash","hash","history","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_coherent_with","latest_announcements","locked_in","name","network_version_counters","new","new","now","on_advance","on_advance","on_advance","on_advance","on_advance","on_advance","on_advance","partial_cmp","partial_cmp","partial_cmp","provide","start","start_timestamp","started","state","state_at","stats","store","threshold","threshold","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_network_version_stats","update_network_version_stats","update_with","update_with","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Arguments","At","Error","Exact","FactoryError","FactoryStrategy","Latest","OnCreate","OnStateNotReady","Output","UnimplementedVersion","UnknownVersion","VersioningFactory","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","fmt","fmt","fmt","from","from","from","from_ref","get_all_active_component_versions","get_all_component_versions","get_component","get_latest_component_version","get_latest_component_version_at","get_versioning_store","into","into","into_request","into_request","provide","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AdvanceDeserializer","AdvanceSerializer","COMPONENT_STATE_ID_VARIANT_COUNT","COMPONENT_STATE_VARIANT_COUNT","ComponentStateDeserializer","ComponentStateSerializer","MIP_INFO_COMPONENTS_MAX_ENTRIES","MIP_INFO_NAME_MAX_LEN","MIP_STORE_MAX_ENTRIES","MIP_STORE_MAX_SIZE","MipInfoDeserializer","MipInfoSerializer","MipStateDeserializer","MipStateSerializer","MipStoreRawDeserializer","MipStoreRawSerializer","MipStoreStatsDeserializer","MipStoreStatsSerializer","advance_deserializer","advance_serializer","amount_deserializer","amount_deserializer","amount_serializer","amount_serializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","config","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","from","from","from","from","from","from","from","from","from","from","from","from","info_deserializer","info_serializer","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","len_deserializer","new","new","new","new","new","new","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize","state_deserializer","state_deserializer","state_deserializer","state_id_deserializer","state_serializer","state_serializer","stats_deserializer","stats_serializer","time_deserializer","time_deserializer","time_deserializer","time_serializer","time_serializer","time_serializer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_deserializer","u32_deserializer","u32_deserializer","u32_deserializer","u32_serializer","u32_serializer","u32_serializer","u32_serializer","u32_serializer","u64_deserializer","u64_serializer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["massa_versioning_worker","","","massa_versioning_worker::versioningmassa_versioning_worker::versioning_factory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_versioning_worker::versioning_ser_derd":["","","","State machine for a Versioning component that tracks the …","","","","","","A message to update the <code>ComponentState</code>","","","","","","State machine for a Versioning component that tracks the …","","","State machine for a Versioning component that tracks the …","","","","","","","","State machine for a Versioning component that tracks the …","","","","State machine for a Versioning component that tracks the …","","","","","Versioning component enum","MIP info (name &amp; versions &amp; time range for a MIP)","Wrapper of ComponentState (in order to keep state history)","Statistics in MipStoreRaw","Database for all MIP info","Store of all versioning info","In order for a MIP to be accepted, we compute stats about …","State machine for a Versioning component that tracks the …","","","","Error returned by MipStateHistory::state_at","","","","Once deployment has been locked, wait for this duration …","TODO","","Used internally by <code>update_network_version_stats</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Components concerned by this versioning (e.g. a new Block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Retrieve the current network version to set in block header","Retrieve the network version number to announce in block …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Given a corresponding VersioningInfo, check if state is …","","","MIP name or descriptive name","","Create","","Current time (timestamp)","","Update state from state Defined","Update state from state Started","Update state from state LockedIn …","Update state (will always stay in state Active)","Update state (will always stay in state Failed)","Advance the state Can be called as multiple times as it …","","","","","a timestamp at which the version gains its meaning (e.g. …","from VersioningInfo.start","","","Query state at given timestamp TODO: add doc for start &amp; …","","","","% of past blocks with this version","a timestamp at the which the deployment is considered …","from VersioningInfo.timeout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update our store with another (usually after a bootstrap …","Network (or global) version (to be included in block …","","","","","","","","","","","","","","","","","","Arguments struct in order to create Self::Output","Create an object given a timestamp (e.g slot)","Error if object cannot be created (+ used for …","Require to create an object with this specific version","Factory error","Strategy to use when creating a new object from a factory","use get_latest_version (see Factory trait)","","","Factory will create only one object of a given type, so a …","","","Trait for Factory that create objects based on versioning …","","","","","","","Create an object of type Self::Output","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Get all versions in ‘Active state’ for the associated …","Get all versions (at any state) for the associated …","Return the MipComponent associated with return type …","Get latest component version (aka last active for the …","Get latest version at given timestamp (e.g. slot)","Access to the MipStore","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A Deserializer for <code>Advance</code>","Serializer for <code>Advance</code>","","","A Deserializer for ComponentState`","Serializer for <code>ComponentState</code>","","Ser / Der","","","Deserializer for <code>MipInfo</code>","Serializer for <code>MipInfo</code>","A Deserializer for <code>MipState</code>","Serializer for <code>MipState</code>","A Deserializer for `VersioningStoreRaw","Serializer for <code>VersioningStoreRaw</code>","A Deserializer for `MipStoreStats","Serializer for <code>VersioningStoreRaw</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates a new <code>Serializer</code>","Creates a new <code>MipInfoDeserializer</code>","Creates a new <code>Serializer</code>","Creates a new ``","Creates a new <code>Serializer</code>","Creates a new <code>AdvanceDeserializer</code>","Creates a new <code>MipStateSerializer</code>","Creates a new <code>MipStateDeserializer</code>","Creates a new <code>Serializer</code>","Creates a new ``","Creates a new <code>Serializer</code>","Creates a new ``","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,11,0,4,0,0,13,20,4,0,0,0,0,0,0,1,11,0,20,1,11,0,0,1,11,0,0,1,11,0,0,0,0,0,0,0,0,0,0,1,11,0,0,20,4,0,5,12,1,2,8,16,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,4,5,1,6,7,8,9,10,11,12,13,14,15,16,17,2,4,5,1,6,7,8,9,10,11,12,13,14,15,16,17,2,5,11,12,5,17,16,1,1,4,5,1,6,7,8,9,10,11,12,13,14,20,16,17,2,4,5,11,12,1,1,1,4,5,1,6,7,8,9,10,11,12,13,14,20,20,15,16,17,2,4,5,1,6,7,8,9,10,11,11,12,13,14,20,15,16,17,2,4,5,1,6,7,8,9,10,11,12,13,14,15,16,17,2,4,5,15,15,4,5,14,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,14,17,1,5,17,14,17,12,1,6,7,8,9,10,14,5,11,12,20,5,12,1,14,14,2,2,7,12,5,12,4,5,1,6,7,8,9,10,11,12,13,14,15,16,17,2,20,4,4,5,1,6,7,8,9,10,11,11,12,13,14,20,15,15,16,17,2,2,4,11,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,15,2,15,2,5,4,5,1,6,7,8,9,10,11,12,13,14,20,15,16,17,2,54,33,54,33,0,0,33,34,34,54,34,34,0,34,33,34,33,33,33,54,34,34,33,34,33,33,33,54,54,54,54,54,54,34,33,34,33,34,33,34,34,33,34,33,34,33,34,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,43,40,42,39,41,37,38,39,40,41,42,43,44,45,50,46,51,37,38,39,40,41,42,43,44,45,50,46,51,50,37,38,39,40,41,42,43,44,45,46,38,40,42,44,50,51,37,38,39,40,41,42,43,44,45,50,46,51,51,46,37,38,39,40,41,42,43,44,45,50,46,51,37,38,39,40,41,42,43,44,45,50,46,51,38,37,38,39,40,41,42,43,44,45,50,46,51,37,39,41,43,45,46,40,44,51,44,43,46,51,46,38,40,42,37,39,41,37,38,39,40,41,42,43,44,45,50,46,51,37,38,39,40,41,42,43,44,45,50,46,51,37,38,39,40,41,42,43,44,45,50,46,51,38,44,50,51,37,39,43,45,46,50,45,37,38,39,40,41,42,43,44,45,50,46,51],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,3]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,5],[1,1],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],18],[[11,11],18],[[12,12],18],0,0,0,[[],1],[[],1],[[4,4],19],[[5,5],19],[[1,1],19],[[6,6],19],[[7,7],19],[[8,8],19],[[9,9],19],[[10,10],19],[[11,11],19],[[12,12],19],[[13,13],19],[[14,14],19],[[20,20],19],[[16,16],19],[[17,17],19],[[2,2],19],[[],19],[[],19],[[],19],[[],19],[[],1],[[1,13],1],[[],1],[[4,21],22],[[5,21],22],[[1,21],22],[[6,21],22],[[7,21],22],[[8,21],22],[[9,21],22],[[10,21],22],[[11,21],22],[[12,21],22],[[13,21],22],[[14,21],22],[[20,21],22],[[20,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[2,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[15,24],[15,24],[4],[5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[14,5],19],0,[3,1],0,0,[3,14],[16,17],0,[[1,12],1],[[6,12],1],[[7,12],1],[[8,12],1],[[9,12],9],[[10,12],10],[[14,12]],[[5,5],[[26,[18]]]],[[11,11],[[26,[18]]]],[[12,12],[[26,[18]]]],[27],0,0,[28,1],0,[[14,3,3,3],[[29,[11,20]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],29],[24,[[29,[4,[31,[4]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[24,[[29,[11,[31,[11]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],[[29,[15]]]],[[],29],[[],29],[[],29],[[],29],[[],[[29,[2]]]],[[],[[29,[4,[31,[4]]]]]],[[],[[29,[11,[31,[11]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[15,3,26]],[[2,3,26]],[[15,15],29],[[2,2],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[33,33],[[]],[[[26,[33]]],29],[[34,21],22],[[34,21],22],[[33,21],22],[[]],[24,33],[[]],[[]],[[],[[35,[24]]]],[[],[[36,[24,11]]]],[[],4],[[],24],[3,[[29,[24,34]]]],[[],15],[[]],[[]],[[],25],[[],25],[27],[[]],[[],30],[[],29],[[],29],[[],29],[[],29],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[38,[[49,[5,[0,[47,48]]]]]],[40,[[49,[1,[0,[47,48]]]]]],[42,[[49,[12,[0,[47,48]]]]]],[44,[[49,[14,[0,[47,48]]]]]],[50,[[49,[17,[0,[47,48]]]]]],[51,[[49,[2,[0,[47,48]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[52,52],50],[[],46],[[52,52],51],[[37,5,35],[[29,[53]]]],[[39,1,35],[[29,[53]]]],[[41,12,35],[[29,[53]]]],[[43,14,35],[[29,[53]]]],[[45,17,35],[[29,[53]]]],[[46,2,35],[[29,[53]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"ComponentState"],[3,"MipStoreRaw"],[3,"MassaTime"],[4,"MipComponent"],[3,"MipInfo"],[3,"Defined"],[3,"Started"],[3,"LockedIn"],[3,"Active"],[3,"Failed"],[4,"ComponentStateTypeId"],[3,"Advance"],[4,"ComponentStateMessages"],[3,"MipState"],[3,"MipStore"],[3,"MipStatsConfig"],[3,"MipStoreStats"],[4,"Ordering"],[15,"bool"],[4,"StateAtError"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"u32"],[3,"Request"],[4,"Option"],[3,"Demand"],[3,"Amount"],[4,"Result"],[3,"String"],[3,"TryFromPrimitiveError"],[3,"TypeId"],[4,"FactoryStrategy"],[4,"FactoryError"],[3,"Vec"],[3,"BTreeMap"],[3,"MipInfoSerializer"],[3,"MipInfoDeserializer"],[3,"ComponentStateSerializer"],[3,"ComponentStateDeserializer"],[3,"AdvanceSerializer"],[3,"AdvanceDeserializer"],[3,"MipStateSerializer"],[3,"MipStateDeserializer"],[3,"MipStoreStatsSerializer"],[3,"MipStoreRawSerializer"],[8,"ParseError"],[8,"ContextError"],[6,"IResult"],[3,"MipStoreStatsDeserializer"],[3,"MipStoreRawDeserializer"],[15,"usize"],[4,"SerializeError"],[8,"VersioningFactory"]]},\
"massa_wallet":{"doc":"Standalone massa wallet Keypair management","t":"RNNNNNNNDEEDDNNNNLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMINNNNNNINERKKLLLLLLLLLLLLLLLLLLLL","n":["FIELDS","IOError","JSONError","MassaCipherError","MassaHashError","MissingKeyError","ModelsError","SerdeqsError","Wallet","WalletError","__Field","__FieldVisitor","__Visitor","__field0","__field1","__field2","__ignore","add_keypairs","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_operation","deserialize","deserialize","error","expecting","expecting","find_associated_keypair","find_associated_public_key","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","get_full_wallet","get_wallet_address_list","into","into","into","into","into_request","into_request","into_request","into_request","keys","lifetime","marker","new","password","remove_addresses","save","serialize","sign_message","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_map","visit_seq","visit_str","visit_u64","vzip","vzip","vzip","vzip","wallet_path","DisplayToDisplayDoc","IOError","JSONError","MassaCipherError","MassaHashError","MissingKeyError","ModelsError","PathToDisplayDoc","SerdeqsError","WalletError","_DERIVE_Display_FOR_WalletError","__displaydoc_display","__displaydoc_display","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip"],"q":["massa_wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","massa_wallet::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","IO error: {0}","JSON error: {0}","<code>MassaCipher</code> error: {0}","<code>MassaHash</code> error: {0}","Missing key error: {0}","Models error: {0}","Serde Sq error: {0}","Contains the keypairs created in the wallet.","wallet error","","","","","","","","Adds a list of keypairs to the wallet, returns their …","","","","","","","","","","","Signs an operation with the keypair corresponding to the …","","","","","","Finds the keypair associated with given address","Finds the public key associated with given address","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Export keys and addresses","Get all addresses in the wallet","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Keypairs and addresses","","","Generates a new wallet initialized with the provided file …","Password","Removes wallet entries given a list of addresses. Missing …","Save the wallet in json format in a file Only the keypair …","","Sign arbitrary message with the associated keypair returns …","","","","","","","","","","","","","","","","","","","","","","","","Path to the file containing the keypairs (encrypted)","","IO error: {0}","JSON error: {0}","<code>MassaCipher</code> error: {0}","<code>MassaHash</code> error: {0}","Missing key error: {0}","Models error: {0}","","Serde Sq error: {0}","wallet error","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,0,0,0,0,0,9,9,9,9,1,1,9,10,13,1,9,10,13,1,1,1,1,9,0,10,13,1,1,1,1,10,13,1,9,10,13,1,1,1,1,9,10,13,1,9,10,13,1,13,13,1,1,1,1,1,1,1,1,1,9,10,13,1,9,10,13,1,9,10,13,10,13,13,10,10,1,9,10,13,1,0,5,5,5,5,5,5,0,5,0,0,36,37,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],[[6,[[3,[4]],5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[1,7,4],[[6,[8,5]]]],[[],[[6,[1]]]],[[],[[6,[9]]]],0,[[10,11],12],[[13,11],12],[[1,4],[[14,[2]]]],[[1,4],[[14,[15]]]],[[1,11],12],[[1,11],12],[11,[[6,[16]]]],[11,[[6,[16]]]],[[]],[[]],[[]],[[]],[[]],[1,17],[1,[[18,[4]]]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],0,0,0,[[20,21],[[6,[1,5]]]],0,[[1,3],[[6,[5]]]],[1,[[6,[5]]]],[1,6],[[1,4,[3,[22]]],[[14,[23]]]],[[]],[[],21],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],24],[[],24],[[],24],[[],24],[10,6],[13,6],[13,6],[[10,25],6],[[10,26],6],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],27],[[]],[[]],[[5,11],12],[[5,11],12],[28,5],[29,5],[30,5],[31,5],[[]],[32,5],[33,5],[[]],[[],19],[34],[5,[[14,[35]]]],[[],21],[[],6],[[],6],[[],24],[[]]],"p":[[3,"Wallet"],[3,"KeyPair"],[3,"Vec"],[4,"Address"],[4,"WalletError"],[4,"Result"],[3,"Operation"],[6,"SecureShareOperation"],[4,"__Field"],[3,"__FieldVisitor"],[3,"Formatter"],[6,"Result"],[3,"__Visitor"],[4,"Option"],[3,"PublicKey"],[3,"Error"],[6,"PreHashMap"],[6,"PreHashSet"],[3,"Request"],[3,"PathBuf"],[3,"String"],[15,"u8"],[3,"PubkeySig"],[3,"TypeId"],[15,"str"],[15,"u64"],[3,"Display"],[4,"Error"],[4,"MassaHashError"],[3,"Error"],[4,"ModelsError"],[4,"CipherError"],[3,"Error"],[3,"Demand"],[8,"Error"],[8,"DisplayToDisplayDoc"],[8,"PathToDisplayDoc"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
